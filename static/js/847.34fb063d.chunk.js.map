{"version":3,"file":"static/js/847.34fb063d.chunk.js","mappings":"qLACA,EAAsB,sB,SCETA,EAAW,WACtB,OACE,+BACE,gBAAKC,UAAWC,EAAhB,UACE,gBAAKC,KAAMC,EAAAA,EAAS,yBAI3B,C,qECVD,EAAsB,qB,SCETC,EAAU,WACrB,OACE,+BACE,gBAAKJ,UAAWC,EAAhB,UACE,gBAAKC,KAAMC,EAAAA,EAAS,iBAI3B,C,mFCVD,EAAyB,uBAAzB,EAA6D,2BAA7D,EAAsG,4BAAtG,EAAsJ,kCAAtJ,EAAqM,2BAArM,EAA+O,6BAA/O,EAA6W,yBAA7W,EAAkZ,0BAAlZ,EAAmb,qBAAnb,EAAgd,sBAAhd,EAA+e,uB,UCA/e,EAAuB,mBAAvB,EAAgD,kB,SCahD,EAXa,SAAC,GAA2D,IAAzDE,EAAwD,EAAxDA,KAAwD,IAAlDC,IAAAA,OAAkD,MAA5C,KAA4C,MAAtCC,MAAAA,OAAsC,MAA9B,OAA8B,MAAtBC,OAAAA,OAAsB,MAAb,OAAa,EACtE,OACE,iBAAKR,UAAWS,EAAhB,WACE,gBAAKF,MAAOA,EAAOC,OAAQA,EAAQE,OAAO,eAA1C,UACE,gBAAKR,KAAMC,EAAAA,EAASE,MAErBC,IAAO,gBAAKN,UAAWS,EAAhB,SAA0BH,MAGvC,E,oBCXD,EAA+B,gCAA/B,EAAkF,oCAAlF,EAA0I,qCAA1I,EAA2L,6BAA3L,EAAwO,iCAAxO,EAA0R,kCAA1R,EAA8U,mCAA9U,EAAwX,wBAAxX,EAAwZ,yBAAxZ,EAA0b,0B,mBCO7aK,EAAY,WACvB,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAEpBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAoB,SAAAC,GACxBA,EAAMC,kBACNV,EAAeS,EAAME,OAAOC,WAC5BV,GAAU,GACVI,GAASO,EAAAA,EAAAA,IAAY,CAAEV,MAAOM,EAAME,OAAOC,UAAUE,gBACtD,EAmBD,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAA0B,SAAAP,GAC9BP,GAAU,EACX,EAID,OAFAe,OAAOC,iBAAiB,QAASF,GAE1B,WACLC,OAAOE,oBAAoB,QAASH,EACrC,CACF,GAAE,KAGD,gBACE9B,UACa,SAAViB,GAAoBR,GACV,UAAVQ,GAAqBR,GACX,WAAVQ,GAAsBR,EAJ3B,UAOE,iBAAKT,UAAWS,EAAhB,WACE,oBACET,UACY,WAAViB,EAAqBR,EAAwBA,EAE/CyB,QA9BY,SAAAX,GAClBA,EAAMC,kBACNR,GAAWD,EACZ,EAuBK,UAMmB,KAAhBF,EAAqB,QAAUA,GAChC,SAAC,EAAD,CAAMR,KAAK,qBAAqBE,MAAM,OAAOC,OAAO,aAEtD,gBACER,UAAWe,EAASN,EAAoBA,EACxCyB,QAAS,SAAAC,GAAC,OAAIA,EAAEX,iBAAN,EAFZ,UAIE,2BACE,eACExB,UACY,WAAViB,EAAqBR,EAAsBA,EAE7CyB,QAASZ,EAJX,SAKC,WAGD,eACEtB,UACY,WAAViB,EAAqBR,EAAsBA,EAE7CyB,QAASZ,EAJX,SAKC,UAGD,eACEtB,UACY,WAAViB,EAAqBR,EAAsBA,EAE7CyB,QAASZ,EAJX,SAKC,oBAQZ,E,6BC1FD,EAAuB,oBAAvB,EAAmD,qBAAnD,EAAiF,sBAAjF,EAA+G,qBAA/G,EAAgJ,yBAAhJ,EAAmL,uBAAnL,EAAyN,4BCK1M,SAASc,EAAT,GAAuC,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SACjCrB,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAoB1B,OAZAU,EAAAA,EAAAA,YAAU,WACR,IAAMU,EAAgB,SAAAJ,GACL,WAAXA,EAAEK,MACJH,GAEH,EAED,OADAN,OAAOC,iBAAiB,UAAWO,GAC5B,WACLR,OAAOE,oBAAoB,UAAWM,EACvC,CACF,GAAE,CAACF,KAGF,gBAAKrC,UAAWS,EAAayB,QAnBJ,SAAAX,GACrBA,EAAMkB,gBAAkBlB,EAAME,QAChCY,GAEH,EAeC,UACE,gBACErC,UACa,SAAViB,GAAoBR,GACV,UAAVQ,GAAqBR,GACX,WAAVQ,GAAsBR,EAJ3B,UAOE,gBAAKT,UAAqB,SAAViB,EAAmBR,EAAgBA,EAAnD,UACE,iCACE,mBACEiC,KAAK,SACL1C,UAAWS,EACXyB,QAASG,EAHX,UAKE,gBAAK9B,MAAO,GAAIC,OAAQ,GAAI,aAAW,QAAvC,UACE,gBAAKN,KAAMC,EAAAA,EAAS,sBAGvBmC,UAMZ,C,qDCpDD,EAAwB,+BAAxB,EAA8D,8BAA9D,EAAoG,+BAApG,GAAyI,6BAAzI,GAA6K,8BAA7K,GAAsN,kCAAtN,GAAgQ,+BCyDhQ,IACA,GAAe,IAA0B,8DCDzC,IACA,GAAe,IAA0B,+DCDzC,IACA,GAAe,IAA0B,gE,WCezC,GAhEe,SAAC,GAAgC,IAA9BK,EAA6B,EAA7BA,KAAMT,EAAuB,EAAvBA,QAASU,EAAc,EAAdA,QACzBC,GAAO3B,EAAAA,EAAAA,IAAY4B,EAAAA,IACnBC,GAAY7B,EAAAA,EAAAA,IAAY8B,EAAAA,IACxBC,EAAgB,CACpBC,KAAMC,GACNC,MAAOC,GACPC,OAAQC,IAENC,EAAMX,EAAKY,UAAYZ,EAAKY,UAAYR,EAAcJ,EAAK5B,OAC3D2B,IAASY,EAAMZ,GAQnB,OACE,8BACGG,GACC,mBACEW,MAAO,CACLC,WAAY,OACZC,OAAQ,OACRC,QAAS,KAJb,UAOE,SAAC,MAAD,CACErD,OAAO,KACPD,MAAM,KACNuD,OAAQ,EACRC,MApBQ,CAChBb,KAAM,UACNE,MAAO,UACPE,OAAQ,WAiBiBT,EAAK5B,OACtB+C,UAAU,eACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,OAIb,mBACET,MAAO,CACLC,WAAY,OACZC,OAAQ,OACRC,QAAS,KAJb,UAOE,gBACEL,IAAKA,EACLY,IAAKvB,EAAKxC,KACVE,MAAOoC,EACPnC,OAAQmC,EACRT,QAASA,EACTwB,MAAO,CACLW,aAAc,MACdC,OAAQ,UACRV,OAAQ,0BAOrB,ECvED,GAA4B,+BAA5B,GAA6E,qCAA7E,GAA0H,2BAA1H,GAA8J,4BAA9J,GAAgM,yBAAhM,GAAqO,+BCO9N,SAASW,GAAT,GAAsC,IAAlBC,EAAiB,EAAjBA,cACnB3B,GAAO3B,EAAAA,EAAAA,IAAY4B,EAAAA,IACnB2B,GAAYC,EAAAA,EAAAA,QAAO,MAEnBzB,EAAgB,CACpBC,KAAMC,GACNC,MAAOC,GACPC,OAAQC,IAEJoB,EAAiB9B,EAAKY,UACxBZ,EAAKY,UACLR,EAAcJ,EAAK5B,OAEvB,GAA8BL,EAAAA,EAAAA,UAAS+D,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAYA,OACE,oBAAS7E,UAAWC,GAApB,UACE,iBAAKD,UAAWC,GAAhB,WACE,kBACED,UAAWC,GACXyC,KAAK,OACLoC,OAAO,oBACPC,SAjBgB,SAAA5C,GACtB,IAAM6C,EAAe7C,EAAEV,OAAOwD,MAAM,GACpCT,EAAcQ,GACdH,EAAWK,IAAIC,gBAAgBH,GAChC,EAcOI,IAAKX,KAEP,kBAAOzE,UAAWC,GAAlB,UACE,gBAAKD,UAAWC,GAAhB,UACE,gBACEuD,IAAKoB,EACLR,IAAI,YACJpE,UAAWC,GACXoF,OApBc,WACpBT,EAAQU,WAAW,UAAUJ,IAAIK,gBAAgBX,EACtD,SAsBK,iBAAM5E,UAAWC,GAAYiC,QAAS,kBAAMuC,EAAUe,QAAQC,OAAxB,EAAtC,SAAuE,UAM9E,CC7CD,IAAMC,IAAmBC,EAAAA,EAAAA,IAAO,CAC9BtF,MAAMuF,EAAAA,EAAAA,MACHC,IAAI,EAAG,wBACPC,IAAI,GAAI,yBACRC,KACC,qBACA,6DACA,SAAAC,GAAK,MAAI,iDAAuCD,KAAKC,EAAhD,IAENC,QAAQ,iDAAwC,uBACnDC,OAAON,EAAAA,EAAAA,MACJM,QACAD,QAAQ,0CAA2C,wBACtDE,UAAUP,EAAAA,EAAAA,MACPC,IAAI,EAAG,wBACPC,IAAI,GAAI,yBACRC,KACC,YACA,kCACA,SAAAC,GAAK,OAAK,KAAKD,KAAKC,EAAf,IAEND,KACC,qBACA,iEACA,SAAAC,GAAK,MAAI,iDAAuCD,KAAKC,EAAhD,IAENC,QAAQ,iDAAwC,6BAGxCG,GAAkB,WAC7B,IAAMhF,GAAWC,EAAAA,EAAAA,MACXwB,GAAO3B,EAAAA,EAAAA,IAAY4B,EAAAA,IAEnBuD,EAAgB,CACpBC,OAAQ,KACRjG,KAAMwC,EAAKxC,KACX6F,MAAOrD,EAAKqD,MACZC,SAAU,IAGZ,GAA0CvF,EAAAA,EAAAA,WAAS,GAAnD,eAAO2F,EAAP,KAAsBC,EAAtB,KACA,GAAwC5F,EAAAA,EAAAA,WAAS,SAACb,EAAA,EAAD,KAAjD,eAAO0G,EAAP,KAAqBC,EAArB,KAEMC,EAAgB,WACpBH,GAAkBD,GAClBG,EAAiBH,GAA8B,SAACxG,EAAA,EAAD,KAAd,SAACK,EAAA,EAAD,IAClC,EAEKwG,EAAY,SAAC,GAAc,IAAZvG,EAAW,EAAXA,KACnB,OACE,SAAC,KAAD,CACEA,KAAMA,EACNwG,OAAQ,SAAAC,GAAO,OAAI,cAAG9G,UAAWC,GAAd,SAA6B6G,GAAjC,GAGpB,EAEKC,EAAY,mCAAG,WAAOC,EAAP,qFAAiBC,EAAjB,EAAiBA,cAAeC,EAAhC,EAAgCA,UACnDD,GAAc,IACVE,EAAW,IAAIC,UACVC,IAAI,OAAQL,EAAO3G,MAC5B8G,EAASE,IAAI,QAASL,EAAOd,OACzBc,EAAOV,QAAQa,EAASE,IAAI,SAAUL,EAAOV,QAC7CU,EAAOb,UAAUgB,EAASE,IAAI,WAAYL,EAAOb,UANlC,mBAQX/E,GAASkG,EAAAA,EAAAA,IAAWH,IART,QASjBD,IACAK,GAAe,GAVE,2EAajBN,GAAc,GAbG,6EAAH,wDAiBlB,GAAsCrG,EAAAA,EAAAA,WAAS,GAA/C,eAAO4G,EAAP,KAAoBD,EAApB,KACME,EAAc,kBAAMF,GAAe,SAAAG,GAAK,OAAKA,CAAL,GAA1B,EAEpB,OACE,4BACE,SAAC,GAAD,CAAQ/E,KAAM,GAAIT,QAASuF,IAC1BD,IACC,SAACpF,EAAD,CAAOC,QAASoF,EAAhB,UACE,SAAC,KAAD,CACEE,aAAa,MACbtB,cAAeA,EACfuB,iBAAkBlC,GAClBmC,SAAUd,EAJZ,SAMG,gBAAGe,EAAH,EAAGA,OAAgBC,GAAnB,EAAWf,OAAX,EAAmBe,eAAnB,OACC,UAAC,KAAD,CAAM/H,UAAWC,EAAjB,WACE,iBAAKD,UAAWC,GAAhB,WACE,cAAGD,UAAWC,EAAd,SAA4B,kBAC5B,SAACsE,GAAD,CACEC,cAAe,SAAAwD,GACbD,EAAc,SAAUC,EACzB,QAGL,iBAAKhI,UAAWC,GAAhB,WACE,SAAC,KAAD,CACED,UAAWC,EACXyC,KAAK,OACLrC,KAAK,OACL4H,YAAY,oBAEbH,EAAOzH,OAAQ,SAACuG,EAAD,CAAWvG,KAAK,aAElC,iBAAKL,UAAWC,GAAhB,WACE,SAAC,KAAD,CACED,UAAWC,EACXyC,KAAK,QACLrC,KAAK,QACL4H,YAAY,qBAEbH,EAAO5B,QAAS,SAACU,EAAD,CAAWvG,KAAK,cAEnC,iBAAKL,UAAWC,GAAhB,WACE,SAAC,KAAD,CACED,UAAWC,EACXyC,KAAM6D,EAAgB,OAAS,WAC/BlG,KAAK,WACL4H,YAAY,qBAEd,iBAAMjI,UAAWC,GAAiBiC,QAASyE,EAA3C,SACGF,IAEFqB,EAAO3B,WAAY,SAACS,EAAD,CAAWvG,KAAK,iBAEtC,mBAAQL,UAAWC,GAAYyC,KAAK,SAApC,UACE,iBAAK1C,UAAWC,GAAhB,WACE,0BAAM,UACN,SAACiI,EAAA,EAAD,WA3CP,QAqDZ,ECxGD,GA3Ce,SAAC,GAAe,IAAbzC,EAAY,EAAZA,MACV5C,GAAO3B,EAAAA,EAAAA,IAAY4B,EAAAA,IACnB7B,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAE1B,OACE,gBACEnB,UACa,SAAViB,GAAoBR,GACV,UAAVQ,GAAqBR,GACX,WAAVQ,GAAsBR,EAJ3B,UAOE,iBAAKT,UAAWS,EAAhB,WACE,gBAAKT,UAAWS,EAAhB,UACE,mBACEyB,QAASuD,EACTzF,UACY,WAAViB,EAAqBR,EAAwBA,EAHjD,UAME,SAAC,EAAD,CACET,UAAWS,EACXJ,KAAK,aACLE,MAAM,OACNC,OAAO,cAKb,iBAAKR,UAAWS,EAAhB,WACE,SAACE,EAAD,KACA,gBAAIX,UAAWS,EAAf,WACE,eAAIT,UAAWS,EAAf,SAA+BoC,EAAKxC,QACpC,yBACE,SAAC+F,GAAD,gBAOb,E,iCChDD,IAAgB,QAAU,iCAAiC,MAAQ,+BAA+B,OAAS,gCAAgC,aAAe,sCAAsC,WAAa,oCAAoC,UAAY,mCAAmC,SAAW,kCAAkC,WAAa,oCAAoC,mBAAqB,4CAA4C,YAAc,qCAAqC,eAAiB,wCAAwC,WAAa,oCAAoC,WAAa,oCAAoC,iBAAmB,0CAA0C,aAAe,sCAAsC,cAAgB,uCAAuC,iBAAmB,0CAA0C,MAAQ,+BAA+B,UAAY,oCC+Gt6B,GAtGwB,WACtB,OAA4BxF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAgDJ,EAAAA,EAAAA,UAAS,IAAzD,eAAOuH,EAAP,KAAyBC,EAAzB,KACQC,GAAcC,EAAAA,GAAAA,MAAdD,UACFjH,GAAWC,EAAAA,EAAAA,MACXJ,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,KAE1BU,EAAAA,EAAAA,YAAU,WACRwG,GAAajH,GAASmH,EAAAA,GAAAA,IAAeF,GACtC,GAAE,CAACjH,EAAUiH,IAEd,IAAMG,GAAYtH,EAAAA,EAAAA,IAAYuH,GAAAA,IACxBC,GAAexH,EAAAA,EAAAA,IAAYyH,GAAAA,IAE3BlB,EAAc,kBAAMzG,GAAU,SAAA0G,GAAK,OAAKA,CAAL,GAArB,EAEdkB,EAAU,CACd,CACE7E,MACY,SAAV9C,EAAmB,2BAA6B,wBAClD4H,SAAU,oBAEZ,CAAE9E,MAAO,UAAW8E,SAAU,OAC9B,CAAE9E,MAAO,UAAW8E,SAAU,UAC9B,CAAE9E,MAAO,UAAW8E,SAAU,SAG1BC,EAAuB,SAAAvH,GAC3B6G,EAAoB7G,EAAME,OAAOuE,MAClC,EAEK+C,EACJP,EAAUQ,OAAS,IAClBN,EAAaO,MAAQP,EAAaO,MAAQT,EAAU,GAAGS,OAE1D,OACE,iBAAKjJ,UAAWC,GAAAA,QAAhB,WACE,eAAID,UAAWC,GAAAA,MAAf,SAA8B8I,KAC9B,oBACE/I,UAAqB,WAAViB,EAAqBhB,GAAAA,aAAsBA,GAAAA,OACtDiC,QAASuF,EAFX,WAIE,iBACEzH,UACa,SAAViB,GAAoBhB,GAAAA,UACV,UAAVgB,GAAqBhB,GAAAA,WACX,WAAVgB,GAAsBhB,GAAAA,WAEzBM,MAAO,GACPC,OAAQ,GACR,aAAW,SARb,WAUE,2BAAO,iBACP,gBAAKN,KAAMC,EAAAA,EAAS,qBAEtB,iBAAMH,UAAWC,GAAAA,WAAjB,SAAoC,eAErCc,IACC,SAACqB,EAAD,CAAOC,QAASoF,EAAhB,UACE,kBAAMzH,UAAWC,GAAAA,mBAAjB,WACE,eAAID,UAAWC,GAAAA,YAAf,SAAmC,aACnC,gBAAKD,UAAqB,SAAViB,EAAmBhB,GAAAA,eAAwBA,GAAAA,cAC3D,iBAAKD,UAAWC,GAAAA,WAAhB,WACE,eAAID,UAAWC,GAAAA,iBAAf,SAAwC,iBACxC,mBAAQyC,KAAK,SAAS1C,UAAWC,GAAAA,aAAjC,SAAsD,iBAIxD,gBAAKD,UAAWC,GAAAA,iBAAhB,SACG2I,EAAQM,KAAI,SAACC,EAAQC,GAAT,OACX,mBAAmBpJ,UAAWC,GAAAA,MAA9B,WACE,kBACEyC,KAAK,QACL1C,UAAWC,GAAAA,wBACXI,KAAK,WACL2F,MAAK,UAAKmD,EAAON,UACjBQ,QAASlB,IAAqBgB,EAAON,SACrC9D,SAAU+D,KAEZ,gBACE9I,UAAWC,GAAAA,UACXyD,MAAO,CAAE4F,gBAAiBH,EAAOpF,UAEnC,gBACE/D,UAAWC,GAAAA,cACXyD,MAAO,CACL6F,QAASJ,EAAON,WAAaV,EAAmB,EAAI,GACpD7D,OAAQ,WAJZ,SAOG6E,EAAON,aApBAO,EADD,aA+B1B,E,iCC7GD,GAAyB,uBAAzB,GAA+D,6BC6B/D,GAxBe,SAAC,GAAsC,IAApCI,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,KAAMvH,EAAuB,EAAvBA,QAASwH,EAAc,EAAdA,QAC/BzI,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1B,OACE,oBACEnB,UAAqB,WAAViB,EAAqBhB,GAAsBA,GACtDyC,KAAK,SACLR,QAASA,EAHX,UAKGwH,GACC,SAAC,KAAD,CAAY3F,MAAM,UAAUpB,KAAM,KAElC6G,IACE,iBAAKjJ,MAAO,GAAIC,OAAQ,GAAI,aAAW,OAAvC,WACE,2BAAO,eACP,gBAAKN,KAAMC,EAAAA,EAAS,mBAK1B,0BAAOsJ,MAGZ,EC3BD,GAAwB,2BAAxB,GAA2D,2BAA3D,GAAoG,iCAApG,GAAgJ,8BAAhJ,GAA+L,oCAA/L,GAA4Q,2BAA5Q,GAAgV,yBAAhV,GAAqX,+BAArX,GAA2d,6BAA3d,GAAwgB,mCAAxgB,GAA2jB,mCAA3jB,GAA2mB,gCAA3mB,GAAwpB,gCAAxpB,GAAssB,iC,8DCOvrB,SAASE,GAAT,GAA6D,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,eAIjDC,EAAa,CAAEC,OAAQ,IAAIC,MAEjC,GAAwCpJ,EAAAA,EAAAA,WAAS,GAAjD,eAAOqJ,EAAP,KAAqBC,EAArB,KACMC,GAAYzF,EAAAA,EAAAA,QAAO,MACnB0F,GAAY1F,EAAAA,EAAAA,QAAO,MACzB,GAA0C9D,EAAAA,EAAAA,UAAS,MAAnD,eAAOyJ,EAAP,KAAsBC,EAAtB,KACMC,GAASC,EAAAA,GAAAA,GAAUL,EAAU3E,QAAS6E,EAAe,CACzDI,UAAW,QAiBTC,GAAS,uBAAG,uBAKhB,OAJId,IACFc,GAAS,yBAAG,eAAYC,EAAAA,GAAAA,GAAOf,EAAa,MAAM,SAIlD,4BACE,gBAAKxE,IAAK+E,EAAV,UACE,oBACE/E,IAAKgF,EACL1H,KAAK,SACL,aAAW,cACXR,QAvBkB,SAAAC,GACxB+H,GAAgB,EACjB,EAiBK,UAKC,cACYS,EAAAA,GAAAA,GAAOf,EAAa,mBAGlCK,IACC,SAAC,KAAD,CACEW,QAAM,EADR,UAUE,kCACEC,UAAW,EACXnH,MAAO6G,EAAOtK,OAAOsK,OACrBvK,UAAU,gBACNuK,EAAOO,WAAWP,QAJxB,IAKEnF,IAAKkF,EACLS,KAAK,SACL,aAAW,qBAPb,UASE,SAAC,MAAD,CACEC,aAAcf,EACdgB,KAAK,SACLC,aAActB,EACduB,SAAUvB,EACVwB,SAjDY,SAAAC,GACtBxB,EAAewB,GACXA,GAVc,WAAO,IAAD,EACxBnB,GAAgB,GACP,OAATE,QAAS,IAATA,GAAA,UAAAA,EAAW5E,eAAX,SAAoB8F,OACrB,CAQGC,EAEH,EA6CWC,iBAAe,EACfC,SAAO,EACPC,UAAQ,EACRC,SAAU7B,EACVY,OAAQA,WASrB,CC5ED,IAAMkB,GAAQ,IAAI5B,KAEZ3D,GAAgB,CACpB4C,MAAO,GACP4C,YAAa,GACbhD,SAAU,GACViD,SAAUF,IAGNG,IAAiBpG,EAAAA,EAAAA,IAAO,CAC5BsD,OAAOrD,EAAAA,EAAAA,MAAS8F,WAChB7C,UAAUjD,EAAAA,EAAAA,MACViG,aAAajG,EAAAA,EAAAA,MAAS8F,aAGXM,GAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5B,GAA0BrL,EAAAA,EAAAA,UAAS,IAAnC,eAAOqI,EAAP,KAAciD,EAAd,KACA,GAAsCtL,EAAAA,EAAAA,UAAS,IAA/C,eAAOiL,EAAP,KAAoBM,EAApB,KACA,GAAgCvL,EAAAA,EAAAA,UAAS,IAAzC,eAAOiI,EAAP,KAAiBuD,EAAjB,KAGMhL,GAAWC,EAAAA,EAAAA,MACXJ,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAEpBkL,GAAkBnL,EAAAA,EAAAA,IAAYoL,GAAAA,IAEpC,GAAsC1L,EAAAA,EAAAA,WAAS,GAA/C,eAAO4G,EAAP,KAAoBD,EAApB,KACME,EAAc,kBAAMF,GAAe,SAAAG,GAAK,OAAKA,CAAL,GAA1B,EAEpB,GAAsC9G,EAAAA,EAAAA,UAASgL,IAA/C,eAAOhC,EAAP,KAAoBC,EAApB,KAEM0C,EAAe,CACnB,CAAExI,MAAO,UAAW8E,SAAU,OAC9B,CAAE9E,MAAO,UAAW8E,SAAU,UAC9B,CAAE9E,MAAO,UAAW8E,SAAU,QAC9B,CACE9E,MACY,SAAV9C,EAAmB,2BAA6B,wBAClD4H,SAAU,YAIR2D,EAAe,SAAC,EAA6BzE,GAAmB,IAAD,IAA7CtG,OAAUpB,EAAmC,EAAnCA,KAAM2F,EAA6B,EAA7BA,MAEtC,OADA+B,EAAc1H,EAAM2F,GACZ3F,GACN,IAAK,QACH,OAAO6L,EAASlG,GAClB,IAAK,cACH,OAAOmG,EAAenG,GACxB,IAAK,WACH,OAAOoG,EAAYpG,GACrB,QACE,OAEL,EAmBD,OACE,4BACE,SAAC,GAAD,CAAQwD,KAAK,OAAOC,KAAK,mBAAmBvH,QAASuF,IACpDD,IACC,SAACpF,EAAD,CAAOC,QAASoF,EAAhB,UACE,SAAC,KAAD,CACEpB,cAAeA,GACfuB,iBAAkBmE,GAClBlE,SA1BO,SAACb,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cAC1B7F,GACEqL,EAAAA,GAAAA,IAAQ,CACNxD,MAAOA,EACP4C,YAAaA,EACbhD,SAAUA,GAAY,UACtBiD,UAAUnB,EAAAA,GAAAA,GAAOf,EAAa,cAC9B8C,OAAQT,KAEVU,MAAK,YACJN,GAAmB5E,GACrB,IACDyE,EAAS,IACTC,EAAe,IACfC,EAAY,IACZnF,GAAc,EACf,EAOO,SAKG,gBAAGc,EAAH,EAAGA,cAAH,OACC,UAAC,KAAD,CAAMJ,aAAa,MAAnB,WACE,cAAG3H,UAAWC,GAAd,SAA4B,cAC5B,SAAC,KAAD,CACED,UACY,WAAViB,EAAqBhB,GAAqBA,GAE5CyC,KAAK,OACLrC,KAAK,QACL4H,YAAY,QACZjC,MAAOiD,EACPlE,SAAU,SAAA5C,GAAC,OAAIqK,EAAarK,EAAG4F,EAApB,KAGb,SAAC,KAAD,CACE6E,GAAG,WACH5M,UACY,WAAViB,EAAqBhB,GAAwBA,GAE/CI,KAAK,cACL4H,YAAY,cACZjC,MAAO6F,EACP9G,SAAU,SAAA5C,GAAC,OAAIqK,EAAarK,EAAG4F,EAApB,KAEb,iBAAK/H,UAAU,OAAf,WACE,iBAAMA,UAAWC,GAAjB,SAA+B,iBAC/B,gBAAKD,UAAWC,GAAhB,SACGsM,EAAarD,KAAI,SAACC,EAAQC,GAAT,OAChB,mBAAmBpJ,UAAWC,GAA9B,WACE,SAAC,KAAD,CACEyC,KAAK,QACLrC,KAAK,WACL2F,MAAK,UAAKmD,EAAON,UACjB7I,UAAWC,GACX8E,SAAU,SAAA5C,GAAC,OAAIqK,EAAarK,EAAG4F,EAApB,KAEb,iBACE/H,UAAWC,GACXyD,MAAO,CAAE4F,gBAAiBH,EAAOpF,WAVzBqF,EADI,UAiBtB,iBAAMpJ,UAAWC,GAAjB,SAA+B,cAC/B,SAAC0J,GAAD,CACEC,YAAaA,EACbC,eAAgBA,KAGlB,oBACE7J,UAAqB,WAAViB,EAAqBhB,GAAmBA,GACnDyC,KAAK,SACLR,QAAS,WACP6F,EAAc,QAASkB,GACvBlB,EAAc,cAAe8D,EAE9B,EAPH,UASGQ,GACC,SAAC,KAAD,CAAYtI,MAAM,UAAUpB,KAAM,MAElC,gBAAK3C,UACO,WAAViB,EAAqBhB,GAAuBA,GAD9C,UAGE,gBAAKC,KAAMC,EAAAA,EAAS,kBAGxB,0BAAM,aApEX,QA6EZ,EC/KD,IAAgB,MAAQ,4BAA4B,MAAQ,4BAA4B,YAAc,kCAAkC,SAAW,+BAA+B,eAAiB,qCAAqC,KAAO,2BAA2B,MAAQ,4BAA4B,MAAQ,4BAA4B,IAAM,0BAA0B,UAAY,gCAAgC,mBAAqB,yCAAyC,QAAU,8BAA8B,cAAgB,oCAAoC,cAAgB,oCAAoC,WAAa,iCAAiC,WAAa,iCAAiC,YAAc,kCAAkC,WAAa,kCCkB/vB4L,IAAiBpG,EAAAA,EAAAA,IAAO,CAC5BsD,OAAOrD,EAAAA,EAAAA,MAAS8F,WAChB7C,UAAUjD,EAAAA,EAAAA,MAAS8F,WACnBG,aAAajG,EAAAA,EAAAA,MAAS8F,aAGXmB,GAAe,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEtBC,EAKHD,EALFE,IACOC,EAILH,EAJF7D,MACaiE,EAGXJ,EAHFjB,YACUsB,EAERL,EAFFjE,SACAiD,EACEgB,EADFhB,SAGIO,GAAkBnL,EAAAA,EAAAA,IAAYoL,GAAAA,IAEpC,GAAsC1L,EAAAA,EAAAA,WAAS,GAA/C,eAAO4G,EAAP,KAAoBD,EAApB,KACME,EAAc,kBAAMF,GAAe,SAAAG,GAAK,OAAKA,CAAL,GAA1B,EACdzG,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BT,EAAAA,EAAAA,UAASqM,GAAnC,eAAOhE,EAAP,KAAciD,EAAd,KACA,GAAsCtL,EAAAA,EAAAA,UAASsM,GAA/C,eAAOrB,EAAP,KAAoBM,EAApB,KACA,GAAgCvL,EAAAA,EAAAA,UAASuM,GAAzC,eAAOtE,EAAP,KAAiBuD,EAAjB,KACMgB,EAAiB,IAAIpD,KACzB8B,EAASuB,QAAQ,IAAK,KAAKA,QAAQ,oBAAqB,aAE1D,GAA4CzM,EAAAA,EAAAA,UAASwM,GAArD,eAAOE,EAAP,KAAuBC,EAAvB,KAEMlH,EAAgB,CACpB4C,MAAO,GACP4C,YAAa,GACbhD,SAAUsE,GAGNX,EAAe,SAAC,EAA6BzE,GAAmB,IAAD,IAA7CtG,OAAUpB,EAAmC,EAAnCA,KAAM2F,EAA6B,EAA7BA,MAEtC,OADA+B,EAAc1H,EAAM2F,GACZ3F,GACN,IAAK,QACH,OAAO6L,EAASlG,GAClB,IAAK,cACH,OAAOmG,EAAenG,GACxB,IAAK,WACH,OAAOoG,EAAYpG,GACrB,QACE,OAEL,EAqBKuG,EAAe,CACnB,CAAExI,MAAO,UAAW8E,SAAU,OAC9B,CAAE9E,MAAO,UAAW8E,SAAU,UAC9B,CAAE9E,MAAO,UAAW8E,SAAU,QAC9B,CACE9E,MACY,SAAV9C,EAAmB,2BAA6B,wBAClD4H,SAAU,YAId,OACE,4BACE,mBAAQ7I,UAAWC,GAAAA,WAAmBiC,QAASuF,EAA/C,UACE,iBACElH,MAAO,GACPC,OAAQ,GACR,aAAW,cACXR,UAAWC,GAAAA,IAJb,WAME,2BAAO,eACP,gBAAKC,KAAMC,EAAAA,EAAS,sBAGvBqH,IACC,SAACpF,EAAD,CAAOC,QAASoF,EAAhB,UACE,SAAC,KAAD,CACEpB,cAAeA,EACfuB,iBAAkBmE,GAClBlE,SAhDO,SAACb,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cAC1BuG,QAAQC,IAAIV,GACZ3L,GACEsM,EAAAA,GAAAA,IAAW,CACTC,GAAIZ,EACJa,KAAM,CACJ3E,MAAOA,EACP4C,YAAaA,EACbhD,SAAUA,EACViD,UAAUnB,EAAAA,GAAAA,GAAO2C,EAAgB,kBAIpCX,MAAK,YACHN,GAAmB5E,GACrB,IACAoG,KAAK5G,GAAc,GACvB,EA4BO,SAKG,gBAAGc,EAAH,EAAGA,cAAH,OACC,UAAC,KAAD,CAAMJ,aAAa,MAAnB,WACE,cAAG3H,UAAWC,GAAAA,MAAd,SAA4B,eAC5B,SAAC,KAAD,CACED,UACY,WAAViB,EAAqBhB,GAAAA,YAAqBA,GAAAA,MAE5CyC,KAAK,OACLrC,KAAK,QACL4H,YAAY,QACZjC,MAAOiD,EACPlE,SAAU,SAAA5C,GAAC,OAAIqK,EAAarK,EAAG4F,EAApB,KAGb,SAAC,KAAD,CACE6E,GAAG,WACH5M,UACY,WAAViB,EAAqBhB,GAAAA,eAAwBA,GAAAA,SAE/CI,KAAK,cACL4H,YAAY,cACZjC,MAAO6F,EACP9G,SAAU,SAAA5C,GAAC,OAAIqK,EAAarK,EAAG4F,EAApB,KAEb,iBAAK/H,UAAU,OAAf,WACE,iBAAMA,UAAWC,GAAAA,MAAjB,SAA+B,iBAC/B,gBAAKD,UAAWC,GAAAA,cAAhB,SACGsM,EAAarD,KAAI,SAACC,EAAQC,GAAT,OAChB,mBAAmBpJ,UAAWC,GAAAA,WAA9B,WACE,SAAC,KAAD,CACEyC,KAAK,QACLrC,KAAK,WACL2F,MAAK,UAAKmD,EAAON,UACjB7I,UAAWC,GAAAA,WACX8E,SAAU,SAAA5C,GAAC,OAAIqK,EAAarK,EAAG4F,EAApB,KAEb,iBACE/H,UAAWC,GAAAA,YACXyD,MAAO,CAAE4F,gBAAiBH,EAAOpF,WAVzBqF,EADI,UAkBtB,SAACO,GAAD,CACEC,YAAa0D,EACbzD,eAAgB0D,KAGlB,oBACEvN,UAAqB,WAAViB,EAAqBhB,GAAAA,UAAmBA,GAAAA,IACnDyC,KAAK,SACLR,QAAS,WACP6F,EAAc,QAASkB,GACvBlB,EAAc,cAAe8D,EAC9B,EANH,UAQGQ,GACC,SAAC,KAAD,CAAYtI,MAAM,UAAUpB,KAAM,MAElC,gBACE3C,UACY,WAAViB,EACIhB,GAAAA,cACAA,GAAAA,QAJR,UAOE,gBAAKC,KAAMC,EAAAA,EAAS,kBAGxB,0BAAM,cAvEX,QAgFZ,ECrMD,IAAgB,KAAO,mBAAmB,MAAQ,oBAAoB,OAAS,qBAAqB,KAAO,mBAAmB,YAAc,0BAA0B,MAAQ,oBAAoB,YAAc,0BAA0B,SAAW,uBAAuB,aAAe,2BAA2B,aAAe,2BAA2B,WAAa,yBAAyB,mBAAqB,iCAAiC,QAAU,sBAAsB,YAAc,0BAA0B,UAAY,wBAAwB,SAAW,uBAAuB,SAAW,uBAAuB,KAAO,mBAAmB,cAAgB,4BAA4B,gBAAkB,8BAA8B,aAAe,2BAA2B,iBAAmB,gC,WCMhxB,SAAS2N,GAAT,GAA6C,IAAtBzL,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SACvCrB,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,KAC1BU,EAAAA,EAAAA,YAAU,WACR,IAAMU,EAAgB,SAAAJ,GACL,WAAXA,EAAEK,MACJH,GAEH,EAID,OAFAN,OAAOC,iBAAiB,UAAWO,GAE5B,WACLR,OAAOE,oBAAoB,UAAWM,EACvC,CACF,GAAE,CAACF,IAEJ,IAOM0L,EAAkBC,SAASC,eAFP,cAG1B,IAAKF,EACH,OAAO,KAET,IAAMG,GACJ,gBACElO,UACa,SAAViB,GAAoBR,GACV,UAAVQ,GAAqBR,GACX,WAAVQ,GAAsBR,EAJ3B,UAOE,gBAAKT,UAAWS,EAAayB,QAnBN,SAAAX,GACrBA,EAAMkB,gBAAkBlB,EAAME,QAChCY,GAEH,EAeG,UACE,iBAAKrC,UAAqB,SAAViB,EAAmBR,EAAgBA,EAAnD,WACE,mBAAQiC,KAAK,SAAS1C,UAAWS,EAAkByB,QAASG,EAA5D,UACE,gBAAK9B,MAAO,GAAIC,OAAQ,GAAI,aAAW,QAAvC,UACE,gBAAKN,KAAMC,EAAAA,EAAS,sBAGvBmC,SAMT,OAAO6L,GAAAA,aAAsBD,EAAcH,EAC5C,CCvDD,OAA8H,0BAA9H,GAA+J,yBAA/J,GAAgM,0BAAhM,GAAkO,0BAAlO,GAAuQ,6BAAvQ,GAAgT,8BAAhT,GAA0V,8BAA1V,GAAoY,8BAApY,GAAwa,wBAAxa,GAA8c,gCAA9c,GAA0f,8BAA1f,GAA8hB,wBAA9hB,GAA4jB,wBAA5jB,GAAgmB,8BAAhmB,GAAqoB,yBAAroB,GAA2qB,+BCoE3qB,GA1DmB,SAAC,GAAY,IAAVJ,EAAS,EAATA,GACdtB,GAAkBnL,EAAAA,EAAAA,IAAYoL,GAAAA,IACpC,GAAwC1L,EAAAA,EAAAA,WAAS,GAAjD,eAAOwN,EAAP,KAAqBC,EAArB,KAEMjN,GAAWC,EAAAA,EAAAA,MAEjB,GAAsCT,EAAAA,EAAAA,WAAS,GAA/C,eAAO4G,EAAP,KAAoBD,EAApB,KACME,EAAc,kBAAMF,GAAe,SAAAG,GAAK,OAAKA,CAAL,GAA1B,EASpB,OACE,4BACE,mBAAQ1H,UAAW0D,GAAAA,WAAkBxB,QAASuF,EAA9C,UACE,iBACElH,MAAO,GACPC,OAAQ,GACR,aAAW,aACXR,UAAW0D,GAAAA,IAJb,WAME,2BAAO,gBACP,gBAAKxD,KAAMC,EAAAA,EAAS,qBAIvBqH,IACC,UAACsG,GAAD,CAAazL,QAASoF,EAAtB,WACE,eAAIzH,UAAWC,GAAf,SAA6B,iBAE7B,eAAID,UAAWC,GAAf,SAA4B,+CAI5B,oBACED,UAAWC,GACXyC,KAAK,SACLiJ,SAAUU,EACVnK,QAjCc,WACtBmM,GAAgB,GAChBjN,GAASkN,EAAAA,GAAAA,IAAWX,IAAKhB,MAAK,YAC3BN,GAAmB5E,GACrB,GACF,EAwBO,UAMG2G,GAAgB/B,IACf,SAAC,KAAD,CAAYtI,MAAM,UAAUpB,KAAM,KAClC,UAGJ,mBAAQ3C,UAAWC,GAAYyC,KAAK,SAASR,QAASuF,EAAtD,SAAmE,YAO5E,EC+BD,GA3Fa,SAAC,GAAc,IAAZqF,EAAW,EAAXA,KACDa,EAA+Cb,EAApDE,IAAS/D,EAA2C6D,EAA3C7D,MAAO4C,EAAoCiB,EAApCjB,YAAahD,EAAuBiE,EAAvBjE,SAAUiD,EAAagB,EAAbhB,SACzC7K,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAEpBiM,EAAiB,IAAIpD,KACzB8B,EAASuB,QAAQ,IAAK,KAAKA,QAAQ,oBAAqB,aAGpDkB,EADc,IAAIvE,KACUoD,EAElC,OACE,gBACEpN,UACa,SAAViB,GAAoBhB,GAAAA,MACV,UAAVgB,GAAqBhB,GAAAA,OACX,WAAVgB,GAAsBhB,GAAAA,OAJ3B,UAOE,iBAAKD,UAAS,UAAKC,GAAAA,KAAL,YAAoBA,GAAO,YAAD,OAAa4I,KAArD,WACE,iBAAK7I,UAAWC,GAAAA,YAAhB,WACE,eAAID,UAAWC,GAAAA,MAAf,SAA8BgJ,KAC9B,cAAGjJ,UAAWC,GAAAA,YAAd,SAAmC4L,QAErC,iBAAK7L,UAAqB,SAAViB,EAAmBhB,GAAAA,YAAqBA,GAAAA,QAAxD,WACE,iBAAKD,UAAWC,GAAAA,SAAhB,WACE,eAAID,UAAWC,GAAAA,SAAf,SAAgC,cAChC,cACED,UAAS,UAAKC,GAAAA,aAAL,YACPA,GAAO,YAAD,OAAa4I,KAFvB,SAKGA,QAGL,iBAAK7I,UAAWC,GAAAA,SAAhB,WACE,eAAID,UAAWC,GAAAA,SAAf,SAAgC,cAChC,cAAGD,UAAWC,GAAAA,aAAd,SAAoC6L,QAEtC,gBAAI9L,UAAWC,GAAAA,UAAf,WACE,eAAID,UAAWC,GAAAA,SAAf,SACGsO,IACC,mBAAQvO,UAAWC,GAAAA,mBAAnB,UACE,iBACEM,MAAO,GACPC,OAAQ,GACR,aAAW,YACXR,UAAWC,GAAAA,KAJb,WAME,2BAAO,cACP,gBAAKC,KAAMC,EAAAA,EAAS,uBAK5B,eAAIH,UAAWC,GAAAA,SAAf,UACE,mBAAQD,UAAWC,GAAAA,WAAnB,UACE,iBACEM,MAAO,GACPC,OAAQ,GACR,aAAW,iCACXR,UAAWC,GAAAA,IAJb,WAME,2BAAO,eACP,gBAAKC,KAAMC,EAAAA,EAAS,4CAI1B,eAAIH,UAAWC,GAAAA,SAAf,UAYE,SAAC4M,GAAD,CAAcC,KAAMA,OAEtB,eAAI9M,UAAWC,GAAAA,SAAf,UACE,SAAC,GAAD,CAAY0N,GAAIA,gBAO7B,EC/FD,GAAwB,0BAAxB,GAA8F,0BCM/E,SAASa,GAAT,GAA6C,IAAvBb,EAAsB,EAAtBA,GAAI1E,EAAkB,EAAlBA,MAAO5G,EAAW,EAAXA,QACxCgK,GAAkBnL,EAAAA,EAAAA,IAAYoL,GAAAA,IAC9BlL,GAAWC,EAAAA,EAAAA,MACjB,GAAgCT,EAAAA,EAAAA,UAASqI,GAAzC,eAAOwF,EAAP,KAAiBC,EAAjB,KAYA,OACE,iCACE,eAAI1O,UAAWC,GAAf,SAA6B,iBAC7B,kBAAM4H,SATW,SAAAtG,GACnBA,EAAMoN,iBACNvN,GAASwN,EAAAA,GAAAA,IAAa,CAACjB,EAAI,CAAE1E,MAAOwF,MAAc9B,MAAK,YACpDN,GAAmBhK,GACrB,GACF,EAIG,WACE,kBACErC,UAAWC,GACXyC,KAAK,OACLiF,aAAa,MACbkH,WAAS,EACT5G,YAAagB,EACbjD,MAAOyI,EACP1J,SArBY,SAAAxD,GAClBmN,EAAYnN,EAAME,OAAOuE,MAC1B,KAqBK,SAAC,GAAD,CAAQ0D,QAAS2C,EAAiB7C,KAAK,OAAOC,KAAK,cAI1D,CCtCD,QAAgB,kBAAoB,kCAAkC,iBAAmB,iCAAiC,aAAe,6BAA6B,oBAAsB,oCAAoC,uBAAyB,uCAAuC,yBAA2B,yCAAyC,0BAA4B,0CAA0C,2BAA6B,2CAA2C,SAAW,yBAAyB,KAAO,sBC4F7hB,GAlFqB,SAAC,GAAmB,IAAjBkE,EAAgB,EAAhBA,GAAImB,EAAY,EAAZA,MACpBzC,GAAkBnL,EAAAA,EAAAA,IAAYoL,GAAAA,IACpC,GAAwC1L,EAAAA,EAAAA,WAAS,GAAjD,eAAOwN,EAAP,KAAqBC,EAArB,KACMpN,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAEpBC,GAAWC,EAAAA,EAAAA,MAEjB,GAAsCT,EAAAA,EAAAA,WAAS,GAA/C,eAAO4G,EAAP,KAAoBD,EAApB,KACME,EAAc,kBAAMF,GAAe,SAAAG,GAAK,OAAKA,CAAL,GAA1B,EASpB,OACE,4BACE,mBACE1H,UACa,SAAViB,GAAoByC,GAAAA,0BACV,UAAVzC,GAAqByC,GAAAA,2BACX,WAAVzC,GAAsByC,GAAAA,2BAEzBxB,QAASuF,EANX,UAQE,iBACElH,MAAO,GACPC,OAAQ,GACR,aAAW,aACXR,UAAW0D,GAAAA,IAJb,WAME,2BAAO,mBACP,gBAAKxD,KAAMC,EAAAA,EAAS,qBAGvBqH,IACC,UAACsG,GAAD,CAAazL,QAASoF,EAAtB,WACE,eAAIzH,UAAWC,GAAf,SAA6B,kBACX,IAAjB6O,EAAM9F,QACL,eAAIhJ,UAAWC,GAAf,SAA4B,iDAI5B,eAAID,UAAWC,GAAf,SAA4B,4EAKZ,IAAjB6O,EAAM9F,QACL,mBAAQhJ,UAAWC,GAAYyC,KAAK,SAASR,QAASuF,EAAtD,SAAmE,WAInE,iCACE,oBACEzH,UAAWC,GACXyC,KAAK,SACLiJ,SAAUU,EACVnK,QAlDU,WACtBmM,GAAgB,GAChBjN,GAAS2N,EAAAA,GAAAA,IAAapB,IAAKhB,MAAK,YAC7BN,GAAmB5E,GACrB,GACF,EAyCW,UAMG2G,GAAgB/B,IACf,SAAC,KAAD,CAAYtI,MAAM,UAAUpB,KAAM,KAClC,UAGJ,mBACE3C,UAAWC,GACXyC,KAAK,SACLR,QAASuF,EAHX,SAIC,eASd,E,sCCvFYuH,GAAsB,SAAC,GAA4C,IAA1C1M,EAAyC,EAAzCA,SAAa2M,GAA4B,cAE3E,GAA8BrO,EAAAA,EAAAA,WAAS,GAAvC,eAAOsO,EAAP,KAAgBC,EAAhB,KAUA,OARAtN,EAAAA,EAAAA,YAAU,WACN,IAAMuN,EAAYC,uBAAsB,kBAAMF,GAAW,EAAjB,IACxC,OAAO,WACHG,qBAAqBF,GACrBD,GAAW,EACd,CACJ,GAAE,IAEED,GAIE,SAAC,OAAD,oBAAeD,GAAf,aAAuB3M,KAHnB,IAId,ECuED,GA7Ee,SAAC,GAAgB,IAAdoK,EAAa,EAAbA,OACRM,EAAiCN,EAAjCM,IAAK/D,EAA4ByD,EAA5BzD,MAAO6F,EAAqBpC,EAArBoC,MAAOS,EAAc7C,EAAd6C,UAC3B,GAAsC3O,EAAAA,EAAAA,WAAS,GAA/C,eAAO4G,EAAP,KAAoBD,EAApB,KACME,EAAc,kBAAMF,GAAe,SAAAG,GAAK,OAAKA,CAAL,GAA1B,EACdzG,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAG1B,OACE,SAAC6N,GAAD,CAAqBQ,YAAaxC,EAAlC,SACG,SAAAyC,GAAQ,OACP,mCACEzP,UAAWC,GAAAA,kBACXmF,IAAKqK,EAASC,UACVD,EAASE,gBAHf,eAKE,iBACE3P,UACY,SAAViB,EAAmBhB,GAAAA,iBAA0BA,GAAAA,aAFjD,WAKE,iBAAMD,UAAWC,GAAAA,oBAAjB,SAA8CgJ,KAC9C,iBAAKjJ,UAAWC,GAAAA,uBAAhB,WACE,mBACED,UACa,SAAViB,GAAoBhB,GAAAA,0BACV,UAAVgB,GAAqBhB,GAAAA,2BACX,WAAVgB,GAAsBhB,GAAAA,2BAEzBiC,QAASuF,EANX,UAQE,iBACElH,MAAO,GACPC,OAAQ,GACR,aAAW,cACXR,UAAWC,GAAAA,IAJb,WAME,2BAAO,iBACP,gBAAKC,KAAMC,EAAAA,EAAS,uBAGxB,SAAC,GAAD,CAAcwN,GAAIX,EAAK8B,MAAOA,UAGjCA,IACC,gBAAI9O,UAAWC,GAAAA,SAAf,UACGsP,EAAUrG,KAAI,SAAC6D,EAAQ3D,GACtB,IAAM0D,EAAOgC,EAAMc,MAAK,SAAAC,GAAE,OAAIA,EAAG7C,MAAQD,CAAf,IAC1B,OACE,SAAC,MAAD,CAAW+C,YAAahD,EAAKE,IAAK5D,MAAOA,EAAzC,SACG,SAAAqG,GAAQ,OACP,0CAEErK,IAAKqK,EAASC,UACVD,EAASM,gBACTN,EAASO,iBAJf,cAME,SAAC,GAAD,CAAMlD,KAAMA,MALPA,EAAKE,IAFL,GAD0CD,EAaxD,IACA0C,EAASxH,gBAGd,SAAC+D,GAAD,CAAaC,SAAUe,IACtBxF,IACC,SAACpF,EAAD,CAAOC,QAASoF,EAAhB,UACE,SAAC+G,GAAD,CAAYb,GAAIX,EAAK/D,MAAOA,EAAO5G,QAASoF,SA3D3C,GAkEd,ECtDYwI,GAAc,CACzB,CAAEhH,MAAO,OAAQzF,I,s+CACjB,CAAEyF,MAAO,UAAWzF,I,sqWACpB,CAAEyF,MAAO,YAAazF,I,s7PACtB,CAAEyF,MAAO,OAAQzF,I,8nXACjB,CAAEyF,MAAO,WAAYzF,I,06LACrB,CAAEyF,MAAO,SAAUzF,I,8zWACnB,CAAEyF,MAAO,OAAQzF,I,sqOACjB,CAAEyF,MAAO,cAAezF,I,s9SACxB,CAAEyF,MAAO,eAAgBzF,I,ktOACzB,CAAEyF,MAAO,OAAQzF,I,8lKACjB,CAAEyF,MAAO,QAASzF,I,kqMAClB,CAAEyF,MAAO,aAAczF,I,k8RACvB,CAAEyF,MAAO,QAASzF,I,83RAClB,CAAEyF,MAAO,MAAOzF,I,0mTAChB,CAAEyF,MAAO,aAAczF,I,k4RACvB,CAAEyF,MAAO,UAAWzF,I,mnSCpDT0M,GAAQ,CACnB,CAAEC,IAAK,UAAWnK,MAAO,gBACzB,CAAEmK,IAAK,OAAQnK,MAAO,aACtB,CAAEmK,IAAK,UAAWnK,MAAO,gBACzB,CAAEmK,IAAK,eAAgBnK,MAAO,qBAC9B,CAAEmK,IAAK,YAAanK,MAAO,kBAC3B,CAAEmK,IAAK,YAAanK,MAAO,kBAC3B,CAAEmK,IAAK,SAAUnK,MAAO,eACxB,CAAEmK,IAAK,UAAWnK,MAAO,iBCiI3B,GA/HmB,SAAC,GAgBb,IAfLwB,EAeI,EAfJA,YACAC,EAcI,EAdJA,YACAV,EAaI,EAbJA,aACAqJ,EAYI,EAZJA,SACAC,EAWI,EAXJA,WACAC,EAUI,EAVJA,YACArH,EASI,EATJA,MACAO,EAQI,EARJA,KACA7F,EAOI,EAPJA,WACA8K,EAMI,EANJA,SACA8B,EAKI,EALJA,QACAC,EAII,EAJJA,cACA9E,EAGI,EAHJA,SACA+E,EAEI,EAFJA,WACAC,EACI,EADJA,iBAEMzP,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBkL,GAAkBnL,EAAAA,EAAAA,IAAYoL,GAAAA,IACpC,OACE9E,IACE,SAACsG,GAAD,CAAazL,QAASoF,EAAtB,UACE,kBAAMI,SAAUd,EAAhB,WACE,eAAI/G,UAAWC,GAAf,SAA8BwQ,KAE9B,kBACEzQ,UAAWC,GACX0N,GAAG,QACHjL,KAAK,OACLrC,KAAK,QACL4H,YAAawG,GAAsB,QACnCzI,MAAOyI,GAAsBxF,EAC7BlE,SAAUuL,EACV5E,WAAUA,KAEZ,iBAAK1L,UAAWC,GAAc0N,GAAG,mBAAjC,UAAoD,SAElD,qBACE3N,UAAWC,GACX8K,KAAK,QACL,kBAAgB,mBAHlB,SAKGmF,GAAMhH,KAAI,SAAAyH,GAAQ,OACjB,4BACE,kBACE3Q,UAAWC,GACX0N,GAAIgD,EAAS3K,MACbtD,KAAK,QACLrC,KAAK,OACL2F,MAAO2K,EAAS3K,MAChBqD,QACEkH,EACIA,IAAYI,EAAS3K,MACrBwD,IAASmH,EAAS3K,MAExBjB,SAAUsL,KAEZ,kBAAOrQ,UAAWC,GAAkB2Q,QAASD,EAAS3K,MAAtD,UACE,gBAAKhG,UAAWC,GAAYM,MAAM,KAAKC,OAAO,KAA9C,UACE,gBAAKN,KAAMC,EAAAA,EAAM,WAAOwQ,EAAS3K,eAhB7B2K,EAASR,IADF,UAyBvB,iBAAKnQ,UAAWC,GAAc0N,GAAG,oBAAjC,UAAqD,cAEnD,qBACE3N,UAAWC,GACX8K,KAAK,QACL,kBAAgB,oBAHlB,SAKGkF,GAAY/G,KAAI,SAAA2H,GAAE,OACjB,4BACE,kBACE7Q,UAAWC,GACX0N,GAAIkD,EAAG5H,MACPvG,KAAK,QACLrC,KAAK,KACL2F,MAAO6K,EAAG5H,MACVI,QACEmH,EACIA,IAAkBK,EAAG5H,MACrBtF,IAAekN,EAAG5H,MAExBlE,SAAUqL,KAEZ,kBAAOpQ,UAAWC,GAAkB2Q,QAASC,EAAG5H,MAAhD,UACE,gBACEjJ,UAAWC,GACXmE,IAAKyM,EAAG5H,MACRzF,IAAKqN,EAAGrN,IACRjD,MAAM,KACNC,OAAO,WApBHqQ,EAAG5H,MADI,UA6BvB,oBACEjJ,UAAqB,WAAViB,EAAqBhB,GAAmBA,GACnDyC,KAAK,SAFP,UAIG2J,GACC,SAAC,KAAD,CAAYtI,MAAM,UAAUpB,KAAM,MAElC,gBACE3C,UAAqB,WAAViB,EAAqBhB,GAAoBA,GACpDM,MAAM,KACNC,OAAO,KAHT,UAKE,gBAAKN,KAAMC,EAAAA,EAAS,iBAIvBuQ,SAMZ,ECtID,GAAyC,gDAAzC,GAAqH,mDAArH,GAAsL,qCC4EtL,GAtEwB,WACtB,OAAsC9P,EAAAA,EAAAA,WAAS,GAA/C,eAAO4G,EAAP,KAAoBD,EAApB,KACME,EAAc,kBAAMF,GAAe,SAAAG,GAAK,OAAKA,CAAL,GAA1B,EACd2E,GAAkBnL,EAAAA,EAAAA,IAAYoL,GAAAA,IAEpC,GAAwB1L,EAAAA,EAAAA,UAAS,gBAAjC,eAAO4I,EAAP,KAAasH,EAAb,KACA,GAAoClQ,EAAAA,EAAAA,UAAS,QAA7C,eAAO+C,EAAP,KAAmBoN,EAAnB,KAEM3P,GAAWC,EAAAA,EAAAA,MA0BX2P,EAAa,CACjBxJ,YAAAA,EACAC,YAAAA,EACAV,aA3BmB,SAAAxF,GACnBA,EAAMoN,iBACNvN,GACE6P,EAAAA,GAAAA,IAAS,CACPhI,MAAO1H,EAAME,OAAO,GAAGuE,MACvBwD,KAAAA,EACA7F,WAAAA,KAEFgJ,MAAK,WACAN,IACH5E,IACAqJ,EAAQ,gBACRC,EAAc,QAEjB,GACF,EAaCX,SARe,SAAA7O,GACfwP,EAAcxP,EAAME,OAAOuE,MAC5B,EAOCqK,WAZiB,SAAA9O,GACjBuP,EAAQvP,EAAME,OAAOuE,MACtB,EAWCwD,KAAAA,EACA7F,WAAAA,EACA+H,UAtCe,GAyCjB,OACE,iBAAK1L,UAAWC,GAAhB,WACE,eAAGD,UAAWC,GAAd,UAAgD,iDAE9C,mBACEyC,KAAK,SACL1C,UAAWC,GACXiC,QAASuF,EAHX,SAIC,sBAEQ,0LAMX,SAAC,IAAD,oBACMuJ,GADN,IAEEP,WAAW,YACXC,iBAAiB,cAIxB,EC1ED,IAAgB,UAAY,iCAAiC,WAAa,kCAAkC,YAAc,mCAAmC,aAAe,oCAAoC,WAAa,kCAAkC,WAAa,mCCA5Q,GAAwB,yBAAxB,GAA4F,yBCQ7E,SAASQ,GAAT,GAAqC,IAAhBzJ,EAAe,EAAfA,YAC5BrG,GAAWC,EAAAA,EAAAA,MACX8P,GAAcjQ,EAAAA,EAAAA,IAAYyH,GAAAA,IAC1B0D,GAAkBnL,EAAAA,EAAAA,IAAYoL,GAAAA,IAcpC,OACE,iCACE,eAAItM,UAAWC,GAAf,SAA6B,gBAC7B,kBAAM4H,SAfW,SAAAtG,GACnBA,EAAMoN,iBACNvN,GACEgQ,EAAAA,GAAAA,IAAU,CACRnI,MAAO1H,EAAMkB,cAAc,GAAGuD,MAC9BqL,MAAOF,EAAYnE,OAErBL,MAAK,YACJN,GAAmB5E,GACrB,GACF,EAKG,WACE,kBACEzH,UAAWC,GACXyC,KAAK,OACLiF,aAAa,MACbkH,WAAS,EACT5G,YAAY,QACZyD,UAAQ,KAEV,SAAC,GAAD,CAAQhC,QAAS2C,EAAiB7C,KAAK,OAAOC,KAAK,aAI1D,CC5BD,IAuFA,GAvFsB,WACpB,IAAMrI,GAAWC,EAAAA,EAAAA,MACXJ,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAE1B,GAAsCP,EAAAA,EAAAA,WAAS,GAA/C,eAAO4G,EAAP,KAAoBD,EAApB,KACME,EAAc,kBAAMF,GAAe,SAAAG,GAAK,OAAKA,CAAL,GAA1B,EAEdc,GAAYtH,EAAAA,EAAAA,IAAYuH,GAAAA,IACxB0I,GAAcjQ,EAAAA,EAAAA,IAAYyH,GAAAA,IAE1B2I,EACJH,GACAA,EAAYG,SACZH,EAAYG,QAAQtI,OAAS,GAC7BmI,EAaF,OACE,8BACG3I,EAAUQ,OAAS,GAClB,+BACE,iBAAKhJ,UAAWC,GAAAA,UAAhB,UACGuH,IACC,SAACpF,EAAD,CAAOC,QAASoF,EAAhB,UACE,SAACyJ,GAAD,CAAWzJ,YAAaA,MAG3B6J,IACC,SAAC,MAAD,CAAiBC,UAtBX,SAACC,GACjB,IAAQC,EAAiDD,EAAjDC,YAAaC,EAAoCF,EAApCE,OAAQC,EAA4BH,EAA5BG,OAAqBhE,EAAO6D,EAApB1B,YAChC2B,GAA0B,WAAXE,IAChBF,EAAYjC,cAAgBkC,EAAOlC,aAAeiC,EAAYrI,QAAUsI,EAAOtI,OAEnFhI,GAASwQ,EAAAA,GAAAA,IAAa,CACpBjE,GAAAA,EACAC,KAAM,CAAE6D,YAAAA,EAAaC,OAAAA,MAExB,EAaW,UACE,eACE1R,UAAWC,GAAAA,WADb,SAGGkR,EAAYG,QAAQpI,KAAI,SAAAwD,GAAM,OAC7B,yBACE,SAAC,GAAD,CAAQA,OAAQA,KADTA,EAAOM,IADa,SAQrC,oBACEhN,UACa,SAAViB,GAAoBhB,GAAAA,YACV,UAAVgB,GAAqBhB,GAAAA,aACX,WAAVgB,GAAsBhB,GAAAA,aAEzBiC,QAASuF,EANX,WAQE,iBACElH,MAAO,GACPC,OAAQ,GACR,aAAW,OACXR,UAAWC,GAAAA,IAJb,WAME,2BAAO,eACP,gBAAKC,KAAMC,EAAAA,EAAS,mBAEtB,iBACEH,UACY,WAAViB,EACIhB,GAAAA,iBACAA,GAAAA,WAJR,SAMC,gCAQP,SAAC,GAAD,KAIP,EClGD,IAAgB,uBAAyB,4CAA4C,KAAO,0BAA0B,MAAQ,2BAA2B,OAAS,4BAA4B,aAAe,kCAAkC,OAAS,4BAA4B,aAAe,kCAAkC,UAAY,+BAA+B,QAAU,6BAA6B,SAAW,8BAA8B,OAAS,4BAA4B,YAAc,iCAAiC,cAAgB,mCAAmC,MAAQ,2BAA2B,WAAa,gCAAgC,UAAY,+BAA+B,OAAS,4BAA4B,eAAiB,oCAAoC,QAAU,8BC4CtyB,GArCoB,WAClB,OAAgCW,EAAAA,EAAAA,UAAS,QAAzC,eAAOiR,EAAP,KAAiBC,EAAjB,KAEM7Q,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBgQ,GAAcjQ,EAAAA,EAAAA,IAAYyH,GAAAA,IAUhC,OARA9G,EAAAA,EAAAA,YAAU,WACJsP,GAAeA,EAAYxN,WAC7BmO,EAAYX,EAAYxN,YAExBmO,EAAY,OAEf,GAAE,CAACX,KAGF,gBACEnR,UACa,SAAViB,GAAoBR,GAAAA,MACV,UAAVQ,GAAqBR,GAAAA,OACX,WAAVQ,GAAsBR,GAAAA,OAJ3B,UAOE,gCACE,SAAC,GAAD,KACA,gBACET,UAAS,UAAKS,GAAAA,uBAAL,YACPoR,GACApR,GAAI,KAAD,OAAMoR,EAASE,OAAO,GAAGC,cAAgBH,EAASI,MAAM,MAH/D,UAME,SAAC,GAAD,UAKT,EC1CD,IAAgB,KAAO,sBAAsB,MAAQ,uBAAuB,OAAS,wBAAwB,QAAU,yBAAyB,WAAa,4BAA4B,cAAgB,+BAA+B,QAAU,yBAAyB,WAAa,4BAA4B,OAAS,wBAAwB,WAAa,4BAA4B,mBAAqB,oCAAoC,qBAAuB,sCAAsC,gBAAkB,iCAAiC,YAAc,6BAA6B,iBAAmB,kCAAkC,aAAe,8BAA8B,iBAAmB,kCAAkC,mBAAqB,oCAAoC,sBAAwB,uCAAuC,uBAAyB,wCAAwC,gBAAkB,iCAAiC,iBAAmB,kCAAkC,kBAAoB,mCAAmC,mBAAqB,oCAAoC,KAAO,sBAAsB,YAAc,6BAA6B,iBAAmB,kCAAkC,kBAAoB,mCAAmC,gBAAkB,iCAAiC,oBAAsB,qCAAqC,yBAA2B,0CAA0C,0BAA4B,2CAA2C,wBAA0B,yCAAyC,yBAA2B,0CAA0C,+BAAiC,gDAAgD,0BAA4B,2CAA2C,IAAM,qBAAqB,sBAAwB,uCAAuC,4BAA8B,6CAA6C,6BAA+B,8CAA8C,oBAAsB,qCAAqC,YAAc,6BAA6B,eAAiB,gCAAgC,mBAAqB,oCAAoC,mBAAqB,oCAAoC,kBAAoB,mCAAmC,gBAAkB,iCAAiC,oBAAsB,qCAAqC,cAAgB,+BAA+B,oBAAsB,qCAAqC,uBAAyB,wCAAwC,uBAAyB,yCCwF5qF,GA3EoB,SAAC,GAAiB,IAAf5I,EAAc,EAAdA,QACf8H,GAAcjQ,EAAAA,EAAAA,IAAYyH,GAAAA,IACxBqE,EAAiBmE,EAAjBnE,IAAKsE,EAAYH,EAAZG,QACPjF,GAAkBnL,EAAAA,EAAAA,IAAYoL,GAAAA,IACpC,GAAwC1L,EAAAA,EAAAA,WAAS,GAAjD,eAAOwN,EAAP,KAAqBC,EAArB,KAEMjN,GAAWC,EAAAA,EAAAA,MAEjB,GAAsCT,EAAAA,EAAAA,WAAS,GAA/C,eAAO4G,EAAP,KAAoBD,EAApB,KACME,EAAc,kBAAMF,GAAe,SAAAG,GAAK,OAAKA,CAAL,GAA1B,EAWdwK,EAAc7I,EAEhB5I,GAAAA,4BADAA,GAAAA,sBAEJ,OACE,4BACE,mBAAQT,UAAWkS,EAAYxP,KAAK,SAASR,QAASuF,EAAtD,UACE,gBAAKzH,UAAWS,GAAAA,oBAAhB,UACE,gBAAKP,KAAMC,EAAAA,EAAS,oBAGvBqH,IACC,UAACsG,GAAD,CAAazL,QAASoF,EAAtB,WACE,eAAIzH,UAAWC,GAAf,SAA6B,iBAC5BkR,GAAeG,GAA8B,IAAnBA,EAAQtI,QACjC,eAAIhJ,UAAWC,GAAf,SAA4B,gDAI5B,eAAID,UAAWC,GAAf,SAA4B,6EAK7BkR,GAAeG,GAA8B,IAAnBA,EAAQtI,QACjC,mBAAQhJ,UAAWC,GAAYyC,KAAK,SAASR,QAASuF,EAAtD,SAAmE,WAInE,iCACE,oBACEzH,UAAWC,GACXyC,KAAK,SACLiJ,SAAUU,EACVnK,QA1CU,WAClBiP,GAAkC,IAAnBG,EAAQtI,SACzBqF,GAAgB,GAChBjN,GAAS+Q,EAAAA,GAAAA,IAAYnF,IAAML,MAAK,YAC7BN,GAAmB5E,GACrB,IAEJ,EA+BW,UAMG2G,GAAgB/B,IACf,SAAC,KAAD,CAAYtI,MAAM,UAAUpB,KAAM,KAClC,UAGJ,mBACE3C,UAAWC,GACXyC,KAAK,SACLR,QAASuF,EAHX,SAIC,eASd,EC2FD,GArKkB,SAAC,GAAwB,IAAtB4J,EAAqB,EAArBA,MACbpQ,GADkC,EAAdoI,SACZnI,EAAAA,EAAAA,IAAYC,EAAAA,KACpBkL,GAAkBnL,EAAAA,EAAAA,IAAYoL,GAAAA,IAEvBqB,EAAgC0D,EAArCrE,IAAS/D,EAA4BoI,EAA5BpI,MAAOO,EAAqB6H,EAArB7H,KAAM7F,EAAe0N,EAAf1N,WACxBvC,GAAWC,EAAAA,EAAAA,MAEjB,GAAsCT,EAAAA,EAAAA,WAAS,GAA/C,eAAO4G,EAAP,KAAoBD,EAApB,KACME,EAAc,kBAAMF,GAAe,SAAAG,GAAK,OAAKA,CAAL,GAA1B,EACpB,GAAgC9G,EAAAA,EAAAA,UAASqI,GAAzC,eAAOwF,EAAP,KAAiBC,EAAjB,KACA,GAA8B9N,EAAAA,EAAAA,UAAS4I,GAAvC,eAAO+G,EAAP,KAAgB6B,EAAhB,KACA,GAA0CxR,EAAAA,EAAAA,UAAS+C,GAAnD,eAAO6M,EAAP,KAAsB6B,EAAtB,MAEAxQ,EAAAA,EAAAA,YAAU,WACRwQ,EAAiB1O,GACjByO,EAAW5I,EACZ,GAAE,CAAC7F,EAAY6F,IAEhB,IAAMzC,EAAe,SAAAxF,GACnBA,EAAMoN,iBACNvN,GACEkR,EAAAA,GAAAA,IAAY,CACV3E,GAAAA,EACAC,KAAM,CACJ3E,MAAOwF,EACPjF,KAAM+G,EACN5M,WAAY6M,MAGhB7D,MAAK,YACJN,GAAmB5E,IACpB2K,EAAW5I,GACX6I,EAAiB1O,EAClB,GACF,EAEK0M,EAAa,SAAAkC,GACjBH,EAAWG,EACZ,EACKnC,EAAW,SAAAmC,GACfF,EAAiBE,EAClB,EAKD,OACE,4BACE,mBACEvS,UAAWS,GAAAA,sBACXiC,KAAK,SACLR,QAASuF,EAHX,UAKE,gBAAKzH,UAAWS,GAAAA,oBAAhB,UACE,gBAAKP,KAAMC,EAAAA,EAAS,qBAGvBqH,IACC,SAACsG,GAAD,CAAazL,QAASoF,EAAtB,UACE,kBAAMI,SAAUd,EAAhB,WACE,eAAI/G,UAAWC,GAAf,SAA6B,gBAE7B,kBACED,UAAWC,GACX0N,GAAG,QACHjL,KAAK,OACLrC,KAAK,QACL4H,YAAagB,EACbjD,MAAOyI,EACP1J,SA3BQ,SAAAxD,GAClBmN,EAAYnN,EAAME,OAAOuE,MAC1B,KA2BS,iBAAKhG,UAAWC,GAAc0N,GAAG,mBAAjC,UAAoD,SAElD,qBACE3N,UAAWC,GACX8K,KAAK,QACL,kBAAgB,mBAHlB,SAKGmF,GAAMhH,KAAI,SAAAyH,GAAQ,OACjB,4BACE,kBACE3Q,UAAWC,GACX0N,GAAIgD,EAAS3K,MACbtD,KAAK,QACLrC,KAAI,kBAAasN,GACjB3H,MAAO2K,EAAS3K,MAChBqD,QAASkH,IAAYI,EAAS3K,MAC9BjB,SAAU,kBAAMsL,EAAWM,EAAS3K,MAA1B,KAEZ,kBACEhG,UAAWC,GACX2Q,QAASD,EAAS3K,MAClB9D,QAAS,kBAAMmO,EAAWM,EAAS3K,MAA1B,EAHX,UAKE,gBAAKhG,UAAWC,GAAYM,MAAM,KAAKC,OAAO,KAA9C,UACE,gBAAKN,KAAMC,EAAAA,EAAM,WAAOwQ,EAAS3K,eAhB7B2K,EAAS3K,MADF,UAyBvB,iBAAKhG,UAAWC,GAAc0N,GAAG,oBAAjC,UAAqD,cAEnD,qBACE3N,UAAWC,GACX8K,KAAK,QACL,kBAAgB,oBAHlB,SAKGkF,GAAY/G,KAAI,SAAA2H,GAAE,OACjB,4BACE,kBACE7Q,UAAWC,GACX0N,GAAIkD,EAAG5H,MACPvG,KAAK,QACLrC,KAAI,gBAAWsN,GACf3H,MAAO6K,EAAG5H,MACVI,QAASmH,IAAkBK,EAAG5H,MAC9BlE,SAAU,kBAAMqL,EAASS,EAAG5H,MAAlB,KAEZ,kBACEjJ,UAAWC,GACX2Q,QAASC,EAAG5H,MACZ/G,QAAS,kBAAMkO,EAASS,EAAG5H,MAAlB,EAHX,UAKE,gBACEjJ,UAAWC,GACXmE,IAAKyM,EAAG5H,MACRzF,IAAKqN,EAAGrN,IACRjD,MAAM,KACNC,OAAO,WApBHqQ,EAAG5H,MADI,UA6BvB,oBACEjJ,UAAqB,WAAViB,EAAqBhB,GAAmBA,GACnDyC,KAAK,SACLR,QAAS6E,EAHX,UAKGsF,GACC,SAAC,KAAD,CAAYtI,MAAM,UAAUpB,KAAM,MAElC,gBACE3C,UACY,WAAViB,EAAqBhB,GAAoBA,GAE3CM,MAAM,KACNC,OAAO,KALT,UAOE,gBAAKN,KAAMC,EAAAA,EAAS,iBAEtB,iBAQf,ECvFD,GAjFiB,WACf,IAAMkM,GAAkBnL,EAAAA,EAAAA,IAAYoL,GAAAA,IAEpC,GAAsC1L,EAAAA,EAAAA,WAAS,GAA/C,eAAO4G,EAAP,KAAoBD,EAApB,KACME,EAAc,kBAAMF,GAAe,SAAAG,GAAK,OAAKA,CAAL,GAA1B,EACpB,GAAwB9G,EAAAA,EAAAA,UAAS,gBAAjC,eAAO4I,EAAP,KAAasH,EAAb,KACA,GAAoClQ,EAAAA,EAAAA,UAAS,QAA7C,eAAO+C,EAAP,KAAmBoN,EAAnB,KACM9P,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAEpBC,GAAWC,EAAAA,EAAAA,MA0BX2P,EAAa,CACjBxJ,YAAAA,EACAC,YAAAA,EACAV,aA3BmB,SAAAxF,GACnBA,EAAMoN,iBACNvN,GACE6P,EAAAA,GAAAA,IAAS,CACPhI,MAAO1H,EAAME,OAAO,GAAGuE,MACvBwD,KAAAA,EACA7F,WAAAA,KAEFgJ,MAAK,WACAN,IACH5E,IACAqJ,EAAQ,gBACRC,EAAc,QAEjB,GACF,EAaCX,SARe,SAAA7O,GACfwP,EAAcxP,EAAME,OAAOuE,MAC5B,EAOCqK,WAZiB,SAAA9O,GACjBuP,EAAQvP,EAAME,OAAOuE,MACtB,EAWCwD,KAAAA,EACA7F,WAAAA,EACA+H,UAzCe,GA4CjB,OACE,iBACE1L,UACa,SAAViB,GAAoBR,GAAAA,MACV,UAAVQ,GAAqBR,GAAAA,OACX,WAAVQ,GAAsBR,GAAAA,OAJ3B,WAOE,mBACEyB,QAASuF,EACTzH,UAAWS,GAAAA,mBACXiC,KAAK,SAHP,UAKE,gBACE1C,UACY,WAAViB,EACIR,GAAAA,uBACAA,GAAAA,sBAENF,MAAO,GACPC,OAAQ,GAPV,UASE,gBAAKN,KAAMC,EAAAA,EAAS,oBAIxB,SAAC,IAAD,oBACM6Q,GADN,IAEEP,WAAW,YACXC,iBAAiB,cAIxB,E,ktPCvFD,GAAuB,uBAAvB,GAAsD,wBAAtD,GAAuF,yBAAvF,GAA8H,8BAA9H,GAA6K,iCAA7K,GAAmO,qCAAnO,GAAkS,0CAAlS,GAAuW,2CAAvW,GAAoa,kCAApa,GAAwd,kCAAxd,GAAghB,sCCAhhB,GAAwB,oBAAxB,GAAoD,oBAApD,GAAsF,0BAAtF,GAA2H,uBAA3H,GAAmK,6BAAnK,GAAgP,kBAAhP,GAA8Q,wB,8BCS9Q8B,GAAAA,EAAAA,SAAAA,QAAyB,+CAElB,IAAMC,GAAW,WACtB,OAA0B7R,EAAAA,EAAAA,UAAS,IAAnC,eAAOsF,EAAP,KAAcwM,EAAd,KACA,GAA8B9R,EAAAA,EAAAA,UAAS,IAAvC,eAAO+R,EAAP,KAAgBC,EAAhB,KACA,GAAsChS,EAAAA,EAAAA,WAAS,GAA/C,eAAO4G,EAAP,KAAoBD,EAApB,KACMtG,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAEpBsG,EAAc,kBAAMF,GAAe,SAAAG,GAAK,OAAKA,CAAL,GAA1B,EAEd8E,EAAe,SAAAjL,GACnB,MAAwBA,EAAME,OAAtBpB,EAAR,EAAQA,KAAM2F,EAAd,EAAcA,MAEd,OAAQ3F,GACN,IAAK,QACHqS,EAAS1M,GACT,MAEF,IAAK,UACH4M,EAAW5M,GACX,MAEF,QACE,OAEL,EAOKe,EAAY,mCAAG,WAAMxF,GAAN,gFACnBA,EAAMoN,iBADa,SAIH,KAAVzI,GAA4B,KAAZyM,EAJH,iCAKGH,GAAAA,EAAAA,KAAW,kBAAmB,CAAEtM,MAAAA,EAAOyM,QAAAA,IAL1C,cAKTE,EALS,OAMfC,GAAAA,GAAAA,QAAcD,EAAIjF,KAAK9G,SAV3B4L,EAAS,IACTE,EAAW,IAWPnL,IARe,kBASRoL,EAAIjF,MATI,0DAYb,KAAMmF,UAAW,EACM,KAAMA,SAAvBC,EADU,EACVA,OAAQpF,EADE,EACFA,KAChBkF,GAAAA,GAAAA,MAAA,iBAAsBE,EAAtB,cAAkCpF,EAAK9G,WAEvCgM,GAAAA,GAAAA,MAAY,iBAhBG,0DAAH,sDAqBlB,OACE,iCACE,eAAG9S,UAAWS,GAAd,UAAsC,wBACd,KACtB,mBACEyB,QAASuF,EACTzH,UACY,WAAViB,EACIR,GACAA,GAENiC,KAAK,SACL,aAAW,8BARb,SASC,YAEQ,kFAIV8E,IACC,SAACpF,EAAD,CAAOC,QAASoF,EAAhB,UACE,kBAAMI,SAAUd,EAAhB,WACE,eAAI/G,UAAWC,GAAf,SAA6B,eAC7B,kBACED,UAAqB,WAAViB,EAAqBhB,GAAqBA,GACrDyC,KAAK,QACLrC,KAAK,QACL4H,YAAY,gBACZgL,aAAa,MACbvH,UAAQ,EACR1F,MAAOE,EACPnB,SAAUyH,KAEZ,qBACExM,UACY,WAAViB,EAAqBhB,GAAwBA,GAE/CyC,KAAK,OACLrC,KAAK,UACL4H,YAAY,UACZgL,aAAa,MACbvH,UAAQ,EACR1F,MAAO2M,EACP5N,SAAUyH,KAEZ,mBACExM,UAAqB,WAAViB,EAAqBhB,GAAmBA,GACnDyC,KAAK,SAFP,SAGC,eAMP,SAAC,MAAD,CAAgBwQ,SAAS,WAAWC,UAAW,QAGpD,EC/GYC,GAAW,WACtB,IAAMnS,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1B,OACE,gBACEnB,UACa,SAAViB,GAAoBR,IACV,UAAVQ,GAAqBR,IACX,WAAVQ,GAAsBR,GAJ3B,UAOE,iBAAKT,UAAWS,GAAhB,WAEE,gCACE,mBAAQ4S,OAAM,UAAKC,GAAL,gBAAmBC,GAAnB,eAAkCC,GAAlC,UACd,gBAAKH,OAAM,UAAKC,GAAL,OAAkBlP,IAAI,eAGnC,gBAAKpE,UAAWS,GAAhB,UACE,SAACgS,GAAD,OAEF,iBAAKzS,UAAWS,GAAhB,WACE,gBAAKT,UAAWS,GAAhB,UACE,gBAAKP,KAAMC,EAAAA,EAAS,yBAEtB,cAAGH,UAAWS,GAAd,SAAuC,sBAKhD,E,WC4BD,GAvDe,WACb,IAAMsC,GAAY7B,EAAAA,EAAAA,IAAYuS,EAAAA,IAC9B,GAAwC7S,EAAAA,EAAAA,WAAS,GAAjD,eAAOwN,EAAP,KAAqBC,EAArB,KAEMjN,GAAWC,EAAAA,EAAAA,MAEjB,GAAsCT,EAAAA,EAAAA,WAAS,GAA/C,eAAO4G,EAAP,KAAoBD,EAApB,KACME,EAAc,kBAAMF,GAAe,SAAAG,GAAK,OAAKA,CAAL,GAA1B,EASpB,OACE,4BACE,oBACExF,QAASuF,EACTzH,UAAWS,GAAAA,oBACXiC,KAAK,SAHP,WAKE,gBAAK1C,UAAWS,GAAAA,kBAAuBF,MAAO,GAAIC,OAAQ,GAA1D,UACE,gBAAKN,KAAMC,EAAAA,EAAS,mBAChB,aAGPqH,IACC,UAACsG,GAAD,CAAazL,QAASoF,EAAtB,WACE,eAAIzH,UAAWC,GAAf,SAA6B,aAE7B,eAAID,UAAWC,GAAf,SAA4B,6CAI5B,oBACED,UAAWC,GACXyC,KAAK,SACLR,QA9Bc,WACtBmM,GAAgB,GAChBjN,GAASsS,EAAAA,EAAAA,OAAU/G,MAAK,YACrB5J,GAAa0E,GACf,GACF,EAsBO,UAKG2G,GAAgBrL,IACf,SAAC,KAAD,CAAYgB,MAAM,UAAUpB,KAAM,KAClC,UAGJ,mBAAQ3C,UAAWC,GAAYyC,KAAK,SAASR,QAASuF,EAAtD,SAAmE,YAO5E,ECmHD,GAnKgB,SAAC,GAAgB,IAAdmD,EAAa,EAAbA,OACXxJ,GAAWC,EAAAA,EAAAA,MACXmH,GAAYtH,EAAAA,EAAAA,IAAYuH,GAAAA,IACxBxH,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBwS,EAAanL,EAAU,GACvBoL,EAAwBD,EAAaA,EAAW3G,IAAM,KAC5D,GAA0CpM,EAAAA,EAAAA,UAASgT,GAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KASA,OAJAjS,EAAAA,EAAAA,YAAU,WACRT,GAAS2S,EAAAA,GAAAA,MACV,GAAE,CAAC3S,KAGF,gBACEpB,UACa,SAAViB,GAAoBR,GAAAA,MACV,UAAVQ,GAAqBR,GAAAA,OACX,WAAVQ,GAAsBR,GAAAA,OAJ3B,UAOE,kBAAOT,UAAW4K,EAASnK,GAAAA,OAAaA,GAAAA,QAAxC,UACE,iBAAKT,UAAWS,GAAAA,WAAhB,WACE,iBAAKT,UAAWS,GAAAA,QAAhB,WACE,qBAAST,UAAWS,GAAAA,WAApB,WACE,gBACET,UACY,WAAViB,EACIR,GAAAA,qBACAA,GAAAA,mBAENF,MAAO,GACPC,OAAQ,GAPV,SASa,WAAVS,GACC,gBAAKf,KAAMC,EAAAA,EAAS,uBAEpB,gBAAKD,KAAMC,EAAAA,EAAS,uBAGxB,eAAIH,UAAWS,GAAAA,gBAAf,SAAoC,iBAEtC,gBAAKT,UAAWS,GAAAA,YAAhB,UACE,cAAGT,UAAWS,GAAAA,iBAAd,SAAoC,iBAEtC,qBAAST,UAAWS,GAAAA,aAApB,WACE,cAAGT,UAAWS,GAAAA,iBAAd,SAAoC,wBACpC,SAAC,GAAD,WAIJ,oBAAST,UAAWS,GAAAA,cAApB,SACwB,IAArB+H,EAAUQ,SACT,gBAAKhJ,UAAWS,GAAAA,iBAAhB,SACG+H,EAAUU,KAAI,SAAAmI,GAAK,OAClB,SAAC,MAAD,CACE2C,GAAE,gBAAW3C,EAAMrE,KAEnBhN,UAAWS,GAAAA,kBAHb,UAKE,gBACET,UACa,SAAViB,GAAA,UACIR,GAAAA,gBADJ,aAEKoT,GACAD,GACAA,IAA0BvC,EAAMrE,KACjC6G,GAAiBA,IAAkBxC,EAAMrE,IACtCvM,GAAAA,gBACA,KAEG,WAAVQ,GAAA,UACIR,GAAAA,gBADJ,aAEKoT,GACAD,GACAA,IAA0BvC,EAAMrE,KACjC6G,GAAiBA,IAAkBxC,EAAMrE,IACtCvM,GAAAA,kBACA,KAEG,UAAVQ,GAAA,UACIR,GAAAA,gBADJ,aAEKoT,GACAD,GACAA,IAA0BvC,EAAMrE,KACjC6G,GAAiBA,IAAkBxC,EAAMrE,IACtCvM,GAAAA,iBACA,IAGVyB,QAAS,kBApFJ+R,EAoF2B5C,EAAMrE,SAnFxD8G,EAAiBG,GADM,IAAAA,CAoFI,EA9BX,UAgCE,iBAAKjU,UAAWS,GAAAA,oBAAhB,WACE,iBAAKT,UAAWS,GAAAA,KAAhB,WACE,gBACET,UAAS,UAAKS,GAAAA,mBAAL,aACLoT,GACAD,GACAA,IAA0BvC,EAAMrE,KACjC6G,GAAiBA,IAAkBxC,EAAMrE,IACtCvM,GAAAA,yBACA,IAPR,UAUE,gBAAKP,KAAMC,EAAAA,EAAM,WAAOkR,EAAM7H,WAEhC,cACExJ,UACY,UAAViB,EAAA,UACOR,GAAAA,yBADP,aAEQoT,GACAD,GACAA,IAA0BvC,EAAMrE,KACjC6G,GACCA,IAAkBxC,EAAMrE,IACtBvM,GAAAA,+BACA,IARV,UAUOA,GAAAA,oBAVP,aAWQoT,GACAD,GACAA,IAA0BvC,EAAMrE,KACjC6G,GACCA,IAAkBxC,EAAMrE,IACtBvM,GAAAA,0BACA,IAnBd,SAuBG4Q,EAAMpI,YAGT4K,IAAkBxC,EAAMrE,KACvB4G,IAA0BvC,EAAMrE,MAC9B6G,KACH,iBAAK7T,UAAWS,GAAAA,KAAhB,WACE,SAAC,GAAD,CAA2B4Q,MAAOA,GAAlBA,EAAMrE,MACtB,SAAC,GAAD,aAhFHqE,EAAMrE,IAHK,SA6F1B,iBAAKhN,UAAWS,GAAAA,WAAhB,WACE,oBAAST,UAAWS,GAAAA,YAApB,UACE,SAAC2S,GAAD,OAEF,oBAASpT,UAAWS,GAAAA,cAApB,UACE,SAAC,GAAD,eAOb,EChLD,GAAuB,uBAAvB,GAAyD,2BAAzD,GAAsG,kCCKvF,SAASyT,KACtB,OAAoCtT,EAAAA,EAAAA,WAAS,GAA7C,eAAOuT,EAAP,KAAmBC,EAAnB,KAwBA,OAZAvS,EAAAA,EAAAA,YAAU,WACR,IAAMU,EAAgB,SAAAJ,GACL,WAAXA,EAAEK,MACJ4R,GAAc,EAEjB,EAED,OADArS,OAAOC,iBAAiB,UAAWO,GAC5B,WACLR,OAAOE,oBAAoB,UAAWM,EACvC,CACF,KAGC,iBAAKvC,UAAWS,GAAhB,WACE,SAAC,GAAD,CAASmK,OAAQuJ,KAEjB,iBACEnU,UAAWmU,EAAa1T,GAAsBA,GAC9CyB,QAxBqB,SAAAX,GACM,QAA3BA,EAAME,OAAO4S,WACb9S,EAAME,QACR2S,GAAc,EAEjB,EAiBG,WAIE,SAAC,GAAD,CAAQ3O,MA9BM,WAClB2O,GAAc,EACf,KA6BK,SAAC,GAAD,SAIP,C","sources":["webpack://react-homework-template/./src/components/AuthForm/EyeClose/EyeClose.module.css?4d43","components/AuthForm/EyeClose/EyeClose.jsx","webpack://react-homework-template/./src/components/AuthForm/EyeOpen/EyeOpen.module.css?5ae9","components/AuthForm/EyeOpen/EyeOpen.jsx","webpack://react-homework-template/./src/components/Header/Header.module.css?4e72","webpack://react-homework-template/./src/components/Icon/Icon.module.css?7892","components/Icon/Icon.jsx","webpack://react-homework-template/./src/components/ThemeMenu/ThemeMenu.module.css?8067","components/ThemeMenu/ThemeMenu.jsx","webpack://react-homework-template/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","webpack://react-homework-template/./src/components/EditUserProfile/EditUserProfile.module.css?8d9a","images/user_dark.svg","images/user_light.svg","images/user_violet.svg","components/Avatar/Avatar.jsx","webpack://react-homework-template/./src/components/AvatarModal/AvatarModal.module.css?3cfd","components/AvatarModal/AvatarModal.jsx","components/EditUserProfile/EditUserProfile.jsx","components/Header/Header.jsx","webpack://react-homework-template/./src/components/HeaderDashboard/HeaderDashboard.module.css?dbcf","components/HeaderDashboard/HeaderDashboard.jsx","webpack://react-homework-template/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://react-homework-template/./src/components/AddTaskCard/AddTaskCard.module.css?324f","components/Calendar/Calendar.jsx","components/AddTaskCard/AddTaskCard.jsx","webpack://react-homework-template/./src/components/EditTaskCard/EditTaskCard.module.css?95f2","components/EditTaskCard/EditTaskCard.jsx","webpack://react-homework-template/./src/components/Card/Card.module.css?4f06","components/Modal/ModalPortal.jsx","webpack://react-homework-template/./src/components/ModalBoard/ModalBoard.module.css?6158","components/Card/DeleteCard.jsx","components/Card/Card.jsx","webpack://react-homework-template/./src/components/PopUps/EditColumn/EditColumn.module.css?42b7","components/PopUps/EditColumn/EditColumn.jsx","webpack://react-homework-template/./src/components/Column/Column.module.css?790f","components/Column/DeleteColumn.jsx","components/StrictModeDroppable/StrictModeDroppable.jsx","components/Column/Column.jsx","constants/backgrounds.js","constants/icons.js","components/ModalBoard/ModalBoard.jsx","webpack://react-homework-template/./src/components/MainPlaceholder/MainPlaceholder.module.css?32c1","components/MainPlaceholder/MainPlaceholder.jsx","webpack://react-homework-template/./src/components/MainDashboard/MainDashboard.module.css?76ac","webpack://react-homework-template/./src/components/PopUps/AddColumn/AddColumn.module.css?acdb","components/PopUps/AddColumn/AddColumn.jsx","components/MainDashboard/MainDashboard.jsx","webpack://react-homework-template/./src/components/ScreensPage/ScreensPage.module.css?d472","components/ScreensPage/ScreensPage.jsx","webpack://react-homework-template/./src/components/Sidebar/Sidebar.module.css?6ffa","components/ModalBoard/DeleteBoard.jsx","components/ModalBoard/EditBoard.jsx","components/ModalBoard/NewBoard.jsx","webpack://react-homework-template/./src/components/NeedHelp/NeedHelp.module.css?043c","webpack://react-homework-template/./src/components/Help/HelpForm/Help.module.css?4ae8","components/Help/HelpForm/Help.jsx","components/NeedHelp/NeedHelp.jsx","components/Sidebar/Logout.jsx","components/Sidebar/Sidebar.jsx","webpack://react-homework-template/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"svg\":\"EyeClose_svg__63XGe\"};","import sprite from '../../../images/sprite.svg';\nimport styles from './EyeClose.module.css';\n\nexport const EyeClose = () => {\n  return (\n    <>\n      <svg className={styles.svg}>\n        <use href={sprite + '#icon-eye-blocked'} />\n      </svg>\n    </>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"svg\":\"EyeOpen_svg__kE08D\"};","import sprite from '../../../images/sprite.svg';\nimport styles from './EyeOpen.module.css';\n\nexport const EyeOpen = () => {\n  return (\n    <>\n      <svg className={styles.svg}>\n        <use href={sprite + '#icon-eye'} />\n      </svg>\n    </>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"Header_header__HXQOm\",\"burgerMenu\":\"Header_burgerMenu__NNFS9\",\"burgerStyle\":\"Header_burgerStyle__Pu6PI\",\"burgerStyleViolet\":\"Header_burgerStyleViolet__guE4G\",\"burgerIcon\":\"Header_burgerIcon__Va5CI\",\"headerSelect\":\"Header_headerSelect__MENeA\",\"selectorTheme\":\"Header_selectorTheme__wShZo\",\"styleTheme\":\"Header_styleTheme__VV3Xf\",\"userInfo\":\"Header_userInfo__Z8xMa\",\"styleName\":\"Header_styleName__YEkJg\",\"dark\":\"Header_dark__5Fs0T\",\"light\":\"Header_light__1SvF+\",\"violet\":\"Header_violet__n2OhS\"};","// extracted by mini-css-extract-plugin\nexport default {\"icon\":\"Icon_icon__zcHyd\",\"tip\":\"Icon_tip__8EO-l\"};","import sprite from '../../images/sprite.svg';\nimport css from './Icon.module.css';\n\nconst Icon = ({ name, tip = null, width = '18px', height = '18px' }) => {\n  return (\n    <div className={css.icon}>\n      <svg width={width} height={height} stroke=\"currentColor\">\n        <use href={sprite + name} />\n      </svg>\n      {tip && <div className={css.tip}>{tip}</div>}\n    </div>\n  );\n};\n\nexport default Icon;","// extracted by mini-css-extract-plugin\nexport default {\"themeWrapper\":\"ThemeMenu_themeWrapper__Itqum\",\"themeButtonGreen\":\"ThemeMenu_themeButtonGreen__0q1Xf\",\"themeButtonViolet\":\"ThemeMenu_themeButtonViolet__LZOcm\",\"themeMenu\":\"ThemeMenu_themeMenu__DV9-y\",\"themeMenuOpen\":\"ThemeMenu_themeMenuOpen__-GH52\",\"themeItemGreen\":\"ThemeMenu_themeItemGreen__8jtrF\",\"themeItemViolet\":\"ThemeMenu_themeItemViolet__Eh9H0\",\"dark\":\"ThemeMenu_dark__ZdEdh\",\"light\":\"ThemeMenu_light__GqNTc\",\"violet\":\"ThemeMenu_violet__VqZ5U\"};","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport css from './ThemeMenu.module.css';\nimport Icon from 'components/Icon/Icon';\nimport { useSelector } from 'react-redux';\nimport { selectTheme } from 'redux/auth/selectors';\nimport { changeTheme } from 'redux/auth/operations';\n\nexport const ThemeMenu = () => {\n  const [themeOption, setThemeOption] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const theme = useSelector(selectTheme);\n\n  const dispatch = useDispatch();\n\n  const handleThemeChange = event => {\n    event.stopPropagation();\n    setThemeOption(event.target.innerText);\n    setIsOpen(false);\n    dispatch(changeTheme({ theme: event.target.innerText.toLowerCase() }));\n  };\n\n  const handleClick = event => {\n    event.stopPropagation();\n    setIsOpen(!isOpen);\n  };\n\n  useEffect(() => {\n    const closeMenuOnClickOutside = event => {\n      setIsOpen(false);\n    };\n\n    window.addEventListener('click', closeMenuOnClickOutside);\n\n    return () => {\n      window.removeEventListener('click', closeMenuOnClickOutside);\n    };\n  }, []);\n\n  return (\n    <div\n      className={\n        (theme === 'dark' && css.dark) ||\n        (theme === 'light' && css.light) ||\n        (theme === 'violet' && css.violet)\n      }\n    >\n      <div className={css.themeWrapper}>\n        <button\n          className={\n            theme === 'violet' ? css.themeButtonViolet : css.themeButtonGreen\n          }\n          onClick={handleClick}\n        >\n          {themeOption === '' ? 'Theme' : themeOption}\n          <Icon name=\"#icon-chevron-down\" width=\"16px\" height=\"16px\" />\n        </button>\n        <div\n          className={isOpen ? css.themeMenuOpen : css.themeMenu}\n          onClick={e => e.stopPropagation()}\n        >\n          <ul>\n            <li\n              className={\n                theme === 'violet' ? css.themeItemViolet : css.themeItemGreen\n              }\n              onClick={handleThemeChange}\n            >\n              Light\n            </li>\n            <li\n              className={\n                theme === 'violet' ? css.themeItemViolet : css.themeItemGreen\n              }\n              onClick={handleThemeChange}\n            >\n              Dark\n            </li>\n            <li\n              className={\n                theme === 'violet' ? css.themeItemViolet : css.themeItemGreen\n              }\n              onClick={handleThemeChange}\n            >\n              Violet\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"dark\":\"Modal_dark__SqZ7p\",\"light\":\"Modal_light__e8HI7\",\"violet\":\"Modal_violet__Rek9R\",\"modal\":\"Modal_modal__DJDMv\",\"modalDark\":\"Modal_modalDark__hHr1L\",\"overlay\":\"Modal_overlay__r63M6\",\"close_Button\":\"Modal_close_Button__GdX7v\"};","import css from './Modal.module.css';\nimport { useEffect } from 'react';\nimport sprite from '../../images/sprite.svg';\nimport { useSelector } from 'react-redux';\nimport { selectTheme } from 'redux/auth/selectors';\n\nexport default function Modal({ onClose, children }) {\n  const theme = useSelector(selectTheme);\n\n  const handleOverlayClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  return (\n    <div className={css.overlay} onClick={handleOverlayClick}>\n      <div\n        className={\n          (theme === 'dark' && css.dark) ||\n          (theme === 'light' && css.light) ||\n          (theme === 'violet' && css.violet)\n        }\n      >\n        <div className={theme === 'dark' ? css.modalDark : css.modal}>\n          <>\n            <button\n              type=\"button\"\n              className={css.close_Button}\n              onClick={onClose}\n            >\n              <svg width={18} height={18} aria-label=\"close\">\n                <use href={sprite + '#icon-x-close'} />\n              </svg>\n            </button>\n            {children}\n          </>\n        </div>\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"EditUserProfile_title__Zmf26\",\"form\":\"EditUserProfile_form__0DzOC\",\"input\":\"EditUserProfile_input__vs4br\",\"btn\":\"EditUserProfile_btn__nFH+u\",\"wrap\":\"EditUserProfile_wrap__niD9H\",\"eye_icon\":\"EditUserProfile_eye_icon__nO+8m\",\"error\":\"EditUserProfile_error__95Psz\"};","var _g, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgUserDark(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 68,\n    height: 68,\n    viewBox: \"0 0 68 68\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"user\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_443_563)\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 68,\n    height: 68,\n    rx: 8,\n    fill: \"#1F1F1F\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group 1456\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    id: \"Ellipse 190\",\n    cx: 34.3333,\n    cy: 31.3334,\n    r: 11.3334,\n    fill: \"#151515\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Ellipse 191\",\n    d: \"M61.7529 69.812C61.7529 66.1512 61.0319 62.5263 59.6309 59.1441C58.23 55.762 56.1766 52.6889 53.5881 50.1004C50.9995 47.5118 47.9264 45.4584 44.5443 44.0575C41.1622 42.6566 37.5372 41.9355 33.8764 41.9355C30.2157 41.9355 26.5907 42.6566 23.2086 44.0575C19.8265 45.4584 16.7534 47.5118 14.1648 50.1004C11.5763 52.6889 9.52289 55.762 8.12197 59.1441C6.72105 62.5263 6 66.1512 6 69.812L33.8765 69.812H61.7529Z\",\n    fill: \"#151515\"\n  }))))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_443_563\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 68,\n    height: 68,\n    rx: 8,\n    fill: \"white\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgUserDark);\nexport default __webpack_public_path__ + \"static/media/user_dark.05066aa8a7a77e1a6c1c27f575ad29a8.svg\";\nexport { ForwardRef as ReactComponent };","var _g, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgUserLight(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 68,\n    height: 68,\n    viewBox: \"0 0 68 68\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"user\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_443_593)\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 68,\n    height: 68,\n    rx: 8,\n    fill: \"#F6F6F7\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group 1456\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    id: \"Ellipse 190\",\n    cx: 34.3334,\n    cy: 31.3334,\n    r: 11.3334,\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Ellipse 191\",\n    d: \"M61.7529 69.8119C61.7529 66.1511 61.0319 62.5261 59.6309 59.144C58.23 55.7619 56.1766 52.6888 53.5881 50.1002C50.9995 47.5117 47.9264 45.4583 44.5443 44.0574C41.1622 42.6565 37.5372 41.9354 33.8764 41.9354C30.2157 41.9354 26.5907 42.6565 23.2086 44.0574C19.8265 45.4583 16.7534 47.5117 14.1648 50.1002C11.5763 52.6888 9.52289 55.7619 8.12197 59.144C6.72105 62.5261 6 66.1511 6 69.8119L33.8765 69.8119H61.7529Z\",\n    fill: \"white\"\n  }))))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_443_593\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 68,\n    height: 68,\n    rx: 8,\n    fill: \"white\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgUserLight);\nexport default __webpack_public_path__ + \"static/media/user_light.38be126dda7ead2a3958f320945c2042.svg\";\nexport { ForwardRef as ReactComponent };","var _g, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgUserViolet(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 68,\n    height: 68,\n    viewBox: \"0 0 68 68\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"user\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_443_673)\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 68,\n    height: 68,\n    rx: 8,\n    fill: \"#ECEDFD\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group 1456\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    id: \"Ellipse 190\",\n    cx: 34.3334,\n    cy: 31.3334,\n    r: 11.3334,\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Ellipse 191\",\n    d: \"M61.7529 69.812C61.7529 66.1512 61.0319 62.5263 59.6309 59.1441C58.23 55.762 56.1766 52.6889 53.5881 50.1004C50.9995 47.5118 47.9264 45.4584 44.5443 44.0575C41.1622 42.6566 37.5372 41.9355 33.8764 41.9355C30.2157 41.9355 26.5907 42.6566 23.2086 44.0575C19.8265 45.4584 16.7534 47.5118 14.1648 50.1004C11.5763 52.6889 9.52289 55.762 8.12197 59.1441C6.72105 62.5263 6 66.1512 6 69.812L33.8765 69.812H61.7529Z\",\n    fill: \"white\"\n  }))))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_443_673\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 68,\n    height: 68,\n    rx: 8,\n    fill: \"white\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgUserViolet);\nexport default __webpack_public_path__ + \"static/media/user_violet.c65c268bc0a034362a25f19c9f578b51.svg\";\nexport { ForwardRef as ReactComponent };","import { useSelector } from 'react-redux';\nimport { selectUser } from 'redux/auth/selectors';\nimport { selectIsLoading } from 'redux/auth/selectors';\n\nimport avaDark from '../../images/user_dark.svg';\nimport avaLight from '../../images/user_light.svg';\nimport avaViolet from '../../images/user_violet.svg';\n\nimport { Puff } from 'react-loader-spinner';\n\nconst Avatar = ({ size, onClick, preload }) => {\n  const user = useSelector(selectUser);\n  const isLoading = useSelector(selectIsLoading);\n  const defaultAvatar = {\n    dark: avaDark,\n    light: avaLight,\n    violet: avaViolet,\n  };\n  let src = user.avatarURL ? user.avatarURL : defaultAvatar[user.theme];\n  if (preload) src = preload;\n\n  const mainColor = {\n    dark: '#bedbb0',\n    light: '#bedbb0',\n    violet: '#5255bc',\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <button\n          style={{\n            background: 'none',\n            border: 'none',\n            padding: '0',\n          }}\n        >\n          <Puff\n            height=\"80\"\n            width=\"80\"\n            radius={1}\n            color={mainColor[user.theme]}\n            ariaLabel=\"puff-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n          />\n        </button>\n      ) : (\n        <button\n          style={{\n            background: 'none',\n            border: 'none',\n            padding: '0',\n          }}\n        >\n          <img\n            src={src}\n            alt={user.name}\n            width={size}\n            height={size}\n            onClick={onClick}\n            style={{\n              borderRadius: '5px',\n              cursor: 'pointer',\n              border: '1px solid #9dc888',\n            }}\n          />\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default Avatar;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"AvatarModal_container__aDm-Z\",\"thumbsContainer\":\"AvatarModal_thumbsContainer__liWMp\",\"thumb\":\"AvatarModal_thumb__5dI8o\",\"imageG\":\"AvatarModal_imageG__klqHG\",\"btn\":\"AvatarModal_btn__JSvzt\",\"fileInput\":\"AvatarModal_fileInput__4L2Bl\"};","import { useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from 'redux/auth/selectors';\nimport styles from './AvatarModal.module.css';\nimport avaDark from '../../images/user_dark.svg';\nimport avaLight from '../../images/user_light.svg';\nimport avaViolet from '../../images/user_violet.svg';\n\nexport function Previews({ onImageSelect }) {\n  const user = useSelector(selectUser);\n  const fileInput = useRef(null);\n\n  const defaultAvatar = {\n    dark: avaDark,\n    light: avaLight,\n    violet: avaViolet,\n  };\n  const defaultPreview = user.avatarURL\n    ? user.avatarURL\n    : defaultAvatar[user.theme];\n\n  const [preview, setPreview] = useState(defaultPreview);\n\n  const handlePickImage = e => {\n    const selectedFile = e.target.files[0];\n    onImageSelect(selectedFile);\n    setPreview(URL.createObjectURL(selectedFile));\n  };\n\n  const handleLoadedImage = () => {\n    if (preview.startsWith('blob:')) URL.revokeObjectURL(preview);\n  };\n\n  return (\n    <section className={styles.container}>\n      <div className={styles.imageG}>\n        <input\n          className={styles.fileInput}\n          type=\"file\"\n          accept=\".jpg, .jpeg, .png\"\n          onChange={handlePickImage}\n          ref={fileInput}\n        />\n        <aside className={styles.thumbsContainer}>\n          <div className={styles.thumb}>\n            <img\n              src={preview}\n              alt=\"avatarURL\"\n              className={styles.imageG}\n              onLoad={handleLoadedImage}\n            />\n          </div>\n        </aside>\n        <span className={styles.btn} onClick={() => fileInput.current.click()}>\n          +\n        </span>\n      </div>\n    </section>\n  );\n}\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from '../Modal/Modal';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\nimport { EyeOpen } from '../AuthForm/EyeOpen/EyeOpen';\nimport { EyeClose } from '../AuthForm/EyeClose/EyeClose';\nimport { Loader } from '../Loader/Loader';\nimport styles from './EditUserProfile.module.css';\nimport Avatar from 'components/Avatar/Avatar';\nimport { Previews } from 'components/AvatarModal/AvatarModal';\nimport { updateUser } from 'redux/auth/operations';\nimport { selectUser } from 'redux/auth/selectors';\n\nconst updateUserSchema = object({\n  name: string()\n    .min(2, 'minimum 2 characters')\n    .max(32, 'maximum 32 characters')\n    .test(\n      'only-allowed-chars',\n      'name can contain: only Latin, numbers, special characters',\n      value => /^[a-zA-Z0-9\\-!@#$%^&*()_+,.:;’“?/]+$/.test(value)\n    )\n    .matches(/^[a-zA-Z0-9 !@#$%^&*()_+,.:;’“?/-]+$/, 'Invalid name format'),\n  email: string()\n    .email()\n    .matches(/^[a-zA-Z0-9]+@[a-zA-Z]+\\.[a-zA-Z]{2,3}$/, 'Invalid email format'),\n  password: string()\n    .min(8, 'minimum 8 characters')\n    .max(64, 'maximum 64 characters')\n    .test(\n      'no-spaces',\n      'Invalid format: without spaces',\n      value => !/\\s/.test(value)\n    )\n    .test(\n      'only-allowed-chars',\n      'password can contain: only Latin, numbers, special characters',\n      value => /^[a-zA-Z0-9\\-!@#$%^&*()_+,.:;’“?/]+$/.test(value)\n    )\n    .matches(/^[a-zA-Z0-9\\-!@#$%^&*()_+,.:;’“?/]+$/, 'Invalid password format'),\n});\n\nexport const EditUserProfile = () => {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n\n  const initialValues = {\n    avatar: null,\n    name: user.name,\n    email: user.email,\n    password: '',\n  };\n\n  const [passwordShown, setPasswordShown] = useState(false);\n  const [passwordIcon, setpasswordIcon] = useState(<EyeClose />);\n\n  const togglPassword = () => {\n    setPasswordShown(!passwordShown);\n    setpasswordIcon(!passwordShown ? <EyeOpen /> : <EyeClose />);\n  };\n\n  const FormError = ({ name }) => {\n    return (\n      <ErrorMessage\n        name={name}\n        render={message => <p className={styles.error}>{message}</p>}\n      />\n    );\n  };\n\n  const handleSubmit = async (values, { setSubmitting, resetForm }) => {\n    setSubmitting(true);\n    let formData = new FormData();\n    formData.set('name', values.name);\n    formData.set('email', values.email);\n    if (values.avatar) formData.set('avatar', values.avatar);\n    if (values.password) formData.set('password', values.password);\n    try {\n      await dispatch(updateUser(formData));\n      resetForm();\n      setIsModalOpen(false);\n    } catch (error) {\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const toggleModal = () => setIsModalOpen(state => !state);\n\n  return (\n    <div>\n      <Avatar size={32} onClick={toggleModal} />\n      {isModalOpen && (\n        <Modal onClose={toggleModal}>\n          <Formik\n            autoComplete=\"off\"\n            initialValues={initialValues}\n            validationSchema={updateUserSchema}\n            onSubmit={handleSubmit}\n          >\n            {({ errors, values, setFieldValue }) => (\n              <Form className={styles.form}>\n                <div className={styles.wrap}>\n                  <p className={styles.title}>Edit profile</p>\n                  <Previews\n                    onImageSelect={selectedImage => {\n                      setFieldValue('avatar', selectedImage);\n                    }}\n                  />\n                </div>\n                <div className={styles.wrap}>\n                  <Field\n                    className={styles.input}\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Enter your name\"\n                  />\n                  {errors.name && <FormError name=\"name\" />}\n                </div>\n                <div className={styles.wrap}>\n                  <Field\n                    className={styles.input}\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Enter your email\"\n                  />\n                  {errors.email && <FormError name=\"email\" />}\n                </div>\n                <div className={styles.wrap}>\n                  <Field\n                    className={styles.input}\n                    type={passwordShown ? 'text' : 'password'}\n                    name=\"password\"\n                    placeholder=\"Change password\"\n                  />\n                  <span className={styles.eye_icon} onClick={togglPassword}>\n                    {passwordIcon}\n                  </span>\n                  {errors.password && <FormError name=\"password\" />}\n                </div>\n                <button className={styles.btn} type=\"submit\">\n                  <div className={styles.wrap}>\n                    <span>Send</span>\n                    <Loader />\n                  </div>\n                </button>\n              </Form>\n            )}\n          </Formik>\n        </Modal>\n      )}\n    </div>\n  );\n};\n","import css from './Header.module.css';\nimport Icon from 'components/Icon/Icon';\nimport { ThemeMenu } from 'components/ThemeMenu/ThemeMenu';\nimport { EditUserProfile } from 'components/EditUserProfile/EditUserProfile';\nimport { selectUser } from 'redux/auth/selectors';\nimport { selectTheme } from 'redux/auth/selectors';\nimport { useSelector } from 'react-redux';\n\nconst Header = ({ click }) => {\n  const user = useSelector(selectUser);\n  const theme = useSelector(selectTheme);\n\n  return (\n    <div\n      className={\n        (theme === 'dark' && css.dark) ||\n        (theme === 'light' && css.light) ||\n        (theme === 'violet' && css.violet)\n      }\n    >\n      <div className={css.header}>\n        <div className={css.burgerMenu}>\n          <button\n            onClick={click}\n            className={\n              theme === 'violet' ? css.burgerStyleViolet : css.burgerStyle\n            }\n          >\n            <Icon\n              className={css.burgerIcon}\n              name=\"#icon-menu\"\n              width=\"32px\"\n              height=\"32px\"\n            />\n          </button>\n        </div>\n\n        <div className={css.headerSelect}>\n          <ThemeMenu />\n          <ul className={css.userInfo}>\n            <li className={css.styleName}>{user.name}</li>\n            <li>\n              <EditUserProfile />\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"HeaderDashboard_wrapper__XUU1r\",\"title\":\"HeaderDashboard_title__bqgjc\",\"filter\":\"HeaderDashboard_filter__Rygz4\",\"filterViolet\":\"HeaderDashboard_filterViolet__frJL3\",\"iconViolet\":\"HeaderDashboard_iconViolet__g9XGx\",\"iconLight\":\"HeaderDashboard_iconLight__nn6VD\",\"iconDark\":\"HeaderDashboard_iconDark__BpO27\",\"filterText\":\"HeaderDashboard_filterText__Wnu0H\",\"modalFilterWrapper\":\"HeaderDashboard_modalFilterWrapper__VTUfz\",\"modalFilter\":\"HeaderDashboard_modalFilter__V9mup\",\"modalBoardDark\":\"HeaderDashboard_modalBoardDark__MJlXy\",\"modalBoard\":\"HeaderDashboard_modalBoard__Of93i\",\"modalLabel\":\"HeaderDashboard_modalLabel__-eOci\",\"modalLabelHeader\":\"HeaderDashboard_modalLabelHeader__tQ-qL\",\"modalShowAll\":\"HeaderDashboard_modalShowAll__3uXXS\",\"modalCheckbox\":\"HeaderDashboard_modalCheckbox__Z2PqL\",\"modalListOptions\":\"HeaderDashboard_modalListOptions__J-Ru8\",\"radio\":\"HeaderDashboard_radio__Co17m\",\"radioText\":\"HeaderDashboard_radioText__V9PZf\"};","import Modal from 'components/Modal/Modal';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { getActiveBoard } from 'redux/boards/operations';\nimport { selectActiveBoard, selectBoardsList } from 'redux/boards/selectors';\nimport sprite from '../../images/sprite.svg';\nimport styles from './HeaderDashboard.module.css';\nimport { selectTheme } from 'redux/auth/selectors';\n\nconst HeaderDashboard = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedPriority, setSelectedPriority] = useState('');\n  const { boardName } = useParams();\n  const dispatch = useDispatch();\n  const theme = useSelector(selectTheme);\n\n  useEffect(() => {\n    boardName && dispatch(getActiveBoard(boardName));\n  }, [dispatch, boardName]);\n\n  const allBoards = useSelector(selectBoardsList);\n  const currentBoard = useSelector(selectActiveBoard);\n\n  const toggleModal = () => setIsOpen(state => !state);\n\n  const options = [\n    {\n      color:\n        theme === 'dark' ? 'rgba(255, 255, 255, 0.3)' : 'rgba(22, 22, 22, 0.3)',\n      priority: 'Without priority',\n    },\n    { color: '#8FA1D0', priority: 'Low' },\n    { color: '#E09CB5', priority: 'Medium' },\n    { color: '#BEDBB0', priority: 'High' },\n  ];\n\n  const handlePriorityChange = event => {\n    setSelectedPriority(event.target.value);\n  };\n\n  const titleToShow =\n    allBoards.length > 0 &&\n    (currentBoard.title ? currentBoard.title : allBoards[0].title);\n\n  return (\n    <div className={styles.wrapper}>\n      <h2 className={styles.title}>{titleToShow}</h2>\n      <button\n        className={theme === 'violet' ? styles.filterViolet : styles.filter}\n        onClick={toggleModal}\n      >\n        <svg\n          className={\n            (theme === 'dark' && styles.iconDark) ||\n            (theme === 'light' && styles.iconLight) ||\n            (theme === 'violet' && styles.iconViolet)\n          }\n          width={16}\n          height={16}\n          aria-label=\"Filter\"\n        >\n          <title>Filter Icon</title>\n          <use href={sprite + '#icon-filter'} />\n        </svg>\n        <span className={styles.filterText}>Filters</span>\n      </button>\n      {isOpen && (\n        <Modal onClose={toggleModal}>\n          <form className={styles.modalFilterWrapper}>\n            <h2 className={styles.modalFilter}>Filters</h2>\n            <div className={theme === 'dark' ? styles.modalBoardDark : styles.modalBoard}></div>\n            <div className={styles.modalLabel}>\n              <h3 className={styles.modalLabelHeader}>Label color</h3>\n              <button type=\"button\" className={styles.modalShowAll}>\n                show all\n              </button>\n            </div>\n            <div className={styles.modalListOptions}>\n              {options.map((option, index) => (\n                <label key={index} className={styles.radio}>\n                  <input\n                    type=\"radio\"\n                    className={styles.modalListOptionsElement}\n                    name=\"priority\"\n                    value={`${option.priority}`}\n                    checked={selectedPriority === option.priority}\n                    onChange={handlePriorityChange}\n                  />\n                  <div\n                    className={styles.radioText}\n                    style={{ backgroundColor: option.color }}\n                  ></div>\n                  <div\n                    className={styles.modalCheckbox}\n                    style={{\n                      opacity: option.priority === selectedPriority ? 1 : 0.5,\n                      cursor: 'pointer',\n                    }}\n                  >\n                    {option.priority}\n                  </div>\n                </label>\n              ))}\n            </div>\n          </form>\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default HeaderDashboard;\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__wiIYs\",\"buttonViolet\":\"Button_buttonViolet__5Sqyb\"};","import { useSelector } from 'react-redux';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport { selectTheme } from 'redux/auth/selectors';\nimport sprite from '../../images/sprite.svg';\nimport styles from './Button.module.css';\n//  Приклад додавання кнопки <Button icon=\"true\" text=\"Add column\" />\nconst Button = ({ icon, text, onClick, loading }) => {\n  const theme = useSelector(selectTheme);\n  return (\n    <button\n      className={theme === 'violet' ? styles.buttonViolet : styles.button}\n      type=\"submit\"\n      onClick={onClick}\n    >\n      {loading ? (\n        <ClipLoader color=\"#1f1f1f\" size={30} />\n      ) : (\n        icon && (\n          <svg width={28} height={28} aria-label=\"plus\">\n            <title>Plus Icon</title>\n            <use href={sprite + '#icon-plus'} />\n          </svg>\n        )\n      )}\n\n      <span>{text}</span>\n    </button>\n  );\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"AddTaskCard_title__ndCWQ\",\"input\":\"AddTaskCard_input__CAgGe\",\"inputViolet\":\"AddTaskCard_inputViolet__v8LXE\",\"textarea\":\"AddTaskCard_textarea__KJPxK\",\"textareaViolet\":\"AddTaskCard_textareaViolet__APiUF\",\"wrap\":\"AddTaskCard_wrap__3KuOr\",\"label\":\"AddTaskCard_label__oEjHs\",\"radio\":\"AddTaskCard_radio__wNGFR\",\"btn\":\"AddTaskCard_btn__jRYLf\",\"btnViolet\":\"AddTaskCard_btnViolet__95bfk\",\"sidebarBoardButton\":\"AddTaskCard_sidebarBoardButton__J1NTQ\",\"btnIcon\":\"AddTaskCard_btnIcon__kK5cL\",\"btnIconViolet\":\"AddTaskCard_btnIconViolet__EkbJc\",\"priorityIcons\":\"AddTaskCard_priorityIcons__7cyhd\",\"radioLabel\":\"AddTaskCard_radioLabel__pxPA2\",\"radioInput\":\"AddTaskCard_radioInput__+0eMa\",\"radioButton\":\"AddTaskCard_radioButton__EbPwp\"};","import { format } from 'date-fns';\nimport { DayPicker } from 'react-day-picker';\nimport { usePopper } from 'react-popper';\nimport FocusTrap from 'focus-trap-react';\nimport { useRef, useState } from 'react';\nimport 'react-day-picker/dist/style.css';\nimport './Calendar.css';\n\nexport default function CustomMonthLayout({ daySelected, setDaySelected }) {\n  // const [daySelected, setDaySelected] = React.useState ();\n\n  // console.log(format(daySelected, 'dd/MM/yyyy'));\n  const DateBefore = { before: new Date() };\n\n  const [isPopperOpen, setIsPopperOpen] = useState(false);\n  const popperRef = useRef(null);\n  const buttonRef = useRef(null);\n  const [popperElement, setPopperElement] = useState(null);\n  const popper = usePopper(popperRef.current, popperElement, {\n    placement: 'top',\n  });\n  const closePopper = () => {\n    setIsPopperOpen(false);\n    buttonRef?.current?.focus();\n  };\n  const handleButtonClick = e => {\n    setIsPopperOpen(true);\n  };\n\n  const handleDaySelect = date => {\n    setDaySelected(date);\n    if (date) {\n      closePopper();\n    }\n  };\n\n  let footer = <p>Please pick a day.</p>;\n  if (daySelected) {\n    footer = <p>You picked {format(daySelected, 'PP')}.</p>;\n  }\n\n  return (\n    <div>\n      <div ref={popperRef}>\n        <button\n          ref={buttonRef}\n          type=\"button\"\n          aria-label=\"Pick a date\"\n          onClick={handleButtonClick}\n        >\n          Deadline: {format(daySelected, 'dd/MM/yyyy')}\n        </button>\n      </div>\n      {isPopperOpen && (\n        <FocusTrap\n          active\n          // focusTrapOptions={{\n          //   initialFocus: true,\n          //   allowOutsideClick: true,\n          //   clickOutsideDeactivates: true,\n          //   onDeactivate: closePopper,\n          //   fallbackFocus: buttonRef.current,\n          // }}\n        >\n          <div\n            tabIndex={-1}\n            style={popper.styles.popper}\n            className=\"dialog-sheet\"\n            {...popper.attributes.popper}\n            ref={setPopperElement}\n            role=\"dialog\"\n            aria-label=\"DayPicker calendar\"\n          >\n            <DayPicker\n              initialFocus={isPopperOpen}\n              mode=\"single\"\n              defaultMonth={daySelected}\n              selected={daySelected}\n              onSelect={handleDaySelect}\n              showOutsideDays\n              ISOWeek\n              required\n              disabled={DateBefore}\n              footer={footer}\n            />\n          </div>\n        </FocusTrap>\n      )}\n    </div>\n  );\n\n  \n}\n","import Button from 'components/Button/Button';\nimport { Field, Form, Formik } from 'formik';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport { addTask } from 'redux/boards/operations';\nimport { selectIsBoardsLoading } from 'redux/boards/selectors';\nimport { object, string } from 'yup';\nimport sprite from '../../images/sprite.svg';\nimport Modal from '../Modal/Modal';\nimport styles from './AddTaskCard.module.css';\nimport { selectTheme } from 'redux/auth/selectors';\n\n// додавання календаря\nimport CustomMonthLayout from 'components/Calendar/Calendar'; //delete//\nimport { format } from 'date-fns';\nconst today = new Date();\n\nconst initialValues = {\n  title: '',\n  description: '',\n  priority: '',\n  deadline: today, //календар//\n};\n\nconst registerSchema = object({\n  title: string().required(),\n  priority: string(),\n  description: string().required(),\n});\n\nexport const AddTaskCard = ({ columnId }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [priority, setPriority] = useState('');\n  // const [column] = useState('64d0d5ff12156380132f910a');\n  // const addLoading = useSelector(selectTaskIsLoading);\n  const dispatch = useDispatch();\n  const theme = useSelector(selectTheme);\n\n  const isBoardsLoading = useSelector(selectIsBoardsLoading);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const toggleModal = () => setIsModalOpen(state => !state);\n\n  const [daySelected, setDaySelected] = useState(today); //календар//\n\n  const radioOptions = [\n    { color: '#8fa1d0', priority: 'low' },\n    { color: '#e09cb5', priority: 'medium' },\n    { color: '#bedbb0', priority: 'high' },\n    {\n      color:\n        theme === 'dark' ? 'rgba(255, 255, 255, 0.3)' : 'rgba(22, 22, 22, 0.3)',\n      priority: 'without',\n    },\n  ];\n\n  const handleChange = ({ target: { name, value } }, setFieldValue) => {\n    setFieldValue(name, value);\n    switch (name) {\n      case 'title':\n        return setTitle(value);\n      case 'description':\n        return setDescription(value);\n      case 'priority':\n        return setPriority(value);\n      default:\n        return;\n    }\n  };\n  const onSubmit = (values, { setSubmitting }) => {\n    dispatch(\n      addTask({\n        title: title,\n        description: description,\n        priority: priority || 'without',\n        deadline: format(daySelected, 'dd/MM/yyyy'),\n        column: columnId,\n      })\n    ).then(() => {\n      !isBoardsLoading && toggleModal();\n    });\n    setTitle('');\n    setDescription('');\n    setPriority('');\n    setSubmitting(false);\n  };\n\n  return (\n    <div>\n      <Button icon=\"true\" text=\"Add another card\" onClick={toggleModal} />\n      {isModalOpen && (\n        <Modal onClose={toggleModal}>\n          <Formik\n            initialValues={initialValues}\n            validationSchema={registerSchema}\n            onSubmit={onSubmit}\n          >\n            {({ setFieldValue }) => (\n              <Form autoComplete=\"off\">\n                <p className={styles.title}>Add card</p>\n                <Field\n                  className={\n                    theme === 'violet' ? styles.inputViolet : styles.input\n                  }\n                  type=\"text\"\n                  name=\"title\"\n                  placeholder=\"Title\"\n                  value={title}\n                  onChange={e => handleChange(e, setFieldValue)}\n                />\n\n                <Field\n                  as=\"textarea\"\n                  className={\n                    theme === 'violet' ? styles.textareaViolet : styles.textarea\n                  }\n                  name=\"description\"\n                  placeholder=\"Description\"\n                  value={description}\n                  onChange={e => handleChange(e, setFieldValue)}\n                />\n                <div className=\"wrap\">\n                  <span className={styles.label}>Label color</span>\n                  <div className={styles.priorityIcons}>\n                    {radioOptions.map((option, index) => (\n                      <label key={index} className={styles.radioLabel}>\n                        <Field\n                          type=\"radio\"\n                          name=\"priority\"\n                          value={`${option.priority}`}\n                          className={styles.radioInput}\n                          onChange={e => handleChange(e, setFieldValue)}\n                        />\n                        <span\n                          className={styles.radioButton}\n                          style={{ backgroundColor: option.color }}\n                        ></span>\n                      </label>\n                    ))}\n                  </div>\n                </div>\n                <span className={styles.label}>Deadline</span>\n                <CustomMonthLayout\n                  daySelected={daySelected}\n                  setDaySelected={setDaySelected}\n                />\n\n                <button\n                  className={theme === 'violet' ? styles.btnViolet : styles.btn}\n                  type=\"submit\"\n                  onClick={() => {\n                    setFieldValue('title', title);\n                    setFieldValue('description', description);\n                    // toggleModal();\n                  }}\n                >\n                  {isBoardsLoading ? (\n                    <ClipLoader color=\"#1f1f1f\" size={30} />\n                  ) : (\n                    <svg className={\n                      theme === 'violet' ? styles.btnIconViolet : styles.btnIcon\n                    }>\n                      <use href={sprite + '#icon-plus'}></use>\n                    </svg>\n                  )}\n                  <span>Add</span>\n                </button>\n              </Form>\n            )}\n          </Formik>\n        </Modal>\n      )}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"EditTaskCard_title__eZoGy\",\"input\":\"EditTaskCard_input__Y9SiW\",\"inputViolet\":\"EditTaskCard_inputViolet__yV4H2\",\"textarea\":\"EditTaskCard_textarea__4RoA-\",\"textareaViolet\":\"EditTaskCard_textareaViolet__9jVhq\",\"wrap\":\"EditTaskCard_wrap__z+fz+\",\"label\":\"EditTaskCard_label__08Cl7\",\"radio\":\"EditTaskCard_radio__I4DQV\",\"btn\":\"EditTaskCard_btn__mIlxO\",\"btnViolet\":\"EditTaskCard_btnViolet__dQ6aj\",\"sidebarBoardButton\":\"EditTaskCard_sidebarBoardButton__imVvt\",\"btnIcon\":\"EditTaskCard_btnIcon__uVayp\",\"btnIconViolet\":\"EditTaskCard_btnIconViolet__zREY9\",\"priorityIcons\":\"EditTaskCard_priorityIcons__Ful1l\",\"radioLabel\":\"EditTaskCard_radioLabel__gBLnG\",\"radioInput\":\"EditTaskCard_radioInput__UE0rP\",\"radioButton\":\"EditTaskCard_radioButton__+f2Rb\",\"cardButton\":\"EditTaskCard_cardButton__fc15Q\"};","import { Field, Form, Formik } from 'formik';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport { selectIsBoardsLoading } from 'redux/boards/selectors';\n\nimport { updateTask } from 'redux/boards/operations';\nimport { object, string } from 'yup';\nimport sprite from '../../images/sprite.svg';\nimport Modal from '../Modal/Modal';\nimport styles from './EditTaskCard.module.css';\nimport { selectTheme } from 'redux/auth/selectors';\n\n// додавання календаря\nimport CustomMonthLayout from 'components/Calendar/Calendar';\nimport { format } from 'date-fns';\n// const today = new Date();\n\nconst registerSchema = object({\n  title: string().required(),\n  priority: string().required(),\n  description: string().required(),\n});\n\nexport const EditTaskCard = ({ task }) => {\n  const {\n    _id: taskId,\n    title: oldTitle,\n    description: oldDescription,\n    priority: oldPriority,\n    deadline,\n  } = task;\n\n  const isBoardsLoading = useSelector(selectIsBoardsLoading);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const toggleModal = () => setIsModalOpen(state => !state);\n  const theme = useSelector(selectTheme);\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState(oldTitle);\n  const [description, setDescription] = useState(oldDescription);\n  const [priority, setPriority] = useState(oldPriority);\n  const deadlineInDate = new Date(\n    deadline.replace('/', '.').replace(/(\\d+).(\\d+).(\\d+)/, '$3/$2/$1')\n  );\n  const [newDaySelected, setNewDaySelected] = useState(deadlineInDate);\n\n  const initialValues = {\n    title: '',\n    description: '',\n    priority: oldPriority,\n  };\n\n  const handleChange = ({ target: { name, value } }, setFieldValue) => {\n    setFieldValue(name, value);\n    switch (name) {\n      case 'title':\n        return setTitle(value);\n      case 'description':\n        return setDescription(value);\n      case 'priority':\n        return setPriority(value);\n      default:\n        return;\n    }\n  };\n\n  const onSubmit = (values, { setSubmitting }) => {\n    console.log(taskId);\n    dispatch(\n      updateTask({\n        id: taskId,\n        data: {\n          title: title,\n          description: description,\n          priority: priority,\n          deadline: format(newDaySelected, 'dd/MM/yyyy'),\n        },\n      })\n    )\n      .then(() => {\n        !isBoardsLoading && toggleModal();\n      })\n      .else(setSubmitting(false));\n  };\n\n  const radioOptions = [\n    { color: '#8fa1d0', priority: 'low' },\n    { color: '#e09cb5', priority: 'medium' },\n    { color: '#bedbb0', priority: 'high' },\n    {\n      color:\n        theme === 'dark' ? 'rgba(255, 255, 255, 0.3)' : 'rgba(22, 22, 22, 0.3)',\n      priority: 'without',\n    },\n  ];\n\n  return (\n    <div>\n      <button className={styles.cardButton} onClick={toggleModal}>\n        <svg\n          width={16}\n          height={16}\n          aria-label=\"icon-pencil\"\n          className={styles.svg}\n        >\n          <title>Edit card</title>\n          <use href={sprite + '#icon-pencil'} />\n        </svg>\n      </button>\n      {isModalOpen && (\n        <Modal onClose={toggleModal}>\n          <Formik\n            initialValues={initialValues}\n            validationSchema={registerSchema}\n            onSubmit={onSubmit}\n          >\n            {({ setFieldValue }) => (\n              <Form autoComplete=\"off\">\n                <p className={styles.title}>Edit card</p>\n                <Field\n                  className={\n                    theme === 'violet' ? styles.inputViolet : styles.input\n                  }\n                  type=\"text\"\n                  name=\"title\"\n                  placeholder=\"Title\"\n                  value={title}\n                  onChange={e => handleChange(e, setFieldValue)}\n                />\n\n                <Field\n                  as=\"textarea\"\n                  className={\n                    theme === 'violet' ? styles.textareaViolet : styles.textarea\n                  }\n                  name=\"description\"\n                  placeholder=\"Description\"\n                  value={description}\n                  onChange={e => handleChange(e, setFieldValue)}\n                />\n                <div className=\"wrap\">\n                  <span className={styles.label}>Label color</span>\n                  <div className={styles.priorityIcons}>\n                    {radioOptions.map((option, index) => (\n                      <label key={index} className={styles.radioLabel}>\n                        <Field\n                          type=\"radio\"\n                          name=\"priority\"\n                          value={`${option.priority}`}\n                          className={styles.radioInput}\n                          onChange={e => handleChange(e, setFieldValue)}\n                        />\n                        <span\n                          className={styles.radioButton}\n                          style={{ backgroundColor: option.color }}\n                        ></span>\n                      </label>\n                    ))}\n                  </div>\n                </div>\n\n                <CustomMonthLayout\n                  daySelected={newDaySelected}\n                  setDaySelected={setNewDaySelected}\n                />\n\n                <button\n                  className={theme === 'violet' ? styles.btnViolet : styles.btn}\n                  type=\"submit\"\n                  onClick={() => {\n                    setFieldValue('title', title);\n                    setFieldValue('description', description);\n                  }}\n                >\n                  {isBoardsLoading ? (\n                    <ClipLoader color=\"#1f1f1f\" size={30} />\n                  ) : (\n                    <svg\n                      className={\n                        theme === 'violet'\n                          ? styles.btnIconViolet\n                          : styles.btnIcon\n                      }\n                    >\n                      <use href={sprite + '#icon-plus'}></use>\n                    </svg>\n                  )}\n                  <span>Edit</span>\n                </button>\n              </Form>\n            )}\n          </Formik>\n        </Modal>\n      )}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"dark\":\"Card_dark__QjWnf\",\"light\":\"Card_light__VgG5D\",\"violet\":\"Card_violet__fJJm3\",\"card\":\"Card_card__-SwHU\",\"textWrapper\":\"Card_textWrapper__e3fpT\",\"title\":\"Card_title__A6GVy\",\"description\":\"Card_description__jyadU\",\"subTitle\":\"Card_subTitle__58zSh\",\"deadlineText\":\"Card_deadlineText__1vu9P\",\"priorityText\":\"Card_priorityText__UiOn7\",\"cardButton\":\"Card_cardButton__2fbMp\",\"cardButtonNotHover\":\"Card_cardButtonNotHover__g85Ih\",\"wrapper\":\"Card_wrapper__+jZHY\",\"wrapperDark\":\"Card_wrapperDark__zcuEq\",\"cardIcons\":\"Card_cardIcons__JjdP0\",\"cardIcon\":\"Card_cardIcon__Kc9L8\",\"priority\":\"Card_priority__thbRH\",\"bell\":\"Card_bell__Tfw4C\",\"priority_high\":\"Card_priority_high__ViLLU\",\"priority_medium\":\"Card_priority_medium__KaShE\",\"priority_low\":\"Card_priority_low__aPtTf\",\"priority_without\":\"Card_priority_without__TNaP+\"};","import { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useSelector } from 'react-redux';\nimport { selectTheme } from 'redux/auth/selectors';\nimport sprite from '../../images/sprite.svg';\nimport css from '../Modal/Modal.module.css';\n\nexport default function ModalPortal({ onClose, children }) {\n  const theme = useSelector(selectTheme);\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleOverlayClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n  const portalContainerId = 'modal-root';\n\n  const portalContainer = document.getElementById(portalContainerId);\n  if (!portalContainer) {\n    return null;\n  }\n  const modalContent = (\n    <div\n      className={\n        (theme === 'dark' && css.dark) ||\n        (theme === 'light' && css.light) ||\n        (theme === 'violet' && css.violet)\n      }\n    >\n      <div className={css.overlay} onClick={handleOverlayClick}>\n        <div className={theme === 'dark' ? css.modalDark : css.modal}>\n          <button type=\"button\" className={css.close_Button} onClick={onClose}>\n            <svg width={18} height={18} aria-label=\"close\">\n              <use href={sprite + '#icon-x-close'} />\n            </svg>\n          </button>\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n\n  return ReactDOM.createPortal(modalContent, portalContainer);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"dark\":\"ModalBoard_dark__ZcXFT\",\"light\":\"ModalBoard_light__IMYyQ\",\"violet\":\"ModalBoard_violet__JfySq\",\"title\":\"ModalBoard_title__m67UC\",\"text\":\"ModalBoard_text__fkoR2\",\"field\":\"ModalBoard_field__v33F9\",\"label\":\"ModalBoard_label__njbmy\",\"priority\":\"ModalBoard_priority__6OMdb\",\"input_svg\":\"ModalBoard_input_svg__nifPZ\",\"input_png\":\"ModalBoard_input_png__GYVtc\",\"label_svg\":\"ModalBoard_label_svg__XPxk+\",\"svg\":\"ModalBoard_svg__3h84+\",\"bg_priority\":\"ModalBoard_bg_priority__UPIqg\",\"label_png\":\"ModalBoard_label_png__mBDAR\",\"png\":\"ModalBoard_png__fqZG7\",\"btn\":\"ModalBoard_btn__zjx6I\",\"btnViolet\":\"ModalBoard_btnViolet__7ZFDV\",\"icon\":\"ModalBoard_icon__0na4G\",\"iconViolet\":\"ModalBoard_iconViolet__3FA-1\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport { deleteTask } from 'redux/boards/operations';\nimport { selectIsBoardsLoading } from 'redux/boards/selectors';\nimport style from './Card.module.css';\n\nimport sprite from '../../images/sprite.svg';\nimport ModalPortal from '../Modal/ModalPortal';\nimport styles from '../ModalBoard/ModalBoard.module.css';\n\nconst DeleteTask = ({ id }) => {\n  const isBoardsLoading = useSelector(selectIsBoardsLoading);\n  const [startLoading, setStartLoading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const toggleModal = () => setIsModalOpen(state => !state);\n\n  const handleAgreement = () => {\n    setStartLoading(true);\n    dispatch(deleteTask(id)).then(() => {\n      !isBoardsLoading && toggleModal();\n    });\n  };\n\n  return (\n    <div>\n      <button className={style.cardButton} onClick={toggleModal}>\n        <svg\n          width={16}\n          height={16}\n          aria-label=\"icon-trash\"\n          className={style.svg}\n        >\n          <title>Trash Icon</title>\n          <use href={sprite + '#icon-trash'} />\n        </svg>\n      </button>\n\n      {isModalOpen && (\n        <ModalPortal onClose={toggleModal}>\n          <h1 className={styles.title}>Delete task</h1>\n\n          <h3 className={styles.text}>\n            Are you sure you want to delete the task?\n          </h3>\n\n          <button\n            className={styles.btn}\n            type=\"button\"\n            disabled={isBoardsLoading}\n            onClick={handleAgreement}\n          >\n            {startLoading && isBoardsLoading && (\n              <ClipLoader color=\"#1f1f1f\" size={30} />\n            )}\n            Yes\n          </button>\n          <button className={styles.btn} type=\"button\" onClick={toggleModal}>\n            No\n          </button>\n        </ModalPortal>\n      )}\n    </div>\n  );\n};\n\nexport default DeleteTask;\n","import { EditTaskCard } from 'components/EditTaskCard/EditTaskCard';\nimport sprite from '../../images/sprite.svg';\nimport styles from './Card.module.css';\nimport DeleteTask from './DeleteCard';\nimport { selectTheme } from 'redux/auth/selectors';\nimport { useSelector } from 'react-redux';\n\nconst Card = ({ task }) => {\n  const { _id: id, title, description, priority, deadline } = task;\n  const theme = useSelector(selectTheme);\n\n  const deadlineInDate = new Date(\n    deadline.replace('/', '.').replace(/(\\d+).(\\d+).(\\d+)/, '$3/$2/$1')\n  );\n  const currentDate = new Date();\n  const deadlineNow = currentDate > deadlineInDate;\n\n  return (\n    <div\n      className={\n        (theme === 'dark' && styles.dark) ||\n        (theme === 'light' && styles.light) ||\n        (theme === 'violet' && styles.violet)\n      }\n    >\n      <div className={`${styles.card} ${styles[`priority_${priority}`]}`}>\n        <div className={styles.textWrapper}>\n          <h4 className={styles.title}>{title}</h4>\n          <p className={styles.description}>{description}</p>\n        </div>\n        <div className={theme === 'dark' ? styles.wrapperDark : styles.wrapper}>\n          <div className={styles.priority}>\n            <h5 className={styles.subTitle}>Priority</h5>\n            <p\n              className={`${styles.priorityText} ${\n                styles[`priority_${priority}`]\n              }`}\n            >\n              {priority}\n            </p>\n          </div>\n          <div className={styles.deadline}>\n            <h5 className={styles.subTitle}>Deadline</h5>\n            <p className={styles.deadlineText}>{deadline}</p>\n          </div>\n          <ul className={styles.cardIcons}>\n            <li className={styles.cardIcon}>\n              {deadlineNow && (\n                <button className={styles.cardButtonNotHover}>\n                  <svg\n                    width={16}\n                    height={16}\n                    aria-label=\"icon-bell\"\n                    className={styles.bell}\n                  >\n                    <title>Deadline</title>\n                    <use href={sprite + '#icon-bell'} />\n                  </svg>\n                </button>\n              )}\n            </li>\n            <li className={styles.cardIcon}>\n              <button className={styles.cardButton}>\n                <svg\n                  width={16}\n                  height={16}\n                  aria-label=\"icon-arrow-circle-broken-right\"\n                  className={styles.svg}\n                >\n                  <title>Move task</title>\n                  <use href={sprite + '#icon-arrow-circle-broken-right'} />\n                </svg>\n              </button>\n            </li>\n            <li className={styles.cardIcon}>\n              {/* <button className={styles.cardButton}>\n              <svg\n                width={16}\n                height={16}\n                aria-label=\"icon-pencil\"\n                className={styles.svg}\n              >\n                <title>Pencil Icon</title>\n                <use href={sprite + '#icon-pencil'} />\n              </svg>\n            </button> */}\n              <EditTaskCard task={task} />\n            </li>\n            <li className={styles.cardIcon}>\n              <DeleteTask id={id} />\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"EditColumn_title__QQq6E\",\"button\":\"EditColumn_button__6PLgx\",\"input\":\"EditColumn_input__jNmoq\"};","import Button from 'components/Button/Button';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateColumn } from 'redux/boards/operations';\nimport { selectIsBoardsLoading } from 'redux/boards/selectors';\nimport styles from './EditColumn.module.css';\n\nexport default function EditColumn({ id, title, onClose }) {\n  const isBoardsLoading = useSelector(selectIsBoardsLoading);\n  const dispatch = useDispatch();\n  const [newTitle, setNewTitle] = useState(title);\n\n  const changeTitle = event => {\n    setNewTitle(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(updateColumn([id, { title: newTitle }])).then(() => {\n      !isBoardsLoading && onClose();\n    });\n  };\n  return (\n    <>\n      <h2 className={styles.title}>Edit column</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          className={styles.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder={title}\n          value={newTitle}\n          onChange={changeTitle}\n        />\n        <Button loading={isBoardsLoading} icon=\"true\" text=\"Edit\" />\n      </form>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"column__container\":\"Column_column__container__OUZrU\",\"columnHeaderDark\":\"Column_columnHeaderDark__XPYo5\",\"columnHeader\":\"Column_columnHeader__Uocp5\",\"columnHeader__title\":\"Column_columnHeader__title__yZEp6\",\"columnHeader__controls\":\"Column_columnHeader__controls__8syUU\",\"columnHeader__buttonDark\":\"Column_columnHeader__buttonDark__2F+jC\",\"columnHeader__buttonLight\":\"Column_columnHeader__buttonLight__xSj6a\",\"columnHeader__buttonViolet\":\"Column_columnHeader__buttonViolet__lOii0\",\"cardList\":\"Column_cardList__nNvyf\",\"demo\":\"Column_demo__waHPR\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport { selectTheme } from 'redux/auth/selectors';\nimport { deleteColumn } from 'redux/boards/operations';\nimport { selectIsBoardsLoading } from 'redux/boards/selectors';\nimport sprite from '../../images/sprite.svg';\nimport style from '../Column/Column.module.css';\nimport ModalPortal from '../Modal/ModalPortal';\nimport styles from '../ModalBoard/ModalBoard.module.css';\n\nconst DeleteColumn = ({ id, tasks }) => {\n  const isBoardsLoading = useSelector(selectIsBoardsLoading);\n  const [startLoading, setStartLoading] = useState(false);\n  const theme = useSelector(selectTheme);\n\n  const dispatch = useDispatch();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const toggleModal = () => setIsModalOpen(state => !state);\n\n  const handleAgreement = () => {\n    setStartLoading(true);\n    dispatch(deleteColumn(id)).then(() => {\n      !isBoardsLoading && toggleModal();\n    });\n  };\n\n  return (\n    <div>\n      <button\n        className={\n          (theme === 'dark' && style.columnHeader__buttonDark) ||\n          (theme === 'light' && style.columnHeader__buttonLight) ||\n          (theme === 'violet' && style.columnHeader__buttonViolet)\n        }\n        onClick={toggleModal}\n      >\n        <svg\n          width={16}\n          height={16}\n          aria-label=\"icon-trash\"\n          className={style.svg}\n        >\n          <title>Delete column</title>\n          <use href={sprite + '#icon-trash'} />\n        </svg>\n      </button>\n      {isModalOpen && (\n        <ModalPortal onClose={toggleModal}>\n          <h1 className={styles.title}>Delete column</h1>\n          {tasks.length === 0 ? (\n            <h3 className={styles.text}>\n              Are you sure you want to delete the column?\n            </h3>\n          ) : (\n            <h3 className={styles.text}>\n              Sorry, but you cannot delete a column that has tasks... Clean it\n              first!\n            </h3>\n          )}\n          {tasks.length !== 0 ? (\n            <button className={styles.btn} type=\"button\" onClick={toggleModal}>\n              Close\n            </button>\n          ) : (\n            <>\n              <button\n                className={styles.btn}\n                type=\"button\"\n                disabled={isBoardsLoading}\n                onClick={handleAgreement}\n              >\n                {startLoading && isBoardsLoading && (\n                  <ClipLoader color=\"#1f1f1f\" size={30} />\n                )}\n                Yes\n              </button>\n              <button\n                className={styles.btn}\n                type=\"button\"\n                onClick={toggleModal}\n              >\n                No\n              </button>\n            </>\n          )}\n        </ModalPortal>\n      )}\n    </div>\n  );\n};\n\nexport default DeleteColumn;\n","import { useEffect, useState } from \"react\";\n\nimport { Droppable, DroppableProps } from \"react-beautiful-dnd\";\n\nexport const StrictModeDroppable = ({ children, ...props }: DroppableProps) => {\n\n    const [enabled, setEnabled] = useState(false);\n    \n    useEffect(() => {\n        const animation = requestAnimationFrame(() => setEnabled(true));\n        return () => {\n            cancelAnimationFrame(animation);\n            setEnabled(false);\n        };\n    }, []);\n    \n    if (!enabled) {\n        return null;\n    };\n\n    return <Droppable {...props}>{children}</Droppable>;\n};","import { AddTaskCard } from 'components/AddTaskCard/AddTaskCard';\nimport Card from 'components/Card/Card';\nimport EditColumn from 'components/PopUps/EditColumn/EditColumn';\nimport { useState } from 'react';\nimport sprite from '../../images/sprite.svg';\nimport Modal from '../Modal/Modal';\nimport styles from './Column.module.css';\n// import SimpleBar from 'simplebar';\nimport { useSelector } from 'react-redux';\nimport { selectTheme } from 'redux/auth/selectors';\nimport DeleteColumn from './DeleteColumn';\n\nimport { StrictModeDroppable } from 'components/StrictModeDroppable/StrictModeDroppable';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst Column = ({ column }) => {\n  const { _id, title, tasks, taskOrder } = column;\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const toggleModal = () => setIsModalOpen(state => !state);\n  const theme = useSelector(selectTheme);\n\n  // const myScroll = new SimpleBar(document.getElementById('demo'));\n  return (\n    <StrictModeDroppable droppableId={_id}>\n      {provided => (\n        <div\n          className={styles.column__container}\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n        >\n          <div\n            className={\n              theme === 'dark' ? styles.columnHeaderDark : styles.columnHeader\n            }\n          >\n            <span className={styles.columnHeader__title}>{title}</span>\n            <div className={styles.columnHeader__controls}>\n              <button\n                className={\n                  (theme === 'dark' && styles.columnHeader__buttonDark) ||\n                  (theme === 'light' && styles.columnHeader__buttonLight) ||\n                  (theme === 'violet' && styles.columnHeader__buttonViolet)\n                }\n                onClick={toggleModal}\n              >\n                <svg\n                  width={16}\n                  height={16}\n                  aria-label=\"icon-pencil\"\n                  className={styles.svg}\n                >\n                  <title>Edit column</title>\n                  <use href={sprite + '#icon-pencil'} />\n                </svg>\n              </button>\n              <DeleteColumn id={_id} tasks={tasks} />\n            </div>\n          </div>\n          {tasks && (\n            <ul className={styles.cardList}>\n              {taskOrder.map((taskId, index) => {\n                const task = tasks.find(el => el._id === taskId);\n                return (\n                  <Draggable draggableId={task._id} index={index} key={taskId}>\n                    {provided => (\n                      <li\n                        key={task._id}\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <Card task={task} />\n                      </li>\n                    )}\n                  </Draggable>\n                );\n              })}\n              {provided.placeholder}\n            </ul>\n          )}\n          <AddTaskCard columnId={_id} />\n          {isModalOpen && (\n            <Modal onClose={toggleModal}>\n              <EditColumn id={_id} title={title} onClose={toggleModal} />\n            </Modal>\n          )}\n        </div>\n      )}\n    </StrictModeDroppable>\n  );\n};\n\nexport default Column;\n","import airBalloon from '../images/smallBg/airBalloon.png';\nimport blue from '../images/smallBg/blue.png';\nimport cappadocia from '../images/smallBg/cappadocia.png';\nimport flowers from '../images/smallBg/flowers.png';\nimport gorge from '../images/smallBg/gorge.png';\nimport greens from '../images/smallBg/greens.png';\nimport moon from '../images/smallBg/moon.png';\nimport mountains from '../images/smallBg/mountains.png';\nimport base from '../images/smallBg/null.png';\nimport rocksAndSea from '../images/smallBg/rocksAndSea.png';\nimport sea from '../images/smallBg/sea.png';\nimport semiMoon from '../images/smallBg/semiMoon.png';\nimport trailer from '../images/smallBg/trailer.png';\nimport tree from '../images/smallBg/tree.png';\nimport violetSphere from '../images/smallBg/violetSphere.png';\nimport yacht from '../images/smallBg/yacht.png';\n\nexport const title = [\n  'null',\n  'airBalloon',\n  'blue',\n  'cappadocia',\n  'flowers',\n  'gorge',\n  'greens',\n  'moon',\n  'mountains',\n  'rocksAndSea',\n  'sea',\n  'semiMoon',\n  'trailer',\n  'tree',\n  'yacht',\n  'violetSphere',\n];\n\nexport const backgrounds = [\n  { title: 'null', src: base },\n  { title: 'flowers', src: flowers },\n  { title: 'mountains', src: mountains },\n  { title: 'tree', src: tree },\n  { title: 'semiMoon', src: semiMoon },\n  { title: 'greens', src: greens },\n  { title: 'blue', src: blue },\n  { title: 'rocksAndSea', src: rocksAndSea },\n  { title: 'violetSphere', src: violetSphere },\n  { title: 'moon', src: moon },\n  { title: 'yacht', src: yacht },\n  { title: 'airBalloon', src: airBalloon },\n  { title: 'gorge', src: gorge },\n  { title: 'sea', src: sea },\n  { title: 'cappadocia', src: cappadocia },\n  { title: 'trailer', src: trailer },\n];\n","export const icons = [\n  { key: 'project', value: 'icon-project' },\n  { key: 'star', value: 'icon-star' },\n  { key: 'loading', value: 'icon-loading' },\n  { key: 'puzzle-piece', value: 'icon-puzzle-piece' },\n  { key: 'container', value: 'icon-container' },\n  { key: 'lightning', value: 'icon-lightning' },\n  { key: 'colors', value: 'icon-colors' },\n  { key: 'hexagon', value: 'icon-hexagon' },\n];\n","import { backgrounds } from 'constants/backgrounds';\nimport { icons } from 'constants/icons';\nimport { useSelector } from 'react-redux';\nimport { selectIsBoardsLoading } from 'redux/boards/selectors';\nimport { selectTheme } from 'redux/auth/selectors';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport sprite from '../../images/sprite.svg';\nimport ModalPortal from '../Modal/ModalPortal';\nimport styles from './ModalBoard.module.css';\n\nconst ModalBoard = ({\n  isModalOpen,\n  toggleModal,\n  handleSubmit,\n  changeBg,\n  changeIcon,\n  changeTitle,\n  title,\n  icon,\n  background,\n  newTitle,\n  newIcon,\n  newBackground,\n  required,\n  modalTitle,\n  submitButtonText,\n}) => {\n  const theme = useSelector(selectTheme);\n  const isBoardsLoading = useSelector(selectIsBoardsLoading);\n  return (\n    isModalOpen && (\n      <ModalPortal onClose={toggleModal}>\n        <form onSubmit={handleSubmit}>\n          <h1 className={styles.title}>{modalTitle}</h1>\n\n          <input\n            className={styles.field}\n            id=\"title\"\n            type=\"text\"\n            name=\"title\"\n            placeholder={newTitle ? newTitle : 'Title'}\n            value={newTitle ? newTitle : title}\n            onChange={changeTitle}\n            required={required ? true : false}\n          />\n          <div className={styles.label} id=\"group-label-icon\">\n            Icons\n            <fieldset\n              className={styles.priority}\n              role=\"group\"\n              aria-labelledby=\"group-label-icon\"\n            >\n              {icons.map(iconItem => (\n                <div key={iconItem.key}>\n                  <input\n                    className={styles.input_svg}\n                    id={iconItem.value}\n                    type=\"radio\"\n                    name=\"icon\"\n                    value={iconItem.value}\n                    checked={\n                      newIcon\n                        ? newIcon === iconItem.value\n                        : icon === iconItem.value\n                    }\n                    onChange={changeIcon}\n                  />\n                  <label className={styles.label_svg} htmlFor={iconItem.value}>\n                    <svg className={styles.svg} width=\"18\" height=\"18\">\n                      <use href={sprite + `#${iconItem.value}`}></use>\n                    </svg>\n                  </label>\n                </div>\n              ))}\n            </fieldset>\n          </div>\n\n          <div className={styles.label} id=\"group-label-image\">\n            Background\n            <fieldset\n              className={styles.bg_priority}\n              role=\"group\"\n              aria-labelledby=\"group-label-image\"\n            >\n              {backgrounds.map(bg => (\n                <div key={bg.title}>\n                  <input\n                    className={styles.input_png}\n                    id={bg.title}\n                    type=\"radio\"\n                    name=\"bg\"\n                    value={bg.title}\n                    checked={\n                      newBackground\n                        ? newBackground === bg.title\n                        : background === bg.title\n                    }\n                    onChange={changeBg}\n                  />\n                  <label className={styles.label_png} htmlFor={bg.title}>\n                    <img\n                      className={styles.png}\n                      alt={bg.title}\n                      src={bg.src}\n                      width=\"28\"\n                      height=\"28\"\n                    />\n                  </label>\n                </div>\n              ))}\n            </fieldset>\n          </div>\n\n          <button\n            className={theme === 'violet' ? styles.btnViolet : styles.btn}\n            type=\"submit\"\n          >\n            {isBoardsLoading ? (\n              <ClipLoader color=\"#1f1f1f\" size={30} />\n            ) : (\n              <svg\n                className={theme === 'violet' ? styles.iconViolet : styles.icon}\n                width=\"28\"\n                height=\"28\"\n              >\n                <use href={sprite + '#icon-plus'}></use>\n              </svg>\n            )}\n\n            {submitButtonText}\n          </button>\n        </form>\n      </ModalPortal>\n    )\n  );\n};\n\nexport default ModalBoard;\n","// extracted by mini-css-extract-plugin\nexport default {\"mainDashboardContainer\":\"MainPlaceholder_mainDashboardContainer__l+wQd\",\"dashboardDefaultParagraph\":\"MainPlaceholder_dashboardDefaultParagraph__Hue6s\",\"createBoard\":\"MainPlaceholder_createBoard__Jw+f0\"};","import ModalBoard from 'components/ModalBoard/ModalBoard';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addBoard } from 'redux/boards/operations';\nimport { selectIsBoardsLoading } from 'redux/boards/selectors';\nimport styles from './MainPlaceholder.module.css';\n\nconst MainPlaceholder = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const toggleModal = () => setIsModalOpen(state => !state);\n  const isBoardsLoading = useSelector(selectIsBoardsLoading);\n  const required = true;\n  const [icon, setIcon] = useState('icon-project');\n  const [background, setBackground] = useState('null');\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(\n      addBoard({\n        title: event.target[0].value,\n        icon,\n        background,\n      })\n    ).then(() => {\n      if (!isBoardsLoading) {\n        toggleModal();\n        setIcon('icon-project');\n        setBackground('null');\n      }\n    });\n  };\n\n  const changeIcon = event => {\n    setIcon(event.target.value);\n  };\n  const changeBg = event => {\n    setBackground(event.target.value);\n  };\n\n  const modalProps = {\n    isModalOpen,\n    toggleModal,\n    handleSubmit,\n    changeBg,\n    changeIcon,\n    icon,\n    background,\n    required,\n  };\n\n  return (\n    <div className={styles.mainDashboardContainer}>\n      <p className={styles.dashboardDefaultParagraph}>\n        Before starting your project, it is essential\n        <button\n          type=\"button\"\n          className={styles.createBoard}\n          onClick={toggleModal}\n        >\n          to create a board\n        </button>\n        to visualize and track all the necessary tasks and milestones. This\n        board serves as a powerful tool to organize the workflow and ensure\n        effective collaboration among team members.\n      </p>\n\n      <ModalBoard\n        {...modalProps}\n        modalTitle=\"New board\"\n        submitButtonText=\"Create\"\n      />\n    </div>\n  );\n};\n\nexport default MainPlaceholder;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MainDashboard_container__QeYtI\",\"buttonDark\":\"MainDashboard_buttonDark__VfbFA\",\"buttonLight\":\"MainDashboard_buttonLight__baY10\",\"buttonViolet\":\"MainDashboard_buttonViolet__iq5tY\",\"buttonText\":\"MainDashboard_buttonText__EgYTW\",\"columnList\":\"MainDashboard_columnList__5Z5fD\"};","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"AddColumn_title__Nkfj5\",\"button\":\"AddColumn_button__jDvYw\",\"input\":\"AddColumn_input__xoF1b\"};","import Button from 'components/Button/Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addColumn } from 'redux/boards/operations';\nimport {\n  selectActiveBoard,\n  selectIsBoardsLoading,\n} from 'redux/boards/selectors';\nimport styles from './AddColumn.module.css';\n\nexport default function AddColumn({ toggleModal }) {\n  const dispatch = useDispatch();\n  const activeBoard = useSelector(selectActiveBoard);\n  const isBoardsLoading = useSelector(selectIsBoardsLoading);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(\n      addColumn({\n        title: event.currentTarget[0].value,\n        board: activeBoard._id,\n      })\n    ).then(() => {\n      !isBoardsLoading && toggleModal();\n    });\n  };\n\n  return (\n    <>\n      <h2 className={styles.title}>Add column</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          className={styles.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Title\"\n          required\n        />\n        <Button loading={isBoardsLoading} icon=\"true\" text=\"Add\" />\n      </form>\n    </>\n  );\n}\n","import sprite from '../../images/sprite.svg';\nimport { useState } from 'react';\nimport Column from 'components/Column/Column';\nimport MainPlaceholder from 'components/MainPlaceholder/MainPlaceholder';\nimport styles from './MainDashboard.module.css';\nimport { useSelector } from 'react-redux';\nimport { selectActiveBoard, selectBoardsList } from 'redux/boards/selectors';\nimport AddColumn from 'components/PopUps/AddColumn/AddColumn';\nimport Modal from 'components/Modal/Modal';\nimport { selectTheme } from 'redux/auth/selectors';\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { useDispatch } from 'react-redux';\nimport { transferTask } from 'redux/boards/operations';\n\nconst MainDashboard = () => {\n  const dispatch = useDispatch();\n  const theme = useSelector(selectTheme);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const toggleModal = () => setIsModalOpen(state => !state);\n\n  const allBoards = useSelector(selectBoardsList);\n  const activeBoard = useSelector(selectActiveBoard);\n\n  const columns =\n    activeBoard &&\n    activeBoard.columns &&\n    activeBoard.columns.length > 0 &&\n    activeBoard;\n  \n  const onDragEnd = (result) => {\n    const { destination, source, reason, draggableId: id } = result;\n    if (!destination || reason === \"CANCEL\") return;\n    if (destination.droppableId === source.droppableId && destination.index === source.index) return;\n    \n    dispatch(transferTask({\n      id,\n      data: { destination, source },\n    }))\n  };\n\n  return (\n    <>\n      {allBoards.length > 0 ? (\n        <>\n          <div className={styles.container}>\n            {isModalOpen && (\n              <Modal onClose={toggleModal}>\n                <AddColumn toggleModal={toggleModal} />\n              </Modal>\n            )}\n            {columns && (\n              <DragDropContext onDragEnd={onDragEnd}>\n                <ul\n                  className={styles.columnList}\n                >\n                  {activeBoard.columns.map(column => (\n                    <li key={column._id}>\n                      <Column column={column} />\n                    </li>\n                  ))}\n                </ul>\n              </DragDropContext>\n            )}\n            <button\n              className={\n                (theme === 'dark' && styles.buttonDark) ||\n                (theme === 'light' && styles.buttonLight) ||\n                (theme === 'violet' && styles.buttonViolet)\n              }\n              onClick={toggleModal}\n            >\n              <svg\n                width={28}\n                height={28}\n                aria-label=\"plus\"\n                className={styles.svg}\n              >\n                <title>Plus Icon</title>\n                <use href={sprite + '#icon-plus'} />\n              </svg>\n              <span\n                className={\n                  theme === 'violet'\n                    ? styles.buttonTextViolet\n                    : styles.buttonText\n                }\n              >\n                Add another column\n              </span>\n            </button>\n          </div>\n          {}\n        </>\n      ) : (\n        <MainPlaceholder />\n      )}\n    </>\n  );\n};\n\nexport default MainDashboard;\n","// extracted by mini-css-extract-plugin\nexport default {\"headerDashboardSection\":\"ScreensPage_headerDashboardSection__1zGxD\",\"dark\":\"ScreensPage_dark__o7o5+\",\"light\":\"ScreensPage_light__Z1ybk\",\"violet\":\"ScreensPage_violet__SX0i9\",\"bgAirBalloon\":\"ScreensPage_bgAirBalloon__1nj3m\",\"bgBlue\":\"ScreensPage_bgBlue__VvuT7\",\"bgCappadocia\":\"ScreensPage_bgCappadocia__dP+gI\",\"bgFlowers\":\"ScreensPage_bgFlowers__vu+A0\",\"bgGorge\":\"ScreensPage_bgGorge__R6AgK\",\"bgGreens\":\"ScreensPage_bgGreens__6Lhwc\",\"bgMoon\":\"ScreensPage_bgMoon__fXD+J\",\"bgMountains\":\"ScreensPage_bgMountains__76x3D\",\"bgRocksAndSea\":\"ScreensPage_bgRocksAndSea__eDD+b\",\"bgSea\":\"ScreensPage_bgSea__HChW-\",\"bgSemiMoon\":\"ScreensPage_bgSemiMoon__iE7uX\",\"bgTrailer\":\"ScreensPage_bgTrailer__MK3Ml\",\"bgTree\":\"ScreensPage_bgTree__KhUkI\",\"bgVioletSphere\":\"ScreensPage_bgVioletSphere__DJ8pB\",\"bgYacht\":\"ScreensPage_bgYacht__It3bD\"};","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectTheme } from 'redux/auth/selectors';\nimport { selectActiveBoard } from 'redux/boards/selectors';\nimport HeaderDashboard from '../HeaderDashboard/HeaderDashboard';\nimport MainDashboard from '../MainDashboard/MainDashboard';\nimport css from './ScreensPage.module.css';\n\nconst ScreensPage = () => {\n  const [activeBg, setActiveBg] = useState('null');\n\n  const theme = useSelector(selectTheme);\n  const activeBoard = useSelector(selectActiveBoard);\n\n  useEffect(() => {\n    if (activeBoard && activeBoard.background) {\n      setActiveBg(activeBoard.background);\n    } else {\n      setActiveBg('null');\n    }\n  }, [activeBoard]);\n\n  return (\n    <div\n      className={\n        (theme === 'dark' && css.dark) ||\n        (theme === 'light' && css.light) ||\n        (theme === 'violet' && css.violet)\n      }\n    >\n      <section>\n        <HeaderDashboard />\n        <div\n          className={`${css.headerDashboardSection} ${\n            activeBg &&\n            css[`bg${activeBg.charAt(0).toUpperCase() + activeBg.slice(1)}`]\n          }`}\n        >\n          <MainDashboard />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default ScreensPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"dark\":\"Sidebar_dark__U5ESB\",\"light\":\"Sidebar_light__acC8Z\",\"violet\":\"Sidebar_violet__PdAyF\",\"sidebar\":\"Sidebar_sidebar__zfhso\",\"flexMarkup\":\"Sidebar_flexMarkup__4LmZI\",\"sectionBoards\":\"Sidebar_sectionBoards__mIl1H\",\"partTop\":\"Sidebar_partTop__whqAz\",\"partButton\":\"Sidebar_partButton__QNZnY\",\"active\":\"Sidebar_active__8Rvdk\",\"sidebarBox\":\"Sidebar_sidebarBox__6AMEK\",\"sidebarBoxIconDark\":\"Sidebar_sidebarBoxIconDark__goze-\",\"sidebarBoxIconViolet\":\"Sidebar_sidebarBoxIconViolet__DbcEw\",\"sidebarBoxTitle\":\"Sidebar_sidebarBoxTitle__bpDNa\",\"sidebarItem\":\"Sidebar_sidebarItem__XdPnx\",\"sidebarItemTitle\":\"Sidebar_sidebarItemTitle__SuYNt\",\"sidebarBoard\":\"Sidebar_sidebarBoard__CF+XV\",\"sidebarBoardItem\":\"Sidebar_sidebarBoardItem__UMQ4c\",\"sidebarBoardButton\":\"Sidebar_sidebarBoardButton__uWW+V\",\"sidebarBoardIconGreen\":\"Sidebar_sidebarBoardIconGreen__tOnBk\",\"sidebarBoardIconViolet\":\"Sidebar_sidebarBoardIconViolet__DEhg4\",\"sidebarNewBoard\":\"Sidebar_sidebarNewBoard__GtCcM\",\"sidebarListBoard\":\"Sidebar_sidebarListBoard__dvpZN\",\"sideBarBoardHover\":\"Sidebar_sideBarBoardHover__Td0f2\",\"sidebarNewBoardSvg\":\"Sidebar_sidebarNewBoardSvg__sYiG6\",\"flex\":\"Sidebar_flex__jJ-+c\",\"activeBoard\":\"Sidebar_activeBoard__uA432\",\"activeBoardLight\":\"Sidebar_activeBoardLight__D3Br6\",\"activeBoardViolet\":\"Sidebar_activeBoardViolet__QaXgE\",\"activeBoardDark\":\"Sidebar_activeBoardDark__0cM-7\",\"sidebarNewBoardItem\":\"Sidebar_sidebarNewBoardItem__GVSlb\",\"sidebarNewBoardItemLight\":\"Sidebar_sidebarNewBoardItemLight__lJZt+\",\"sidebarNewBoardItemActive\":\"Sidebar_sidebarNewBoardItemActive__9QPuB\",\"sidebarNewBoardItemText\":\"Sidebar_sidebarNewBoardItemText__HMlgl\",\"sidebarNewBoardSvgActive\":\"Sidebar_sidebarNewBoardSvgActive__HobAX\",\"sidebarNewBoardTextActiveLight\":\"Sidebar_sidebarNewBoardTextActiveLight__OUXU0\",\"sidebarNewBoardTextActive\":\"Sidebar_sidebarNewBoardTextActive__Lgjrm\",\"svg\":\"Sidebar_svg__uiuAg\",\"sidebarNewBoardButton\":\"Sidebar_sidebarNewBoardButton__3BayN\",\"sidebarNewBoardButtonActive\":\"Sidebar_sidebarNewBoardButtonActive__QzsmW\",\"sidebarNewBoardButtonCurrent\":\"Sidebar_sidebarNewBoardButtonCurrent__WQtp6\",\"sidebarNewBoardIcon\":\"Sidebar_sidebarNewBoardIcon__yh-ER\",\"sidebarHelp\":\"Sidebar_sidebarHelp__yr--K\",\"sidebarHelpBox\":\"Sidebar_sidebarHelpBox__rroMd\",\"sidebarHelpBoxItem\":\"Sidebar_sidebarHelpBoxItem__itK3M\",\"sidebarHelpBoxLink\":\"Sidebar_sidebarHelpBoxLink__qYfpE\",\"sidebarHelpbutton\":\"Sidebar_sidebarHelpbutton__VIiqb\",\"sidebarHelpIcon\":\"Sidebar_sidebarHelpIcon__JZJPe\",\"sidebarHelpNeedHelp\":\"Sidebar_sidebarHelpNeedHelp__lHiPr\",\"sidebarLogout\":\"Sidebar_sidebarLogout__oYZAU\",\"sidebarLogoutButton\":\"Sidebar_sidebarLogoutButton__NjNrz\",\"sidebarLogoutIconGreen\":\"Sidebar_sidebarLogoutIconGreen__IMyFX\",\"sidebarLogoutIconWhite\":\"Sidebar_sidebarLogoutIconWhite__cYxrO\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport { deleteBoard } from 'redux/boards/operations';\nimport {\n  selectActiveBoard,\n  selectIsBoardsLoading,\n} from 'redux/boards/selectors';\n\nimport ModalPortal from 'components/Modal/ModalPortal';\nimport sprite from '../../images/sprite.svg';\nimport css from '../Sidebar/Sidebar.module.css';\nimport styles from './ModalBoard.module.css';\n\nconst DeleteBoard = ({ checked }) => {\n  const activeBoard = useSelector(selectActiveBoard);\n  const { _id, columns } = activeBoard;\n  const isBoardsLoading = useSelector(selectIsBoardsLoading);\n  const [startLoading, setStartLoading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const toggleModal = () => setIsModalOpen(state => !state);\n\n  const handleAgreement = () => {\n    if (activeBoard && columns.length === 0) {\n      setStartLoading(true);\n      dispatch(deleteBoard(_id)).then(() => {\n        !isBoardsLoading && toggleModal();\n      });\n    }\n  };\n\n  const iconActive = !checked\n    ? css.sidebarNewBoardButton\n    : css.sidebarNewBoardButtonActive;\n  return (\n    <div>\n      <button className={iconActive} type=\"button\" onClick={toggleModal}>\n        <svg className={css.sidebarNewBoardIcon}>\n          <use href={sprite + '#icon-trash'} />\n        </svg>\n      </button>\n      {isModalOpen && (\n        <ModalPortal onClose={toggleModal}>\n          <h1 className={styles.title}>Delete Board</h1>\n          {activeBoard && columns && columns.length === 0 ? (\n            <h3 className={styles.text}>\n              Are you sure you want to delete the board?\n            </h3>\n          ) : (\n            <h3 className={styles.text}>\n              Sorry, but you cannot delete a board that has columns... Clean it\n              first!\n            </h3>\n          )}\n          {activeBoard && columns && columns.length !== 0 ? (\n            <button className={styles.btn} type=\"button\" onClick={toggleModal}>\n              Close\n            </button>\n          ) : (\n            <>\n              <button\n                className={styles.btn}\n                type=\"button\"\n                disabled={isBoardsLoading}\n                onClick={handleAgreement}\n              >\n                {startLoading && isBoardsLoading && (\n                  <ClipLoader color=\"#1f1f1f\" size={30} />\n                )}\n                Yes\n              </button>\n              <button\n                className={styles.btn}\n                type=\"button\"\n                onClick={toggleModal}\n              >\n                No\n              </button>\n            </>\n          )}\n        </ModalPortal>\n      )}\n    </div>\n  );\n};\n\nexport default DeleteBoard;\n","import { backgrounds } from 'constants/backgrounds';\nimport { icons } from 'constants/icons';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport { updateBoard } from 'redux/boards/operations';\nimport { selectIsBoardsLoading } from 'redux/boards/selectors';\nimport sprite from '../../images/sprite.svg';\nimport ModalPortal from '../Modal/ModalPortal';\nimport css from '../Sidebar/Sidebar.module.css';\nimport styles from './ModalBoard.module.css';\nimport { selectTheme } from 'redux/auth/selectors';\n\nconst EditBoard = ({ board, checked }) => {\n  const theme = useSelector(selectTheme);\n  const isBoardsLoading = useSelector(selectIsBoardsLoading);\n\n  const { _id: id, title, icon, background } = board;\n  const dispatch = useDispatch();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const toggleModal = () => setIsModalOpen(state => !state);\n  const [newTitle, setNewTitle] = useState(title);\n  const [newIcon, setNewIcon] = useState(icon);\n  const [newBackground, setNewBackground] = useState(background);\n\n  useEffect(() => {\n    setNewBackground(background);\n    setNewIcon(icon);\n  }, [background, icon]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(\n      updateBoard({\n        id,\n        data: {\n          title: newTitle,\n          icon: newIcon,\n          background: newBackground,\n        },\n      })\n    ).then(() => {\n      !isBoardsLoading && toggleModal();\n      setNewIcon(icon);\n      setNewBackground(background);\n    });\n  };\n\n  const changeIcon = newValue => {\n    setNewIcon(newValue);\n  };\n  const changeBg = newValue => {\n    setNewBackground(newValue);\n  };\n  const changeTitle = event => {\n    setNewTitle(event.target.value);\n  };\n\n  return (\n    <div>\n      <button\n        className={css.sidebarNewBoardButton}\n        type=\"button\"\n        onClick={toggleModal}\n      >\n        <svg className={css.sidebarNewBoardIcon}>\n          <use href={sprite + '#icon-pencil'} />\n        </svg>\n      </button>\n      {isModalOpen && (\n        <ModalPortal onClose={toggleModal}>\n          <form onSubmit={handleSubmit}>\n            <h1 className={styles.title}>Edit Board</h1>\n\n            <input\n              className={styles.field}\n              id=\"title\"\n              type=\"text\"\n              name=\"title\"\n              placeholder={title}\n              value={newTitle}\n              onChange={changeTitle}\n            />\n            <div className={styles.label} id=\"group-label-icon\">\n              Icons\n              <fieldset\n                className={styles.priority}\n                role=\"group\"\n                aria-labelledby=\"group-label-icon\"\n              >\n                {icons.map(iconItem => (\n                  <div key={iconItem.value}>\n                    <input\n                      className={styles.input_svg}\n                      id={iconItem.value}\n                      type=\"radio\"\n                      name={`iconNew-${id}`}\n                      value={iconItem.value}\n                      checked={newIcon === iconItem.value}\n                      onChange={() => changeIcon(iconItem.value)}\n                    />\n                    <label\n                      className={styles.label_svg}\n                      htmlFor={iconItem.value}\n                      onClick={() => changeIcon(iconItem.value)}\n                    >\n                      <svg className={styles.svg} width=\"18\" height=\"18\">\n                        <use href={sprite + `#${iconItem.value}`}></use>\n                      </svg>\n                    </label>\n                  </div>\n                ))}\n              </fieldset>\n            </div>\n\n            <div className={styles.label} id=\"group-label-image\">\n              Background\n              <fieldset\n                className={styles.bg_priority}\n                role=\"group\"\n                aria-labelledby=\"group-label-image\"\n              >\n                {backgrounds.map(bg => (\n                  <div key={bg.title}>\n                    <input\n                      className={styles.input_png}\n                      id={bg.title}\n                      type=\"radio\"\n                      name={`bgNew-${id}`}\n                      value={bg.title}\n                      checked={newBackground === bg.title}\n                      onChange={() => changeBg(bg.title)}\n                    />\n                    <label\n                      className={styles.label_png}\n                      htmlFor={bg.title}\n                      onClick={() => changeBg(bg.title)}\n                    >\n                      <img\n                        className={styles.png}\n                        alt={bg.title}\n                        src={bg.src}\n                        width=\"28\"\n                        height=\"28\"\n                      />\n                    </label>\n                  </div>\n                ))}\n              </fieldset>\n            </div>\n\n            <button\n              className={theme === 'violet' ? styles.btnViolet : styles.btn}\n              type=\"submit\"\n              onClick={handleSubmit}\n            >\n              {isBoardsLoading ? (\n                <ClipLoader color=\"#1f1f1f\" size={30} />\n              ) : (\n                <svg\n                  className={\n                    theme === 'violet' ? styles.iconViolet : styles.icon\n                  }\n                  width=\"28\"\n                  height=\"28\"\n                >\n                  <use href={sprite + '#icon-plus'}></use>\n                </svg>\n              )}\n              Edit\n            </button>\n          </form>\n        </ModalPortal>\n      )}\n    </div>\n  );\n};\nexport default EditBoard;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectTheme } from 'redux/auth/selectors';\nimport { addBoard } from 'redux/boards/operations';\nimport { selectIsBoardsLoading } from 'redux/boards/selectors';\nimport sprite from '../../images/sprite.svg';\nimport css from '../Sidebar/Sidebar.module.css';\nimport ModalBoard from './ModalBoard';\n\nconst NewBoard = () => {\n  const isBoardsLoading = useSelector(selectIsBoardsLoading);\n  const required = true;\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const toggleModal = () => setIsModalOpen(state => !state);\n  const [icon, setIcon] = useState('icon-project');\n  const [background, setBackground] = useState('null');\n  const theme = useSelector(selectTheme);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(\n      addBoard({\n        title: event.target[0].value,\n        icon,\n        background,\n      })\n    ).then(() => {\n      if (!isBoardsLoading) {\n        toggleModal();\n        setIcon('icon-project');\n        setBackground('null');\n      }\n    });\n  };\n\n  const changeIcon = event => {\n    setIcon(event.target.value);\n  };\n  const changeBg = event => {\n    setBackground(event.target.value);\n  };\n\n  const modalProps = {\n    isModalOpen,\n    toggleModal,\n    handleSubmit,\n    changeBg,\n    changeIcon,\n    icon,\n    background,\n    required,\n  };\n\n  return (\n    <div\n      className={\n        (theme === 'dark' && css.dark) ||\n        (theme === 'light' && css.light) ||\n        (theme === 'violet' && css.violet)\n      }\n    >\n      <button\n        onClick={toggleModal}\n        className={css.sidebarBoardButton}\n        type=\"button\"\n      >\n        <svg\n          className={\n            theme === 'violet'\n              ? css.sidebarBoardIconViolet\n              : css.sidebarBoardIconGreen\n          }\n          width={36}\n          height={36}\n        >\n          <use href={sprite + '#icon-plus'}></use>\n        </svg>\n      </button>\n\n      <ModalBoard\n        {...modalProps}\n        modalTitle=\"New board\"\n        submitButtonText=\"Create\"\n      />\n    </div>\n  );\n};\n\nexport default NewBoard;\n","// extracted by mini-css-extract-plugin\nexport default {\"dark\":\"NeedHelp_dark__vCT7V\",\"light\":\"NeedHelp_light__AEmqn\",\"violet\":\"NeedHelp_violet__CP8pg\",\"sidebarHelp\":\"NeedHelp_sidebarHelp__iONF0\",\"sidebarHelpBox\":\"NeedHelp_sidebarHelpBox__6JWo6\",\"sidebarHelpBoxItem\":\"NeedHelp_sidebarHelpBoxItem__atC6l\",\"sidebarHelpBoxLinkGreen\":\"NeedHelp_sidebarHelpBoxLinkGreen__nce+R\",\"sidebarHelpBoxLinkViolet\":\"NeedHelp_sidebarHelpBoxLinkViolet__-xZEQ\",\"sidebarHelpWrap\":\"NeedHelp_sidebarHelpWrap__JuDjC\",\"sidebarHelpIcon\":\"NeedHelp_sidebarHelpIcon__C9Zh9\",\"sidebarHelpNeedHelp\":\"NeedHelp_sidebarHelpNeedHelp__7HchL\"};","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Help_title__YRQC4\",\"input\":\"Help_input__adxFP\",\"inputViolet\":\"Help_inputViolet__5FqOW\",\"textarea\":\"Help_textarea__HkS9v\",\"textareaViolet\":\"Help_textareaViolet__Ha0kn\",\"inputComment\":\"Help_inputComment__uc2yq\",\"btn\":\"Help_btn__R86KN\",\"btnViolet\":\"Help_btnViolet__Z68h4\"};","import { useState } from 'react';\nimport styles from './Help.module.css';\nimport axios from 'axios';\nimport css from '../../NeedHelp/NeedHelp.module.css';\nimport Modal from '../../Modal/Modal';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useSelector } from 'react-redux';\nimport { selectTheme } from 'redux/auth/selectors';\n\naxios.defaults.baseURL = 'https://project-react-node-back.onrender.com';\n\nexport const HelpForm = () => {\n  const [email, setEmail] = useState('');\n  const [comment, setComment] = useState('');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const theme = useSelector(selectTheme);\n\n  const toggleModal = () => setIsModalOpen(state => !state);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'comment':\n        setComment(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setEmail('');\n    setComment('');\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      if (email !== '' && comment !== '') {\n        const res = await axios.post('/api/users/help', { email, comment });\n        toast.success(res.data.message);\n        reset();\n        toggleModal();\n        return res.data;\n      }\n    } catch (error) {\n      if (error.response) {\n        const { status, data } = error.response;\n        toast.error(`Status(${status}): ${data.message}`);\n      } else {\n        toast.error('Network Error');\n      }\n    }\n  };\n\n  return (\n    <>\n      <p className={css.sidebarHelpBoxItem}>\n        If you need help with{' '}\n        <button\n          onClick={toggleModal}\n          className={\n            theme === 'violet'\n              ? css.sidebarHelpBoxLinkViolet\n              : css.sidebarHelpBoxLinkGreen\n          }\n          type=\"button\"\n          aria-label=\"Open Help Modal for TaskPro\"\n        >\n          TaskPro\n        </button>\n        , check out our support resources or reach out to our customer support\n        team.\n      </p>\n      {isModalOpen && (\n        <Modal onClose={toggleModal}>\n          <form onSubmit={handleSubmit}>\n            <h1 className={styles.title}>Need help</h1>\n            <input\n              className={theme === 'violet' ? styles.inputViolet : styles.input}\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email address\"\n              autocomplete=\"off\"\n              required\n              value={email}\n              onChange={handleChange}\n            />\n            <textarea\n              className={\n                theme === 'violet' ? styles.textareaViolet : styles.textarea\n              }\n              type=\"text\"\n              name=\"comment\"\n              placeholder=\"Comment\"\n              autocomplete=\"off\"\n              required\n              value={comment}\n              onChange={handleChange}\n            />\n            <button\n              className={theme === 'violet' ? styles.btnViolet : styles.btn}\n              type=\"submit\"\n            >\n              Send\n            </button>\n          </form>\n        </Modal>\n      )}\n      <ToastContainer position=\"top-left\" autoClose={3000} />\n    </>\n  );\n};\n// <Formik\n//   initialValues={initialValues}\n//   validationSchema={HelpSchema}\n//   onSubmit={handleSubmit}\n// >\n//   {({ errors, values, setFieldValue }) => (\n//     <Form autoComplete=\"off\" className={styles.form}>\n//       <div className={styles.wrap}>\n//         <Field\n//           className={styles.input}\n//           type=\"email\"\n//           name=\"email\"\n//           placeholder=\"Email address\"\n//         />\n//         {errors.email && <FormError name=\"email\" message={errors.email} />}\n//       </div>\n\n//       <div className={styles.wrap}>\n//         <Field\n//           className={styles.inputComment}\n//           type=\"text\"\n//           name=\"comment\"\n//           placeholder=\"Comment\"\n//         />\n//         {errors.comment && (\n//           <FormError name=\"comment\" message={errors.comment} />\n//         )}\n//       </div>\n\n//       <button className={styles.btn} type=\"submit\">\n//         <div className={styles.wrap}>\n//           <span>Send</span>\n//           <Loader />\n//         </div>\n//       </button>\n//     </Form>\n//   )}\n// </Formik>\n//   );\n// };\n","import sprite from '../../images/sprite.svg';\nimport cactus from '../../images/cactus.png';\nimport cactus2x from '../../images/cactus@2x.png';\nimport cactus3x from '../../images/cactus@3x.png';\nimport css from './NeedHelp.module.css';\nimport { useSelector } from 'react-redux';\nimport { selectTheme } from 'redux/auth/selectors';\nimport { HelpForm } from 'components/Help/HelpForm/Help';\n\nexport const NeedHelp = () => {\n  const theme = useSelector(selectTheme);\n  return (\n    <div\n      className={\n        (theme === 'dark' && css.dark) ||\n        (theme === 'light' && css.light) ||\n        (theme === 'violet' && css.violet)\n      }\n    >\n      <div className={css.sidebarHelp}>\n        {/* <div> */}\n        <picture>\n          <source srcSet={`${cactus} 1x, ${cactus2x} 2x,${cactus3x} 3x`} />\n          <img srcSet={`${cactus} 1x`} alt=\"cactus\" />\n        </picture>\n        {/* </div> */}\n        <div className={css.sidebarHelpBox}>\n          <HelpForm />\n        </div>\n        <div className={css.sidebarHelpWrap}>\n          <svg className={css.sidebarHelpIcon}>\n            <use href={sprite + '#icon-help-circle'}></use>\n          </svg>\n          <p className={css.sidebarHelpNeedHelp}>Need help?</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport { logOut } from 'redux/auth/operations';\nimport { selectIsLoggedIn } from 'redux/auth/selectors';\nimport css from './Sidebar.module.css';\n\nimport sprite from '../../images/sprite.svg';\nimport ModalPortal from '../Modal/ModalPortal';\nimport styles from '../ModalBoard/ModalBoard.module.css';\n\nconst Logout = () => {\n  const isLoading = useSelector(selectIsLoggedIn);\n  const [startLoading, setStartLoading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const toggleModal = () => setIsModalOpen(state => !state);\n\n  const handleAgreement = () => {\n    setStartLoading(true);\n    dispatch(logOut()).then(() => {\n      !isLoading && toggleModal();\n    });\n  };\n\n  return (\n    <div>\n      <button\n        onClick={toggleModal}\n        className={css.sidebarLogoutButton}\n        type=\"button\"\n      >\n        <svg className={css.sidebarLogoutIcon} width={32} height={32}>\n          <use href={sprite + '#icon-logout'}></use>\n        </svg>\n        Log out\n      </button>\n      {isModalOpen && (\n        <ModalPortal onClose={toggleModal}>\n          <h1 className={styles.title}>Log out</h1>\n\n          <h3 className={styles.text}>\n            Are you sure you want to leave account?\n          </h3>\n\n          <button\n            className={styles.btn}\n            type=\"button\"\n            onClick={handleAgreement}\n          >\n            {startLoading && isLoading && (\n              <ClipLoader color=\"#1f1f1f\" size={30} />\n            )}\n            Yes\n          </button>\n          <button className={styles.btn} type=\"button\" onClick={toggleModal}>\n            No\n          </button>\n        </ModalPortal>\n      )}\n    </div>\n  );\n};\n\nexport default Logout;\n","import DeleteBoard from 'components/ModalBoard/DeleteBoard';\nimport EditBoard from 'components/ModalBoard/EditBoard';\nimport NewBoard from 'components/ModalBoard/NewBoard';\n\nimport { NeedHelp } from 'components/NeedHelp/NeedHelp';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Link } from 'react-router-dom';\nimport { selectTheme } from 'redux/auth/selectors';\nimport { getAllBoards } from 'redux/boards/operations';\nimport { selectBoardsList } from 'redux/boards/selectors';\nimport sprite from '../../images/sprite.svg';\nimport Logout from './Logout';\nimport css from './Sidebar.module.css';\n\nconst Sidebar = ({ active }) => {\n  const dispatch = useDispatch();\n  const allBoards = useSelector(selectBoardsList);\n  const theme = useSelector(selectTheme);\n  const firstBoard = allBoards[0];\n  const activeBoardFirstState = firstBoard ? firstBoard._id : null;\n  const [activeBoardId, setActiveBoardId] = useState(activeBoardFirstState);\n\n  const handleClickBoard = boardId => {\n    setActiveBoardId(boardId);\n  };\n  useEffect(() => {\n    dispatch(getAllBoards());\n  }, [dispatch]);\n\n  return (\n    <div\n      className={\n        (theme === 'dark' && css.dark) ||\n        (theme === 'light' && css.light) ||\n        (theme === 'violet' && css.violet)\n      }\n    >\n      <aside className={active ? css.active : css.sidebar}>\n        <div className={css.flexMarkup}>\n          <div className={css.partTop}>\n            <section className={css.sidebarBox}>\n              <svg\n                className={\n                  theme === 'violet'\n                    ? css.sidebarBoxIconViolet\n                    : css.sidebarBoxIconDark\n                }\n                width={32}\n                height={32}\n              >\n                {theme === 'violet' ? (\n                  <use href={sprite + '#icon-icon-violet'}></use>\n                ) : (\n                  <use href={sprite + '#icon-icon-dark'}></use>\n                )}\n              </svg>\n              <h2 className={css.sidebarBoxTitle}>Task Pro</h2>\n            </section>\n            <div className={css.sidebarItem}>\n              <p className={css.sidebarItemTitle}>My boards</p>\n            </div>\n            <section className={css.sidebarBoard}>\n              <p className={css.sidebarBoardItem}>Create a new board</p>\n              <NewBoard />\n            </section>\n          </div>\n\n          <section className={css.sectionBoards}>\n            {allBoards.length !== 0 && (\n              <div className={css.sidebarListBoard}>\n                {allBoards.map(board => (\n                  <Link\n                    to={`/home/${board._id}`}\n                    key={board._id}\n                    className={css.sideBarBoardHover}\n                  >\n                    <div\n                      className={\n                        (theme === 'dark' &&\n                          `${css.sidebarNewBoard} ${\n                            (!activeBoardId &&\n                              activeBoardFirstState &&\n                              activeBoardFirstState === board._id) ||\n                            (activeBoardId && activeBoardId === board._id)\n                              ? css.activeBoardDark\n                              : ''\n                          }`) ||\n                        (theme === 'violet' &&\n                          `${css.sidebarNewBoard} ${\n                            (!activeBoardId &&\n                              activeBoardFirstState &&\n                              activeBoardFirstState === board._id) ||\n                            (activeBoardId && activeBoardId === board._id)\n                              ? css.activeBoardViolet\n                              : ''\n                          }`) ||\n                        (theme === 'light' &&\n                          `${css.sidebarNewBoard} ${\n                            (!activeBoardId &&\n                              activeBoardFirstState &&\n                              activeBoardFirstState === board._id) ||\n                            (activeBoardId && activeBoardId === board._id)\n                              ? css.activeBoardLight\n                              : ''\n                          }`)\n                      }\n                      onClick={() => handleClickBoard(board._id)}\n                    >\n                      <div className={css.sidebarNewBoardItem}>\n                        <div className={css.flex}>\n                          <svg\n                            className={`${css.sidebarNewBoardSvg} ${\n                              (!activeBoardId &&\n                                activeBoardFirstState &&\n                                activeBoardFirstState === board._id) ||\n                              (activeBoardId && activeBoardId === board._id)\n                                ? css.sidebarNewBoardSvgActive\n                                : ''\n                            }`}\n                          >\n                            <use href={sprite + `#${board.icon}`} />\n                          </svg>\n                          <p\n                            className={\n                              theme === 'light'\n                                ? `${css.sidebarNewBoardItemLight} ${\n                                    (!activeBoardId &&\n                                      activeBoardFirstState &&\n                                      activeBoardFirstState === board._id) ||\n                                    (activeBoardId &&\n                                      activeBoardId === board._id)\n                                      ? css.sidebarNewBoardTextActiveLight\n                                      : ''\n                                  }`\n                                : `${css.sidebarNewBoardItem} ${\n                                    (!activeBoardId &&\n                                      activeBoardFirstState &&\n                                      activeBoardFirstState === board._id) ||\n                                    (activeBoardId &&\n                                      activeBoardId === board._id)\n                                      ? css.sidebarNewBoardTextActive\n                                      : ''\n                                  }`\n                            }\n                          >\n                            {board.title}\n                          </p>\n                        </div>\n                        {(activeBoardId === board._id ||\n                          (activeBoardFirstState === board._id &&\n                            !activeBoardId)) && (\n                          <div className={css.flex}>\n                            <EditBoard key={board._id} board={board} />\n                            <DeleteBoard />\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </Link>\n                ))}\n              </div>\n            )}\n          </section>\n          <div className={css.partButton}>\n            <section className={css.sidebarHelp}>\n              <NeedHelp />\n            </section>\n            <section className={css.sidebarLogout}>\n              <Logout />\n            </section>\n          </div>\n        </div>\n      </aside>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","// extracted by mini-css-extract-plugin\nexport default {\"home\":\"HomePage_home__N+EMb\",\"homeWrap\":\"HomePage_homeWrap__Qxn9b\",\"homeWrapOverlay\":\"HomePage_homeWrapOverlay__Pre3n\"};","import Header from 'components/Header/Header';\nimport ScreensPage from 'components/ScreensPage/ScreensPage';\nimport Sidebar from 'components/Sidebar/Sidebar';\nimport { useEffect, useState } from 'react';\nimport css from './HomePage.module.css';\n\nexport default function HomePage() {\n  const [menuActive, setMenuActive] = useState(false);\n\n  const handleClick = () => {\n    setMenuActive(true);\n  };\n\n  const handleOverlayClick = event => {\n    if (event.target.localName === 'svg') return;\n    if (event.target) {\n      setMenuActive(false);\n    }\n  };\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        setMenuActive(false);\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  return (\n    <div className={css.home}>\n      <Sidebar active={menuActive} />\n\n      <div\n        className={menuActive ? css.homeWrapOverlay : css.homeWrap}\n        onClick={handleOverlayClick}\n      >\n        <Header click={handleClick} />\n        <ScreensPage />\n      </div>\n    </div>\n  );\n}\n"],"names":["EyeClose","className","styles","href","sprite","EyeOpen","name","tip","width","height","css","stroke","ThemeMenu","useState","themeOption","setThemeOption","isOpen","setIsOpen","theme","useSelector","selectTheme","dispatch","useDispatch","handleThemeChange","event","stopPropagation","target","innerText","changeTheme","toLowerCase","useEffect","closeMenuOnClickOutside","window","addEventListener","removeEventListener","onClick","e","Modal","onClose","children","handleKeyDown","code","currentTarget","type","size","preload","user","selectUser","isLoading","selectIsLoading","defaultAvatar","dark","avaDark","light","avaLight","violet","avaViolet","src","avatarURL","style","background","border","padding","radius","color","ariaLabel","wrapperStyle","wrapperClass","visible","alt","borderRadius","cursor","Previews","onImageSelect","fileInput","useRef","defaultPreview","preview","setPreview","accept","onChange","selectedFile","files","URL","createObjectURL","ref","onLoad","startsWith","revokeObjectURL","current","click","updateUserSchema","object","string","min","max","test","value","matches","email","password","EditUserProfile","initialValues","avatar","passwordShown","setPasswordShown","passwordIcon","setpasswordIcon","togglPassword","FormError","render","message","handleSubmit","values","setSubmitting","resetForm","formData","FormData","set","updateUser","setIsModalOpen","isModalOpen","toggleModal","state","autoComplete","validationSchema","onSubmit","errors","setFieldValue","selectedImage","placeholder","Loader","selectedPriority","setSelectedPriority","boardName","useParams","getActiveBoard","allBoards","selectBoardsList","currentBoard","selectActiveBoard","options","priority","handlePriorityChange","titleToShow","length","title","map","option","index","checked","backgroundColor","opacity","icon","text","loading","CustomMonthLayout","daySelected","setDaySelected","DateBefore","before","Date","isPopperOpen","setIsPopperOpen","popperRef","buttonRef","popperElement","setPopperElement","popper","usePopper","placement","footer","format","active","tabIndex","attributes","role","initialFocus","mode","defaultMonth","selected","onSelect","date","focus","closePopper","showOutsideDays","ISOWeek","required","disabled","today","description","deadline","registerSchema","AddTaskCard","columnId","setTitle","setDescription","setPriority","isBoardsLoading","selectIsBoardsLoading","radioOptions","handleChange","addTask","column","then","as","EditTaskCard","task","taskId","_id","oldTitle","oldDescription","oldPriority","deadlineInDate","replace","newDaySelected","setNewDaySelected","console","log","updateTask","id","data","else","ModalPortal","portalContainer","document","getElementById","modalContent","ReactDOM","startLoading","setStartLoading","deleteTask","deadlineNow","EditColumn","newTitle","setNewTitle","preventDefault","updateColumn","autoFocus","tasks","deleteColumn","StrictModeDroppable","props","enabled","setEnabled","animation","requestAnimationFrame","cancelAnimationFrame","taskOrder","droppableId","provided","innerRef","droppableProps","find","el","draggableId","draggableProps","dragHandleProps","backgrounds","icons","key","changeBg","changeIcon","changeTitle","newIcon","newBackground","modalTitle","submitButtonText","iconItem","htmlFor","bg","setIcon","setBackground","modalProps","addBoard","AddColumn","activeBoard","addColumn","board","columns","onDragEnd","result","destination","source","reason","transferTask","activeBg","setActiveBg","charAt","toUpperCase","slice","iconActive","deleteBoard","setNewIcon","setNewBackground","updateBoard","newValue","axios","HelpForm","setEmail","comment","setComment","res","toast","response","status","autocomplete","position","autoClose","NeedHelp","srcSet","cactus","cactus2x","cactus3x","selectIsLoggedIn","logOut","firstBoard","activeBoardFirstState","activeBoardId","setActiveBoardId","getAllBoards","to","boardId","HomePage","menuActive","setMenuActive","localName"],"sourceRoot":""}