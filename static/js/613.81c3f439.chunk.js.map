{"version":3,"file":"static/js/613.81c3f439.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/AuthForm/EyeClose/EyeClose.module.css?4d43","components/AuthForm/EyeClose/EyeClose.jsx","webpack://react-homework-template/./src/components/AuthForm/EyeOpen/EyeOpen.module.css?5ae9","components/AuthForm/EyeOpen/EyeOpen.jsx","webpack://react-homework-template/./src/pages/AuthPage/AuthPage.module.css?5b0f","components/AuthForm/RegisterSchema/RegisterSchema.jsx","webpack://react-homework-template/./src/components/AuthForm/RegisterForm/RegisterForm.module.css?04ad","components/AuthForm/RegisterForm/RegisterForm.jsx","components/AuthForm/LogInSchema/LogInSchema.jsx","webpack://react-homework-template/./src/components/AuthForm/LogInForm/LoginForm.module.css?b658","components/AuthForm/LogInForm/LogInForm.jsx","pages/AuthPage/AuthPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"svg\":\"EyeClose_svg__63XGe\"};","import sprite from '../../../images/sprite.svg';\nimport styles from './EyeClose.module.css';\n\nexport const EyeClose = () => {\n  return (\n    <>\n      <svg className={styles.svg}>\n        <use href={sprite + '#icon-eye-blocked'} />\n      </svg>\n    </>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"svg\":\"EyeOpen_svg__kE08D\"};","import sprite from '../../../images/sprite.svg';\nimport styles from './EyeOpen.module.css';\n\nexport const EyeOpen = () => {\n  return (\n    <>\n      <svg className={styles.svg}>\n        <use href={sprite + '#icon-eye'} />\n      </svg>\n    </>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"AuthPage_section__RGWYc\",\"wrapper\":\"AuthPage_wrapper__j9zCo\",\"register_form_window\":\"AuthPage_register_form_window__KHQCY\",\"form_title\":\"AuthPage_form_title__bjeoJ\",\"active\":\"AuthPage_active__WbixR\",\"form\":\"AuthPage_form__L6vz6\",\"input\":\"AuthPage_input__8ajqy\",\"btn\":\"AuthPage_btn__69n1B\",\"wrap\":\"AuthPage_wrap__XRPPS\",\"yey_icon\":\"AuthPage_yey_icon__w8nz0\",\"error\":\"AuthPage_error__Vn7ZM\",\"svg\":\"AuthPage_svg__5GBQi\"};","import { object, string } from 'yup';\n\nexport const registerSchema = object({\n  name: string()\n    .min(2, 'minimum 2 characters')\n    .max(32, 'maximum 32 characters')\n    .test(\n      'only-allowed-chars',\n      'Name can contain: only Latin, numbers, special characters',\n      value => /^[a-zA-Z0-9\\-!@#$%^&*()_+,.: ;’“?/]+$/.test(value)\n    )\n    .matches(/^[a-zA-Z0-9 !@#$%^&*()_+,.:;’“?/-]+$/, 'Invalid name format')\n    .required(),\n  email: string()\n    .email()\n    .matches(/^[a-zA-Z0-9]+@[a-zA-Z]+\\.[a-zA-Z]{2,3}$/, 'Invalid email format')\n    .required(),\n  password: string()\n    .min(8, 'minimum 8 characters')\n    .max(64, 'maximum 64 characters')\n    .test(\n      'no-spaces',\n      'Invalid format: without spaces',\n      value => !/\\s/.test(value)\n    )\n    .test(\n      'only-allowed-chars',\n      'password can contain: only Latin, numbers, special characters',\n      value => /^[a-zA-Z0-9\\-!@#$%^&*()_+,.:;’“?/]+$/.test(value)\n    )\n    .matches(/^[a-zA-Z0-9\\-!@#$%^&*()_+,.:;’“?/]+$/, 'Invalid password format')\n    .required(),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__qQ-fW\",\"input\":\"RegisterForm_input__fRMn2\",\"btn\":\"RegisterForm_btn__zECnn\",\"authGoogleLink\":\"RegisterForm_authGoogleLink__rF1cc\",\"googleIcon\":\"RegisterForm_googleIcon__MnfpL\",\"wrap\":\"RegisterForm_wrap__fc7qs\",\"eye_icon\":\"RegisterForm_eye_icon__5HsEF\",\"error\":\"RegisterForm_error__gkRIl\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { registerSchema } from '../RegisterSchema/RegisterSchema';\nimport { EyeOpen } from '../EyeOpen/EyeOpen';\nimport { EyeClose } from '../EyeClose/EyeClose';\nimport { register } from 'redux/auth/operations';\nimport { Loader } from '../../Loader/Loader';\nimport styles from './RegisterForm.module.css';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [passwordShown, setPasswordShown] = useState(false);\n  const [passwordIcon, setpasswordIcon] = useState(<EyeClose />);\n\n  const togglPassword = () => {\n    setPasswordShown(!passwordShown);\n    setpasswordIcon(!passwordShown ? <EyeOpen /> : <EyeClose />);\n  };\n\n  const FormError = ({ name }) => {\n    return (\n      <ErrorMessage\n        name={name}\n        render={message => <p className={styles.error}>{message}</p>}\n      />\n    );\n  };\n\n  const handleChange = ({ target: { name, value } }, setFieldValue) => {\n    setFieldValue(name, value);\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={registerSchema}\n      onSubmit={(values, { setSubmitting }) => {\n        dispatch(\n          register({\n            name: name,\n            email: email.toLowerCase(),\n            password: password,\n          })\n        );\n        setEmail('');\n        setName('');\n        setPassword('');\n        setSubmitting(false);\n      }}\n    >\n      {({ errors, setFieldValue }) => (\n        <Form autoComplete=\"off\" className={styles.form}>\n          <div className={styles.wrap}>\n            <Field\n              className={styles.input}\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Enter your name\"\n              value={name}\n              onChange={e => handleChange(e, setFieldValue)}\n            />\n            {errors.name && <FormError name=\"name\" />}\n          </div>\n\n          <div className={styles.wrap}>\n            <Field\n              className={styles.input}\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter your email\"\n              value={email}\n              onChange={e => handleChange(e, setFieldValue)}\n            />\n            {errors.email && <FormError name=\"email\" />}\n          </div>\n\n          <div className={styles.wrap}>\n            <Field\n              className={styles.input}\n              type={passwordShown ? 'text' : 'password'}\n              name=\"password\"\n              placeholder=\"Create a password\"\n              value={password}\n              onChange={e => handleChange(e, setFieldValue)}\n            />\n\n            <span className={styles.eye_icon} onClick={togglPassword}>\n              {passwordIcon}\n            </span>\n            {errors.password && <FormError name=\"password\" />}\n          </div>\n\n          <button\n            className={styles.btn}\n            type=\"submit\"\n            onClick={() => {\n              setFieldValue('name', name);\n              setFieldValue('email', email);\n              setFieldValue('password', password);\n            }}\n          >\n            <div className={styles.wrap}>\n              <span>Register Now</span>\n              <Loader />\n            </div>\n          </button>\n          <a href=\"https://project-react-node-back.onrender.com/api/users/google\" className={styles.authGoogleLink}>\n              <svg className={styles.googleIcon} width=\"24\" height=\"24\" viewBox=\"0 0 18 18\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                  d=\"M17.64 9.2c0-.637-.057-1.251-.164-1.84H9v3.481h4.844c-.209 1.125-.843 2.078-1.796 2.717v2.258h2.908c1.702-1.567 2.684-3.874 2.684-6.615z\"\n                  fillRule=\"evenodd\"\n                  fillOpacity=\"1\"\n                  fill=\"#4285f4\"\n                  stroke=\"none\">\n                </path>\n                <path\n                  d=\"M9.003 18c2.43 0 4.467-.806 5.956-2.18L12.05 13.56c-.806.54-1.836.86-3.047.86-2.344 0-4.328-1.584-5.036-3.711H.96v2.332C2.44 15.983 5.485 18 9.003 18z\"\n                  fillRule=\"evenodd\"\n                  fillOpacity=\"1\"\n                  fill=\"#34a853\"\n                  stroke=\"none\">\n                </path>\n                <path\n                  d=\"M3.964 10.712c-.18-.54-.282-1.117-.282-1.71 0-.593.102-1.17.282-1.71V4.96H.957C.347 6.175 0 7.55 0 9.002c0 1.452.348 2.827.957 4.042l3.007-2.332z\"\n                  fillRule=\"evenodd\"\n                  fillOpacity=\"1\"\n                  fill=\"#fbbc05\"\n                  stroke=\"none\">\n                </path>\n                <path\n                  d=\"M9.003 3.58c1.321 0 2.508.454 3.44 1.345l2.582-2.58C13.464.891 11.428 0 9.002 0 5.485 0 2.44 2.017.96 4.958L3.967 7.29c.708-2.127 2.692-3.71 5.036-3.71z\"\n                  fillRule=\"evenodd\"\n                  fillOpacity=\"1\"\n                  fill=\"#ea4335\"\n                  stroke=\"none\">\n                </path>\n            </svg>\n            Continue with Google\n          </a>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import { object, string } from 'yup';\n\nexport const logInSchema = object({\n  email: string()\n    .email()\n    .matches(/^[a-zA-Z0-9]+@[a-zA-Z]+\\.[a-zA-Z]{2,3}$/, 'Invalid email format')\n    .required(),\n  password: string()\n    .min(8, 'minimum 8 characters')\n    .max(64, 'maximum 64 characters')\n    .test(\n      'no-spaces',\n      'Invalid format: without spaces',\n      value => !/\\s/.test(value)\n    )\n    .test(\n      'only-allowed-chars',\n      'password can contain: only Latin, numbers, special characters',\n      value => /^[a-zA-Z0-9\\-!@#$%^&*()_+,.:;’“?/]+$/.test(value)\n    )\n    .matches(/^[a-zA-Z0-9\\-!@#$%^&*()_+,.:;’“?/]+$/, 'Invalid password format')\n    .required(),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__kAAji\",\"input\":\"LoginForm_input__PAmpS\",\"btn\":\"LoginForm_btn__FhNJ8\",\"authGoogleLink\":\"LoginForm_authGoogleLink__xNxU3\",\"googleIcon\":\"LoginForm_googleIcon__039TR\",\"wrap\":\"LoginForm_wrap__3kWB9\",\"eye_icon\":\"LoginForm_eye_icon__3QyHE\",\"error\":\"LoginForm_error__h4+iP\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { logInSchema } from '../LogInSchema/LogInSchema';\nimport { EyeOpen } from '../EyeOpen/EyeOpen';\nimport { EyeClose } from '../EyeClose/EyeClose';\nimport { logIn } from 'redux/auth/operations';\nimport { Loader } from '../../Loader/Loader';\nimport styles from './LoginForm.module.css';\nimport { selectIsLoggedIn } from 'redux/auth/selectors';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nexport const LogInForm = () => {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [passwordShown, setPasswordShown] = useState(false);\n  const [passwordIcon, setpasswordIcon] = useState(<EyeClose />);\n\n  const togglPassword = () => {\n    setPasswordShown(!passwordShown);\n    setpasswordIcon(!passwordShown ? <EyeOpen /> : <EyeClose />);\n  };\n\n  const FormError = ({ name }) => {\n    return (\n      <ErrorMessage\n        name={name}\n        render={message => <p className={styles.error}>{message}</p>}\n      />\n    );\n  };\n\n  const handleChange = ({ target: { name, value } }, setFieldValue) => {\n    setFieldValue(name, value);\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={logInSchema}\n      onSubmit={(values, { setSubmitting }) => {\n        dispatch(\n          logIn({\n            email: email.toLowerCase(),\n            password: password,\n          })\n        );\n\n        if (!isLoggedIn) return;\n\n        setEmail('');\n        setPassword('');\n        setSubmitting(false);\n      }}\n    >\n      {({ errors, setFieldValue }) => (\n        <Form autoComplete=\"off\" className={styles.form}>\n          <div className={styles.wrap}>\n            <Field\n              className={styles.input}\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter your email\"\n              value={email}\n              onChange={e => handleChange(e, setFieldValue)}\n            />\n            {errors.email && <FormError name=\"email\" />}\n          </div>\n\n          <div className={styles.wrap}>\n            <Field\n              className={styles.input}\n              type={passwordShown ? 'text' : 'password'}\n              name=\"password\"\n              placeholder=\"Confirm a password\"\n              value={password}\n              onChange={e => handleChange(e, setFieldValue)}\n            />\n\n            <span className={styles.eye_icon} onClick={togglPassword}>\n              {passwordIcon}\n            </span>\n            {errors.password && <FormError name=\"password\" />}\n          </div>\n\n          <button\n            className={styles.btn}\n            type=\"submit\"\n            onClick={() => {\n              setFieldValue('email', email);\n              setFieldValue('password', password);\n            }}\n          >\n            <div className={styles.wrap}>\n              <span>Log In Now</span>\n              <Loader />\n            </div>\n          </button>\n          <a href=\"https://project-react-node-back.onrender.com/api/users/google\" className={styles.authGoogleLink}>\n              <svg className={styles.googleIcon} width=\"24\" height=\"24\" viewBox=\"0 0 18 18\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                  d=\"M17.64 9.2c0-.637-.057-1.251-.164-1.84H9v3.481h4.844c-.209 1.125-.843 2.078-1.796 2.717v2.258h2.908c1.702-1.567 2.684-3.874 2.684-6.615z\"\n                  fillRule=\"evenodd\"\n                  fillOpacity=\"1\"\n                  fill=\"#4285f4\"\n                  stroke=\"none\">\n                </path>\n                <path\n                  d=\"M9.003 18c2.43 0 4.467-.806 5.956-2.18L12.05 13.56c-.806.54-1.836.86-3.047.86-2.344 0-4.328-1.584-5.036-3.711H.96v2.332C2.44 15.983 5.485 18 9.003 18z\"\n                  fillRule=\"evenodd\"\n                  fillOpacity=\"1\"\n                  fill=\"#34a853\"\n                  stroke=\"none\">\n                </path>\n                <path\n                  d=\"M3.964 10.712c-.18-.54-.282-1.117-.282-1.71 0-.593.102-1.17.282-1.71V4.96H.957C.347 6.175 0 7.55 0 9.002c0 1.452.348 2.827.957 4.042l3.007-2.332z\"\n                  fillRule=\"evenodd\"\n                  fillOpacity=\"1\"\n                  fill=\"#fbbc05\"\n                  stroke=\"none\">\n                </path>\n                <path\n                  d=\"M9.003 3.58c1.321 0 2.508.454 3.44 1.345l2.582-2.58C13.464.891 11.428 0 9.002 0 5.485 0 2.44 2.017.96 4.958L3.967 7.29c.708-2.127 2.692-3.71 5.036-3.71z\"\n                  fillRule=\"evenodd\"\n                  fillOpacity=\"1\"\n                  fill=\"#ea4335\"\n                  stroke=\"none\">\n                </path>\n            </svg>\n            Continue with Google\n          </a>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import { useParams, Link, useSearchParams, useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport styles from './AuthPage.module.css';\nimport { RegisterForm } from '../../components/AuthForm/RegisterForm/RegisterForm';\nimport { LogInForm } from '../../components/AuthForm/LogInForm/LogInForm';\nimport { useEffect } from 'react';\nimport { logInWithGoogle } from 'redux/auth/operations';\n\nexport default function AuthPage () {\n  const { id } = useParams();\n  const [searchParams] = useSearchParams();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (id.length > 100) {\n      const name = searchParams.get(\"name\");\n      const email = searchParams.get(\"email\");\n      const theme = searchParams.get(\"theme\");\n      const avatarURL = searchParams.get(\"avatarURL\");\n\n      dispatch(logInWithGoogle({\n        accessToken: id,\n        user: {\n          name,\n          email,\n          theme,\n          avatarURL,\n        },\n      }));\n\n      navigate(\"/home\", { replace: true });\n    };\n  });\n\n  return (\n    <section className={styles.section}>\n      <div className={styles.wrapper}>\n        {id === 'login' && (\n          <div className={styles.register_form_window}>\n            <div>\n              <Link\n                to=\"/auth/register\"\n                className={(styles.form_title, styles.active)}\n              >\n                Registration\n              </Link>\n              <span className={styles.form_title}>Log In</span>\n            </div>\n            <LogInForm />\n          </div>\n        )}\n        {id === 'register' && (\n          <div className={styles.register_form_window}>\n            <div>\n              <span className={styles.form_title}>Registration</span>\n              <Link\n                to=\"/auth/login\"\n                className={(styles.form_title, styles.active)}\n              >\n                Log In\n              </Link>\n            </div>\n            <RegisterForm />\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n"],"names":["EyeClose","className","styles","href","sprite","EyeOpen","registerSchema","object","name","string","min","max","test","value","matches","required","email","password","initialValues","RegisterForm","dispatch","useDispatch","useState","setName","setEmail","setPassword","passwordShown","setPasswordShown","passwordIcon","setpasswordIcon","togglPassword","FormError","render","message","handleChange","setFieldValue","target","validationSchema","onSubmit","values","setSubmitting","register","toLowerCase","errors","autoComplete","type","placeholder","onChange","e","onClick","Loader","width","height","viewBox","xmlns","d","fillRule","fillOpacity","fill","stroke","logInSchema","LogInForm","isLoggedIn","useSelector","selectIsLoggedIn","logIn","AuthPage","id","useParams","useSearchParams","searchParams","navigate","useNavigate","useEffect","length","get","theme","avatarURL","logInWithGoogle","accessToken","user","replace","to"],"sourceRoot":""}